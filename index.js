/*! For license information please see index.js.LICENSE.txt */
(()=>{"use strict";var e,t,n,i,r={44:(e,t,n)=>{var i=n(241);e.exports=n.v(t,e.id,"1455f4b95a042c0990ab",{"./index_bg.js":{__wbg_interfacefemdeformable_new:i.vbf,__wbg_interfacemassspringdeformable_new:i.yNk,__wbg_interfacemechanismstate_new:i.Ow3,__wbindgen_object_drop_ref:i.bkt,__wbindgen_string_get:i.qNE,__wbindgen_string_new:i.ycJ,__wbindgen_cb_drop:i.LCp,__wbg_new_8a6f238a6ece86ea:i.$Pc,__wbg_stack_0ed75d68575b0f3c:i.x$X,__wbg_error_7534b8e9a36f1ab4:i.WYM,__wbg_setbinding_5276d6202fceba46:i.D4L,__wbg_setvisibility_7245f1acbedb4ff4:i.lAr,__wbg_settype_0b59dd5f4721c490:i.Mnx,__wbg_setsampler_a778272f31d31ce5:i.ehv,__wbg_setmultisampled_0bb9fc1b577bf11a:i.VRP,__wbg_sethasdynamicoffset_b34dfdba692a7959:i.Zws,__wbg_setminbindingsize_20ca594cd6d93818:i.ZHv,__wbg_settype_8c8bbfab4cf7e32e:i.mx$,__wbg_setbuffer_1acdac44d9638973:i.dlv,__wbg_setsampletype_c0e25b966db74174:i.a$B,__wbg_setviewdimension_f5d4b5336a27d302:i.xNl,__wbg_settexture_f62859f817324dd1:i.KS6,__wbg_setformat_beb33029aea4cf8e:i.nd4,__wbg_setaccess_b20bfa3ec6b65d05:i.hJw,__wbg_setviewdimension_afac48443b8fb565:i.esQ,__wbg_setstoragetexture_2987339fec972d54:i.p$s,__wbindgen_object_clone_ref:i.BZb,__wbg_setbuffer_74b7b0adf855cf1a:i.NBD,__wbg_setoffset_d37e5fa34e9ded2e:i.U7A,__wbg_setsize_5878aadcd23673cf:i.LSi,__wbg_setbinding_9e9ed8b6e1418176:i.Tjt,__wbg_setresource_1659f5a29a2e0541:i.H5s,__wbg_instanceof_GpuAdapter_331cc7dcda68de8c:i.THL,__wbg_queue_0ffbb97537a0c4ed:i.C3o,__wbg_Window_9e7ea8667e28eb00:i.vYo,__wbindgen_is_undefined:i.vUM,__wbg_WorkerGlobalScope_0169ffb9adb5f5ef:i.p_A,__wbg_gpu_1b22165b67dd5a59:i.zQq,__wbindgen_is_null:i.QRh,__wbg_setpowerpreference_1f3351e5d2acf765:i.ENX,__wbg_requestAdapter_f09d28b3f37de26c:i.$Kc,__wbindgen_number_new:i.QRK,__wbg_setrequiredfeatures_fc44bc3433300ee3:i._$u,__wbg_setlabel_f9a45e9ef445b781:i.M47,__wbg_requestDevice_51509dadc50b2e9d:i.Z46,__wbg_setcode_6b6ad02fc1705aa2:i.Hv4,__wbg_setlabel_e6fab993e10f1dd3:i.man,__wbg_createShaderModule_9ec201507fe4949e:i.Unn,__wbg_setentries_5941f16619f54d42:i.qWt,__wbg_setlabel_1df8805b2aad72d7:i.zGz,__wbg_createBindGroupLayout_f0635625a1a82bea:i.RZ8,__wbg_setentries_97a6ad10aa7fa4d1:i.dtP,__wbg_setlayout_67a29edc6247c437:i.uqL,__wbg_setlabel_76b058f0224eb49e:i.ywv,__wbg_createBindGroup_043b06d20124f91e:i.gVi,__wbg_setbindgrouplayouts_8de6e109dd34a448:i.eTY,__wbg_setlabel_969d6f8279c74456:i.wik,__wbg_createPipelineLayout_5cc7e994e46201c7:i.Kan,__wbg_setmodule_7d5ff73dea7c42f9:i.OLt,__wbg_setentrypoint_ec35a2279c4d6dd5:i.eT0,__wbg_setlayout_cade01d14a230b20:i.Ced,__wbg_setcompute_be8170281283a813:i.U_v,__wbg_setlabel_0fab35538b0283a8:i.mvO,__wbg_createComputePipeline_059cf7af9b47a3fc:i.Y0x,__wbg_setsize_23676383c9c0732f:i.zNy,__wbg_setusage_c45cca4a5b9f8376:i.Q5w,__wbg_setmappedatcreation_0dc5796d4e90ab4b:i.DF5,__wbg_setlabel_c14214ffbf6e5c4a:i.atZ,__wbg_createBuffer_086a8bb05ced884a:i.MZS,__wbg_setlabel_57008c2e11276b5e:i.WOG,__wbg_createCommandEncoder_aa9ae9d445bb7abf:i.Rwh,__wbg_writeBuffer_3193eaacefdcf39a:i.vCr,__wbg_submit_252766c4e0945cee:i.CLN,__wbg_mapAsync_61fd3c4dd9f60c6d:i.swM,__wbg_getMappedRange_b986a889b6b53379:i.LQ1,__wbg_unmap_7b299155f31a9d79:i._Qc,__wbg_copyBufferToBuffer_0d141e7111b0b6ab:i.dEj,__wbg_setlabel_190cc9c7ee762bf6:i.L3o,__wbg_setqueryset_4475a28689089d2c:i.Dlh,__wbg_setbeginningofpasswriteindex_703995fcd4f84112:i.hH2,__wbg_setendofpasswriteindex_bbe4757d0b985fd3:i.e$2,__wbg_settimestampwrites_bebe8db3de77d9e1:i.az_,__wbg_beginComputePass_01f3206a4680f256:i.k8A,__wbg_label_7045a786095b1bab:i.nZe,__wbg_finish_db34a19c90c07af7:i.A0i,__wbg_setlabel_89c327fa94d8076b:i.Gy,__wbg_finish_e2d3808af76b422a:i.zZJ,__wbg_setPipeline_8fae997f5442e9b2:i.Jgt,__wbg_setBindGroup_5c9e5848197493ea:i.VFl,__wbg_setBindGroup_2c96f34332734c38:i.mcs,__wbg_dispatchWorkgroups_6558b6463978b7da:i.N0b,__wbg_end_59d0481d5eaa66e6:i.s0W,__wbg_queueMicrotask_d3219def82552485:i.k2R,__wbindgen_is_function:i.PRY,__wbg_queueMicrotask_97d92b4fcc8a61c5:i._mt,__wbindgen_number_get:i.sWe,__wbindgen_boolean_get:i.NhE,__wbg_instanceof_WebGl2RenderingContext_2b6045efeb76568d:i.$nJ,__wbg_beginQuery_6af0b28414b16c07:i.n1G,__wbg_bindBufferRange_454f90f2b1781982:i.JoZ,__wbg_bindSampler_9f59cf2eaa22eee0:i._Zb,__wbg_bindVertexArray_6b4b88581064b71f:i.pFK,__wbg_blitFramebuffer_7303bdff77cfe967:i.kzL,__wbg_bufferData_463178757784fcac:i.biQ,__wbg_bufferData_3261d3e1dd6fc903:i.R_j,__wbg_bufferSubData_4e973eefe9236d04:i.ab,__wbg_clearBufferfv_65ea413f7f2554a2:i.XGN,__wbg_clearBufferiv_c003c27b77a0245b:i.Hxr,__wbg_clearBufferuiv_8c285072f2026a37:i.uYA,__wbg_clientWaitSync_6930890a42bd44c0:i.va8,__wbg_compressedTexSubImage2D_71877eec950ca069:i.edx,__wbg_compressedTexSubImage2D_99abf4cfdb7c3fd8:i.vqF,__wbg_compressedTexSubImage3D_81477746675a4017:i.Cmg,__wbg_compressedTexSubImage3D_58506392da46b927:i.mID,__wbg_copyBufferSubData_9469a965478e33b5:i.CTb,__wbg_copyTexSubImage3D_32e92c94044e58ca:i.It8,__wbg_createQuery_5ed5e770ec1009c1:i.HxU,__wbg_createSampler_f76e29d7522bec9e:i.yNj,__wbg_createVertexArray_e435029ae2660efd:i.dpx,__wbg_deleteQuery_6a2b7cd30074b20b:i.VOO,__wbg_deleteSampler_7f02bb003ba547f0:i.JcA,__wbg_deleteSync_5a3fbe5d6b742398:i.fm7,__wbg_deleteVertexArray_77fe73664a3332ae:i.SMp,__wbg_drawArraysInstanced_622ea9f149b0b80c:i.uJK,__wbg_drawBuffers_e729b75c5a50d760:i._q7,__wbg_drawElementsInstanced_f874e87d0b4e95e9:i.jqP,__wbg_endQuery_17aac36532ca7d47:i.EKX,__wbg_fenceSync_02d142d21e315da6:i.WZM,__wbg_framebufferTextureLayer_5e6bd1b0cb45d815:i.l7J,__wbg_getBufferSubData_8ab2dcc5fcf5770f:i.rDt,__wbg_getIndexedParameter_f9211edc36533919:i.B_i,__wbg_getQueryParameter_8921497e1d1561c1:i.z4O,__wbg_getSyncParameter_7cb8461f5891606c:i.mOz,__wbg_getUniformBlockIndex_288fdc31528171ca:i.V4m,__wbg_invalidateFramebuffer_83f643d2a4936456:i.J$Y,__wbg_readBuffer_1c35b1e4939f881d:i.haC,__wbg_readPixels_51a0c02cdee207a5:i.cWK,__wbg_readPixels_a6cbb21794452142:i.vj2,__wbg_renderbufferStorageMultisample_13fbd5e58900c6fe:i.$54,__wbg_samplerParameterf_909baf50360c94d4:i.rFL,__wbg_samplerParameteri_d5c292172718da63:i.IRU,__wbg_texImage2D_5f2835f02b1d1077:i.sLg,__wbg_texImage2D_57483314967bdd11:i.MW2,__wbg_texImage3D_a00b7a4df48cf757:i.Xj0,__wbg_texImage3D_921b54d09bf45af0:i.u1z,__wbg_texStorage2D_fbda848497f3674e:i.H3_,__wbg_texStorage3D_fd7a7ca30e7981d1:i.tCD,__wbg_texSubImage2D_fbdf91268228c757:i.HcK,__wbg_texSubImage2D_c7951ed97252bdff:i.eg2,__wbg_texSubImage2D_aa9a084093764796:i.Sp_,__wbg_texSubImage2D_f39ea52a2d4bd2f7:i.kEf,__wbg_texSubImage2D_e6d34f5bb062e404:i.xCe,__wbg_texSubImage2D_dd9cac68ad5fe0b6:i.SMz,__wbg_texSubImage2D_061605071aad9d2c:i.VBJ,__wbg_texSubImage3D_b28c55f839bbec41:i.akg,__wbg_texSubImage3D_04731251d7cecc83:i.l7f,__wbg_texSubImage3D_f18bf091cd48774c:i.fXd,__wbg_texSubImage3D_66acd67f56e3b214:i.Pyu,__wbg_texSubImage3D_37f0045d16871670:i.t2e,__wbg_texSubImage3D_3a871f6405d2f183:i.RBH,__wbg_texSubImage3D_a051de089266fa1b:i.hBy,__wbg_uniform1ui_66e092b67a21c84d:i.y3A,__wbg_uniform2fv_d8bd2a36da7ce440:i.Nc6,__wbg_uniform2iv_4d39fc5a26f03f55:i.MyH,__wbg_uniform2uiv_4c340c9e8477bb07:i.PX6,__wbg_uniform3fv_7d828b7c4c91138e:i.jUi,__wbg_uniform3iv_f30d27ec224b4b24:i.$PD,__wbg_uniform3uiv_38673b825dc755f6:i.udC,__wbg_uniform4fv_8827081a7585145b:i.Dfn,__wbg_uniform4iv_84fdf80745e7ff26:i.i3N,__wbg_uniform4uiv_9de55998fbfef236:i.Hxo,__wbg_uniformBlockBinding_18117f4bda07115b:i.CGD,__wbg_uniformMatrix2fv_bc019eb4784a3b8c:i.uPV,__wbg_uniformMatrix2x3fv_6421f8d6f7f4d144:i.wht,__wbg_uniformMatrix2x4fv_27d807767d7aadc6:i.SD7,__wbg_uniformMatrix3fv_3df529aab93cf902:i.sgF,__wbg_uniformMatrix3x2fv_79357317e9637d05:i.cou,__wbg_uniformMatrix3x4fv_9d1a88b5abfbd64b:i.S9k,__wbg_uniformMatrix4fv_e87383507ae75670:i.p99,__wbg_uniformMatrix4x2fv_aa507d918a0b5a62:i.N7m,__wbg_uniformMatrix4x3fv_6712c7a3b4276fb4:i.Wds,__wbg_vertexAttribDivisor_4d361d77ffb6d3ff:i.Eyb,__wbg_vertexAttribIPointer_d0c67543348c90ce:i.gNe,__wbg_activeTexture_460f2e367e813fb0:i.s8_,__wbg_attachShader_3d4eb6af9e3e7bd1:i.kGM,__wbg_bindAttribLocation_40da4b3e84cc7bd5:i.GIr,__wbg_bindBuffer_309c9a6c21826cf5:i.ZsK,__wbg_bindFramebuffer_e48e83c0f973944d:i.deo,__wbg_bindRenderbuffer_55e205fecfddbb8c:i.rBU,__wbg_bindTexture_a6e795697f49ebd1:i.rhW,__wbg_blendColor_15ba1eff44560932:i.lF0,__wbg_blendEquation_c23d111ad6d268ff:i.MIe,__wbg_blendEquationSeparate_f3d422e981d86339:i.Gq6,__wbg_blendFunc_c3b74be5a39c665f:i.s1T,__wbg_blendFuncSeparate_dafeabfc1680b2ee:i.ezo,__wbg_clear_62b9037b892f6988:i.Lh6,__wbg_clearDepth_670d19914a501259:i.TMx,__wbg_clearStencil_4323424f1acca0df:i.vBH,__wbg_colorMask_5e7c60b9c7a57a2e:i.S55,__wbg_compileShader_0ad770bbdbb9de21:i.VUC,__wbg_copyTexSubImage2D_05e7e8df6814a705:i.WgO,__wbg_createBuffer_9886e84a67b68c89:i.RLH,__wbg_createFramebuffer_c8d70ebc4858051e:i.CrI,__wbg_createProgram_da203074cafb1038:i.cyt,__wbg_createRenderbuffer_d88aa9403faa38ea:i.CMF,__wbg_createShader_983150fb1243ee56:i.fHS,__wbg_createTexture_bfaa54c0cd22e367:i.qyd,__wbg_cullFace_187079e6e20a464d:i.$hO,__wbg_deleteBuffer_7ed96e1bf7c02e87:i.PgH,__wbg_deleteFramebuffer_66853fb7101488cb:i.Fx8,__wbg_deleteProgram_71a133c6d053e272:i.h8E,__wbg_deleteRenderbuffer_59f4369653485031:i.d_i,__wbg_deleteShader_8d42f169deda58ac:i.ui$,__wbg_deleteTexture_bb82c9fec34372ba:i.d$C,__wbg_depthFunc_f34449ae87cc4e3e:i.sgz,__wbg_depthMask_76688a8638b2f321:i.J4C,__wbg_depthRange_f9c084ff3d81fd7b:i.GH5,__wbg_disable_2702df5b5da5dd21:i.Dm0,__wbg_disableVertexAttribArray_452cc9815fced7e4:i.kfZ,__wbg_drawArrays_6d29ea2ebc0c72a2:i.v$G,__wbg_enable_51114837e05ee280:i.UUJ,__wbg_enableVertexAttribArray_93c3d406a41ad6c7:i.qI_,__wbg_flush_4150080f65c49208:i.Y_e,__wbg_framebufferRenderbuffer_8b88592753b54715:i.ZXk,__wbg_framebufferTexture2D_ed855d0b097c557a:i.xl2,__wbg_frontFace_289c9d7a8569c4f2:i.xiP,__wbg_getExtension_ff0fb1398bcf28c3:i.ijB,__wbg_getParameter_e3429f024018310f:i.eWC,__wbg_getProgramInfoLog_a998105a680059db:i.hK5,__wbg_getProgramParameter_360f95ff07ac068d:i.GbS,__wbg_getShaderInfoLog_f59c3112acc6e039:i.UNs,__wbg_getShaderParameter_511b5f929074fa31:i.zsB,__wbg_getSupportedExtensions_8c007dbb54905635:i.qgk,__wbg_getUniformLocation_657a2b6d102bd126:i.dyN,__wbg_linkProgram_067ee06739bdde81:i.VVK,__wbg_pixelStorei_c8520e4b46f4a973:i.m0F,__wbg_polygonOffset_773fe0017b2c8f51:i.zby,__wbg_renderbufferStorage_f010012bd3566942:i.Rqq,__wbg_scissor_e917a332f67a5d30:i.c8_,__wbg_shaderSource_72d3e8597ef85b67:i.G_z,__wbg_stencilFuncSeparate_c1a6fa2005ca0aaf:i.H2O,__wbg_stencilMask_cd8ca0a55817e599:i.b$z,__wbg_stencilMaskSeparate_f8a0cfb5c2994d4a:i.pKw,__wbg_stencilOpSeparate_ff6683bbe3838ae6:i.Ta1,__wbg_texParameteri_8112b26b3c360b7e:i.zve,__wbg_uniform1f_dc009a0e7f7e5977:i.pY8,__wbg_uniform1i_ed95b6129dce4d84:i.Uo2,__wbg_uniform4f_36b8f9be15064aa7:i.DoT,__wbg_useProgram_9b2660f7bb210471:i.l4v,__wbg_vertexAttribPointer_550dc34903e3d1ea:i.TgG,__wbg_viewport_e615e98f676f2d39:i.Lk4,__wbg_instanceof_Window_def73ea0955fc569:i.vF0,__wbg_document_d249400bd7bd996d:i.GhA,__wbg_navigator_1577371c070c8947:i.Imq,__wbg_performance_c185c0cdc2766575:i.jnf,__wbg_fetch_1b7e793ab8320753:i.wBE,__wbg_querySelector_c69f8b573958906b:i.Iig,__wbg_navigator_0a9bf1120e24fec2:i.x6S,__wbg_bufferData_d99b6b4eb5283f20:i.Kec,__wbg_bufferData_33c59bf909ea6fd3:i.NRY,__wbg_bufferSubData_dcd4d16031a60345:i.MlO,__wbg_compressedTexSubImage2D_d66dcfcb2422e703:i.tRb,__wbg_readPixels_cd64c5a7b0343355:i.QS3,__wbg_texImage2D_b8edcb5692f65f88:i.uyA,__wbg_texSubImage2D_d52d1a0d3654c60b:i.vxx,__wbg_uniform2fv_656fce9525420996:i.L_l,__wbg_uniform2iv_e967139a28017a99:i.uNT,__wbg_uniform3fv_8153c834ce667125:i._M_,__wbg_uniform3iv_58662d914661aa10:i.gmt,__wbg_uniform4fv_c01fbc6c022abac3:i.x8H,__wbg_uniform4iv_7fe05be291899f06:i.wzN,__wbg_uniformMatrix2fv_98681e400347369c:i.UKu,__wbg_uniformMatrix3fv_3d6ad3a1e0b0b5b6:i.GGS,__wbg_uniformMatrix4fv_da94083874f202ad:i.bBT,__wbg_activeTexture_0f19d8acfa0a14c2:i.Erh,__wbg_attachShader_94e758c8b5283eb2:i.d0z,__wbg_bindAttribLocation_ce2730e29976d230:i.qsm,__wbg_bindBuffer_f32f587f1c2962a7:i.UrN,__wbg_bindFramebuffer_bd02c8cc707d670f:i.lry,__wbg_bindRenderbuffer_53eedd88e52b4cb5:i.wu_,__wbg_bindTexture_bc8eb316247f739d:i.Du1,__wbg_blendColor_6446fba673f64ff0:i.O30,__wbg_blendEquation_cec7bc41f3e5704c:i.tBX,__wbg_blendEquationSeparate_c1aa26a9a5c5267e:i.H4Z,__wbg_blendFunc_9454884a3cfd2911:i.GNz,__wbg_blendFuncSeparate_483be8d4dd635340:i.Mip,__wbg_clear_f8d5f3c348d37d95:i.evT,__wbg_clearDepth_17cfee5be8476fae:i.Bu4,__wbg_clearStencil_7addd3b330b56b27:i.Vrt,__wbg_colorMask_6dac12039c7145ae:i.jzA,__wbg_compileShader_2307c9d370717dd5:i.HdZ,__wbg_copyTexSubImage2D_607ad28606952982:i.fxK,__wbg_createBuffer_7a9ec3d654073660:i.GL7,__wbg_createFramebuffer_7824f69bba778885:i.iJ1,__wbg_createProgram_8ff56c485f3233d0:i.VG9,__wbg_createRenderbuffer_fd347ae14f262eaa:i.lYD,__wbg_createShader_4a256a8cc9c1ce4f:i.WfJ,__wbg_createTexture_9c536c79b635fdef:i.UsL,__wbg_cullFace_fbae6dd4d5e61ba4:i._S2,__wbg_deleteBuffer_a7822433fc95dfb8:i.tWU,__wbg_deleteFramebuffer_cd3285ee5a702a7a:i.iS1,__wbg_deleteProgram_3fa626bbc0001eb7:i.STu,__wbg_deleteRenderbuffer_8808192853211567:i.I_O,__wbg_deleteShader_c65a44796c5004d8:i.kGc,__wbg_deleteTexture_a30f5ca0163c4110:i.ZV5,__wbg_depthFunc_2906916f4536d5d7:i.PD8,__wbg_depthMask_5fe84e2801488eda:i.KHy,__wbg_depthRange_3cd6b4dc961d9116:i.FNd,__wbg_disable_8b53998501a7a85b:i.BbO,__wbg_disableVertexAttribArray_afd097fb465dc100:i.wvU,__wbg_drawArrays_6acaa2669c105f3a:i.x_k,__wbg_enable_d183fef39258803f:i.hb9,__wbg_enableVertexAttribArray_607be07574298e5e:i.U2W,__wbg_flush_987c35de09e06fd6:i.Zdy,__wbg_framebufferRenderbuffer_2fdd12e89ad81eb9:i.FsR,__wbg_framebufferTexture2D_81a565732bd5d8fe:i.JgO,__wbg_frontFace_4d4936cfaeb8b7df:i.ZGT,__wbg_getParameter_1f0887a2b88e6d19:i.qoe,__wbg_getProgramInfoLog_631c180b1b21c8ed:i.LKB,__wbg_getProgramParameter_0c411f0cd4185c5b:i.oeS,__wbg_getShaderInfoLog_7e7b38fb910ec534:i.uJ9,__wbg_getShaderParameter_6dbe0b8558dc41fd:i.siT,__wbg_getUniformLocation_838363001c74dc21:i.YBk,__wbg_linkProgram_e002979fe36e5b2a:i.AoQ,__wbg_pixelStorei_6aba5d04cdcaeaf6:i.LF7,__wbg_polygonOffset_8c11c066486216c4:i.irV,__wbg_renderbufferStorage_73e01ea83b8afab4:i.DDW,__wbg_scissor_eb177ca33bf24a44:i.uuF,__wbg_shaderSource_ad0087e637a35191:i.ms$,__wbg_stencilFuncSeparate_91700dcf367ae07e:i.y2T,__wbg_stencilMask_1e602ef63f5b4144:i.d2d,__wbg_stencilMaskSeparate_4f1a2defc8c10956:i.ExB,__wbg_stencilOpSeparate_1fa08985e79e1627:i.DgC,__wbg_texParameteri_ef50743cb94d507e:i.h$A,__wbg_uniform1f_21390b04609a9fa5:i.cIF,__wbg_uniform1i_5ddd9d8ccbd390bb:i.nAv,__wbg_uniform4f_f7ea07febf8b5108:i.sYf,__wbg_useProgram_473bf913989b6089:i.ewW,__wbg_vertexAttribPointer_7a2a506cdbe3aebc:i.clo,__wbg_viewport_a1b4d71297ba89af:i.cFT,__wbg_instanceof_HtmlCanvasElement_2ea67072a7624ac5:i.EPt,__wbg_setwidth_c5fed9f5e7f0b406:i.W_t,__wbg_setheight_da683a33fa99843c:i.eTi,__wbg_getContext_fc19859df6331073:i.cI,__wbg_setwidth_660ca581e3fbe279:i.o2s,__wbg_setheight_433680330c9420c3:i.i1o,__wbg_getContext_3ae09aaa73194801:i.M6L,__wbg_getSupportedProfiles_10d2a4d32a128384:i.Xvg,__wbg_queryCounterEXT_7aed85645b7ec1da:i.kD2,__wbg_framebufferTextureMultiviewOVR_e54f936c3cc382cb:i.QPw,__wbg_now_d18023d54d4e5500:i.pDX,__wbg_drawBuffersWEBGL_9fdbdf3d4cbd3aae:i.mFY,__wbg_drawArraysInstancedANGLE_342ee6b5236d9702:i.ix7,__wbg_drawElementsInstancedANGLE_096b48ab8686c5cf:i.dce,__wbg_vertexAttribDivisorANGLE_11e909d332960413:i.E5R,__wbg_instanceof_Response_f2cc20d9f7dfd644:i.Hzn,__wbg_text_7805bea50de2af49:i.gtG,__wbg_bindVertexArrayOES_da8e7059b789629e:i.dfz,__wbg_createVertexArrayOES_991b44f100f93329:i.ZX6,__wbg_deleteVertexArrayOES_1ee7a06a4b23ec8c:i.S$8,__wbg_performance_f71bd4abe0370171:i.sZK,__wbg_now_6f91d421b96ea22a:i.Yt6,__wbg_get_b9b93047fe3cf45b:i.RKz,__wbg_length_e2d2a49132c1b256:i.Ry,__wbg_new_78feb108b6472713:i.M2,__wbg_newnoargs_105ed471475aaf50:i.VrZ,__wbg_call_672a4d21634d4a24:i.wHY,__wbg_new_405e22f390576ce2:i.va5,__wbg_includes_937486a108ec147b:i.fx8,__wbg_of_2eaf5a02d443ef03:i.vuT,__wbg_push_737cfc8c1432c2c6:i.tZf,__wbg_call_7cccdd69e0791ae2:i.w9h,__wbg_is_c7481c65e7e5df9e:i.ywC,__wbg_new_23a2665fac83c611:i.c6u,__wbg_resolve_4851785c9c5f573d:i.wJz,__wbg_then_44b73946d2fb3e7d:i.GQG,__wbg_then_48b406749878a531:i.xV_,__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0:i.w6e,__wbg_static_accessor_SELF_37c5d418e4bf5819:i.fb$,__wbg_static_accessor_WINDOW_5de37043a91a9c40:i.x0C,__wbg_static_accessor_GLOBAL_88a902d13a557d07:i.ii7,__wbg_buffer_609cc3eee51ed158:i.FHK,__wbg_newwithbyteoffsetandlength_840f3c038856d4e9:i.dYQ,__wbg_newwithbyteoffsetandlength_f254047f7e80e7ff:i.taC,__wbg_newwithbyteoffsetandlength_999332a180064b59:i.QqI,__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a:i.hI8,__wbg_new_a12002a7f91c75be:i.vVD,__wbg_set_65595bdd868b3009:i.HBq,__wbg_length_a446193dc22c12f8:i.eIr,__wbg_newwithbyteoffsetandlength_d4a86622320ea258:i.ENm,__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212:i.QV1,__wbg_new_e3b321dcfef89fc7:i.Ys6,__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354:i.BKO,__wbg_new_780abee5c1739fd7:i.A5w,__wbg_newwithbyteoffsetandlength_93c8e0c1a479fa1a:i.$pK,__wbg_new_78c8a92080461d08:i.Yx4,__wbg_buffer_09165b52af8c5237:i._Ue,__wbg_newwithlength_5ebc38e611488614:i.Vf0,__wbg_setindex_1ee8d4cff9651c00:i.Nlo,__wbg_set_bb8cecf6a62b9f46:i.w2X,__wbindgen_debug_string:i.rl,__wbindgen_throw:i.Qnr,__wbindgen_memory:i.Py0,__wbindgen_closure_wrapper2267:i.QaU,__wbindgen_closure_wrapper2707:i.r0O}})},88:(e,t,n)=>{n.d(t,{G:()=>r});var i=n(437);i.fCn.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new i.I9Y(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}},i.zkh.line={uniforms:i.LlO.merge([i.fCn.common,i.fCn.fog,i.fCn.line]),vertexShader:"\n\t\t#include <common>\n\t\t#include <color_pars_vertex>\n\t\t#include <fog_pars_vertex>\n\t\t#include <logdepthbuf_pars_vertex>\n\t\t#include <clipping_planes_pars_vertex>\n\n\t\tuniform float linewidth;\n\t\tuniform vec2 resolution;\n\n\t\tattribute vec3 instanceStart;\n\t\tattribute vec3 instanceEnd;\n\n\t\tattribute vec3 instanceColorStart;\n\t\tattribute vec3 instanceColorEnd;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashScale;\n\t\t\tattribute float instanceDistanceStart;\n\t\t\tattribute float instanceDistanceEnd;\n\t\t\tvarying float vLineDistance;\n\n\t\t#endif\n\n\t\tvoid trimSegment( const in vec4 start, inout vec4 end ) {\n\n\t\t\t// trim end segment so it terminates between the camera plane and the near plane\n\n\t\t\t// conservative estimate of the near plane\n\t\t\tfloat a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column\n\t\t\tfloat b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column\n\t\t\tfloat nearEstimate = - 0.5 * b / a;\n\n\t\t\tfloat alpha = ( nearEstimate - start.z ) / ( end.z - start.z );\n\n\t\t\tend.xyz = mix( start.xyz, end.xyz, alpha );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#ifdef USE_COLOR\n\n\t\t\t\tvColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;\n\n\t\t\t#endif\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\tfloat aspect = resolution.x / resolution.y;\n\n\t\t\t// camera space\n\t\t\tvec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );\n\t\t\tvec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\tworldStart = start.xyz;\n\t\t\t\tworldEnd = end.xyz;\n\n\t\t\t#else\n\n\t\t\t\tvUv = uv;\n\n\t\t\t#endif\n\n\t\t\t// special case for perspective projection, and segments that terminate either in, or behind, the camera plane\n\t\t\t// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space\n\t\t\t// but we need to perform ndc-space calculations in the shader, so we must address this issue directly\n\t\t\t// perhaps there is a more elegant solution -- WestLangley\n\n\t\t\tbool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column\n\n\t\t\tif ( perspective ) {\n\n\t\t\t\tif ( start.z < 0.0 && end.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( start, end );\n\n\t\t\t\t} else if ( end.z < 0.0 && start.z >= 0.0 ) {\n\n\t\t\t\t\ttrimSegment( end, start );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// clip space\n\t\t\tvec4 clipStart = projectionMatrix * start;\n\t\t\tvec4 clipEnd = projectionMatrix * end;\n\n\t\t\t// ndc space\n\t\t\tvec3 ndcStart = clipStart.xyz / clipStart.w;\n\t\t\tvec3 ndcEnd = clipEnd.xyz / clipEnd.w;\n\n\t\t\t// direction\n\t\t\tvec2 dir = ndcEnd.xy - ndcStart.xy;\n\n\t\t\t// account for clip-space aspect ratio\n\t\t\tdir.x *= aspect;\n\t\t\tdir = normalize( dir );\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// get the offset direction as perpendicular to the view vector\n\t\t\t\tvec3 worldDir = normalize( end.xyz - start.xyz );\n\t\t\t\tvec3 offset;\n\t\t\t\tif ( position.y < 0.5 ) {\n\n\t\t\t\t\toffset = normalize( cross( start.xyz, worldDir ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\toffset = normalize( cross( end.xyz, worldDir ) );\n\n\t\t\t\t}\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\tfloat forwardOffset = dot( worldDir, vec3( 0.0, 0.0, 1.0 ) );\n\n\t\t\t\t// don't extend the line if we're rendering dashes because we\n\t\t\t\t// won't be rendering the endcaps\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t// extend the line bounds to encompass  endcaps\n\t\t\t\t\tstart.xyz += - worldDir * linewidth * 0.5;\n\t\t\t\t\tend.xyz += worldDir * linewidth * 0.5;\n\n\t\t\t\t\t// shift the position of the quad so it hugs the forward edge of the line\n\t\t\t\t\toffset.xy -= dir * forwardOffset;\n\t\t\t\t\toffset.z += 0.5;\n\n\t\t\t\t#endif\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y > 1.0 || position.y < 0.0 ) {\n\n\t\t\t\t\toffset.xy += dir * 2.0 * forwardOffset;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth * 0.5;\n\n\t\t\t\t// set the world position\n\t\t\t\tworldPos = ( position.y < 0.5 ) ? start : end;\n\t\t\t\tworldPos.xyz += offset;\n\n\t\t\t\t// project the worldpos\n\t\t\t\tvec4 clip = projectionMatrix * worldPos;\n\n\t\t\t\t// shift the depth of the projected points so the line\n\t\t\t\t// segments overlap neatly\n\t\t\t\tvec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;\n\t\t\t\tclip.z = clipPose.z * clip.w;\n\n\t\t\t#else\n\n\t\t\t\tvec2 offset = vec2( dir.y, - dir.x );\n\t\t\t\t// undo aspect ratio adjustment\n\t\t\t\tdir.x /= aspect;\n\t\t\t\toffset.x /= aspect;\n\n\t\t\t\t// sign flip\n\t\t\t\tif ( position.x < 0.0 ) offset *= - 1.0;\n\n\t\t\t\t// endcaps\n\t\t\t\tif ( position.y < 0.0 ) {\n\n\t\t\t\t\toffset += - dir;\n\n\t\t\t\t} else if ( position.y > 1.0 ) {\n\n\t\t\t\t\toffset += dir;\n\n\t\t\t\t}\n\n\t\t\t\t// adjust for linewidth\n\t\t\t\toffset *= linewidth;\n\n\t\t\t\t// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...\n\t\t\t\toffset /= resolution.y;\n\n\t\t\t\t// select end\n\t\t\t\tvec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;\n\n\t\t\t\t// back to clip space\n\t\t\t\toffset *= clip.w;\n\n\t\t\t\tclip.xy += offset;\n\n\t\t\t#endif\n\n\t\t\tgl_Position = clip;\n\n\t\t\tvec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation\n\n\t\t\t#include <logdepthbuf_vertex>\n\t\t\t#include <clipping_planes_vertex>\n\t\t\t#include <fog_vertex>\n\n\t\t}\n\t\t",fragmentShader:"\n\t\tuniform vec3 diffuse;\n\t\tuniform float opacity;\n\t\tuniform float linewidth;\n\n\t\t#ifdef USE_DASH\n\n\t\t\tuniform float dashOffset;\n\t\t\tuniform float dashSize;\n\t\t\tuniform float gapSize;\n\n\t\t#endif\n\n\t\tvarying float vLineDistance;\n\n\t\t#ifdef WORLD_UNITS\n\n\t\t\tvarying vec4 worldPos;\n\t\t\tvarying vec3 worldStart;\n\t\t\tvarying vec3 worldEnd;\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tvarying vec2 vUv;\n\n\t\t\t#endif\n\n\t\t#else\n\n\t\t\tvarying vec2 vUv;\n\n\t\t#endif\n\n\t\t#include <common>\n\t\t#include <color_pars_fragment>\n\t\t#include <fog_pars_fragment>\n\t\t#include <logdepthbuf_pars_fragment>\n\t\t#include <clipping_planes_pars_fragment>\n\n\t\tvec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {\n\n\t\t\tfloat mua;\n\t\t\tfloat mub;\n\n\t\t\tvec3 p13 = p1 - p3;\n\t\t\tvec3 p43 = p4 - p3;\n\n\t\t\tvec3 p21 = p2 - p1;\n\n\t\t\tfloat d1343 = dot( p13, p43 );\n\t\t\tfloat d4321 = dot( p43, p21 );\n\t\t\tfloat d1321 = dot( p13, p21 );\n\t\t\tfloat d4343 = dot( p43, p43 );\n\t\t\tfloat d2121 = dot( p21, p21 );\n\n\t\t\tfloat denom = d2121 * d4343 - d4321 * d4321;\n\n\t\t\tfloat numer = d1343 * d4321 - d1321 * d4343;\n\n\t\t\tmua = numer / denom;\n\t\t\tmua = clamp( mua, 0.0, 1.0 );\n\t\t\tmub = ( d1343 + d4321 * ( mua ) ) / d4343;\n\t\t\tmub = clamp( mub, 0.0, 1.0 );\n\n\t\t\treturn vec2( mua, mub );\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\t#include <clipping_planes_fragment>\n\n\t\t\t#ifdef USE_DASH\n\n\t\t\t\tif ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps\n\n\t\t\t\tif ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX\n\n\t\t\t#endif\n\n\t\t\tfloat alpha = opacity;\n\n\t\t\t#ifdef WORLD_UNITS\n\n\t\t\t\t// Find the closest points on the view ray and the line segment\n\t\t\t\tvec3 rayEnd = normalize( worldPos.xyz ) * 1e5;\n\t\t\t\tvec3 lineDir = worldEnd - worldStart;\n\t\t\t\tvec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );\n\n\t\t\t\tvec3 p1 = worldStart + lineDir * params.x;\n\t\t\t\tvec3 p2 = rayEnd * params.y;\n\t\t\t\tvec3 delta = p1 - p2;\n\t\t\t\tfloat len = length( delta );\n\t\t\t\tfloat norm = len / linewidth;\n\n\t\t\t\t#ifndef USE_DASH\n\n\t\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t\tfloat dnorm = fwidth( norm );\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );\n\n\t\t\t\t\t#else\n\n\t\t\t\t\t\tif ( norm > 0.5 ) {\n\n\t\t\t\t\t\t\tdiscard;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t#endif\n\n\t\t\t\t#endif\n\n\t\t\t#else\n\n\t\t\t\t#ifdef USE_ALPHA_TO_COVERAGE\n\n\t\t\t\t\t// artifacts appear on some hardware if a derivative is taken within a conditional\n\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\tfloat len2 = a * a + b * b;\n\t\t\t\t\tfloat dlen = fwidth( len2 );\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\talpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t#else\n\n\t\t\t\t\tif ( abs( vUv.y ) > 1.0 ) {\n\n\t\t\t\t\t\tfloat a = vUv.x;\n\t\t\t\t\t\tfloat b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;\n\t\t\t\t\t\tfloat len2 = a * a + b * b;\n\n\t\t\t\t\t\tif ( len2 > 1.0 ) discard;\n\n\t\t\t\t\t}\n\n\t\t\t\t#endif\n\n\t\t\t#endif\n\n\t\t\tvec4 diffuseColor = vec4( diffuse, alpha );\n\n\t\t\t#include <logdepthbuf_fragment>\n\t\t\t#include <color_fragment>\n\n\t\t\tgl_FragColor = vec4( diffuseColor.rgb, alpha );\n\n\t\t\t#include <tonemapping_fragment>\n\t\t\t#include <encodings_fragment>\n\t\t\t#include <fog_fragment>\n\t\t\t#include <premultiplied_alpha_fragment>\n\n\t\t}\n\t\t"};class r extends i.BKk{constructor(e){super({type:"LineMaterial",uniforms:i.LlO.clone(i.zkh.line.uniforms),vertexShader:i.zkh.line.vertexShader,fragmentShader:i.zkh.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,Object.defineProperties(this,{color:{enumerable:!0,get:function(){return this.uniforms.diffuse.value},set:function(e){this.uniforms.diffuse.value=e}},worldUnits:{enumerable:!0,get:function(){return"WORLD_UNITS"in this.defines},set:function(e){!0===e?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}},linewidth:{enumerable:!0,get:function(){return this.uniforms.linewidth.value},set:function(e){this.uniforms.linewidth.value=e}},dashed:{enumerable:!0,get:function(){return Boolean("USE_DASH"in this.defines)},set(e){Boolean(e)!==Boolean("USE_DASH"in this.defines)&&(this.needsUpdate=!0),!0===e?this.defines.USE_DASH="":delete this.defines.USE_DASH}},dashScale:{enumerable:!0,get:function(){return this.uniforms.dashScale.value},set:function(e){this.uniforms.dashScale.value=e}},dashSize:{enumerable:!0,get:function(){return this.uniforms.dashSize.value},set:function(e){this.uniforms.dashSize.value=e}},dashOffset:{enumerable:!0,get:function(){return this.uniforms.dashOffset.value},set:function(e){this.uniforms.dashOffset.value=e}},gapSize:{enumerable:!0,get:function(){return this.uniforms.gapSize.value},set:function(e){this.uniforms.gapSize.value=e}},opacity:{enumerable:!0,get:function(){return this.uniforms.opacity.value},set:function(e){this.uniforms.opacity.value=e}},resolution:{enumerable:!0,get:function(){return this.uniforms.resolution.value},set:function(e){this.uniforms.resolution.value.copy(e)}},alphaToCoverage:{enumerable:!0,get:function(){return Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)},set:function(e){Boolean(e)!==Boolean("USE_ALPHA_TO_COVERAGE"in this.defines)&&(this.needsUpdate=!0),!0===e?(this.defines.USE_ALPHA_TO_COVERAGE="",this.extensions.derivatives=!0):(delete this.defines.USE_ALPHA_TO_COVERAGE,this.extensions.derivatives=!1)}}}),this.setValues(e)}}},122:(e,t,n)=>{n.d(t,{X:()=>M});var i=n(437),r=n(643),a=n(88);const s=new i.Pq0,o=new i.Pq0,c=new i.IUQ,l=new i.IUQ,u=new i.IUQ,d=new i.Pq0,h=new i.kn4,f=new i.cZY,p=new i.Pq0,_=new i.NRn,m=new i.iyt,g=new i.IUQ;let b,v;function x(e,t,n){return g.set(0,0,-t,1).applyMatrix4(e.projectionMatrix),g.multiplyScalar(1/g.w),g.x=v/n.width,g.y=v/n.height,g.applyMatrix4(e.projectionMatrixInverse),g.multiplyScalar(1/g.w),Math.abs(Math.max(g.x,g.y))}class w extends i.eaF{constructor(e=new r.n,t=new a.G({color:16777215*Math.random()})){super(e,t),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const e=this.geometry,t=e.attributes.instanceStart,n=e.attributes.instanceEnd,r=new Float32Array(2*t.count);for(let e=0,i=0,a=t.count;e<a;e++,i+=2)s.fromBufferAttribute(t,e),o.fromBufferAttribute(n,e),r[i]=0===i?0:r[i-1],r[i+1]=r[i]+s.distanceTo(o);const a=new i.LuO(r,2,1);return e.setAttribute("instanceDistanceStart",new i.eHs(a,1,0)),e.setAttribute("instanceDistanceEnd",new i.eHs(a,1,1)),this}raycast(e,t){const n=this.material.worldUnits,r=e.camera;null!==r||n||console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const a=void 0!==e.params.Line2&&e.params.Line2.threshold||0;b=e.ray;const s=this.matrixWorld,o=this.geometry,g=this.material;let w,y;v=g.linewidth+a,null===o.boundingSphere&&o.computeBoundingSphere(),m.copy(o.boundingSphere).applyMatrix4(s),w=n?.5*v:x(r,Math.max(r.near,m.distanceToPoint(b.origin)),g.resolution),m.radius+=w,!1!==b.intersectsSphere(m)&&(null===o.boundingBox&&o.computeBoundingBox(),_.copy(o.boundingBox).applyMatrix4(s),y=n?.5*v:x(r,Math.max(r.near,_.distanceToPoint(b.origin)),g.resolution),_.expandByScalar(y),!1!==b.intersectsBox(_)&&(n?function(e,t){const n=e.matrixWorld,r=e.geometry,a=r.attributes.instanceStart,s=r.attributes.instanceEnd;for(let o=0,c=Math.min(r.instanceCount,a.count);o<c;o++){f.start.fromBufferAttribute(a,o),f.end.fromBufferAttribute(s,o),f.applyMatrix4(n);const r=new i.Pq0,c=new i.Pq0;b.distanceSqToSegment(f.start,f.end,c,r),c.distanceTo(r)<.5*v&&t.push({point:c,pointOnLine:r,distance:b.origin.distanceTo(c),object:e,face:null,faceIndex:o,uv:null,uv1:null})}}(this,t):function(e,t,n){const r=t.projectionMatrix,a=e.material.resolution,s=e.matrixWorld,o=e.geometry,_=o.attributes.instanceStart,m=o.attributes.instanceEnd,g=Math.min(o.instanceCount,_.count),x=-t.near;b.at(1,u),u.w=1,u.applyMatrix4(t.matrixWorldInverse),u.applyMatrix4(r),u.multiplyScalar(1/u.w),u.x*=a.x/2,u.y*=a.y/2,u.z=0,d.copy(u),h.multiplyMatrices(t.matrixWorldInverse,s);for(let t=0,o=g;t<o;t++){if(c.fromBufferAttribute(_,t),l.fromBufferAttribute(m,t),c.w=1,l.w=1,c.applyMatrix4(h),l.applyMatrix4(h),c.z>x&&l.z>x)continue;if(c.z>x){const e=c.z-l.z,t=(c.z-x)/e;c.lerp(l,t)}else if(l.z>x){const e=l.z-c.z,t=(l.z-x)/e;l.lerp(c,t)}c.applyMatrix4(r),l.applyMatrix4(r),c.multiplyScalar(1/c.w),l.multiplyScalar(1/l.w),c.x*=a.x/2,c.y*=a.y/2,l.x*=a.x/2,l.y*=a.y/2,f.start.copy(c),f.start.z=0,f.end.copy(l),f.end.z=0;const o=f.closestPointToPointParameter(d,!0);f.at(o,p);const u=i.cj9.lerp(c.z,l.z,o),g=u>=-1&&u<=1,w=d.distanceTo(p)<.5*v;if(g&&w){f.start.fromBufferAttribute(_,t),f.end.fromBufferAttribute(m,t),f.start.applyMatrix4(s),f.end.applyMatrix4(s);const r=new i.Pq0,a=new i.Pq0;b.distanceSqToSegment(f.start,f.end,a,r),n.push({point:a,pointOnLine:r,distance:b.origin.distanceTo(a),object:e,face:null,faceIndex:t,uv:null,uv1:null})}}}(this,r,t)))}}var y=n(949);class M extends w{constructor(e=new y.v,t=new a.G({color:16777215*Math.random()})){super(e,t),this.isLine2=!0,this.type="Line2"}}},156:(e,t,n)=>{n.a(e,(async(e,i)=>{try{n.d(t,{V:()=>c});var r=n(655),a=n(942),s=n(438),o=e([r,a]);[r,a]=o.then?(await o)():o;const c={};document.addEventListener("keydown",(e=>{c[e.key.toLowerCase()]=!0})),document.addEventListener("keyup",(e=>{c[e.key.toLowerCase()]=!1})),Promise.resolve().then(n.bind(n,655)).then((e=>{let t=0*Math.PI/180,n=new s.G([Math.sin(t),0,Math.cos(t)]);(0,r.createNavbot)().then((t=>{t.addHalfSpace(n,0);let i=e.createNavbotController(1/600),r=new e.InterfaceSimulator(t,i),s=new a.v(r);s.addNavbot(),s.updateNavbot(),s.addPlane(n,0,10),s.graphics.lookAt({eye:{x:-.5,y:0,z:.2},target:{x:0,y:0,z:0}}),s.run()}))})),i()}catch(e){i(e)}}))},216:(e,t,n)=>{n.d(t,{A:()=>c});var i=n(437);const r={type:"change"},a={type:"start"},s={type:"end"};class o extends i.Qev{constructor(e,t){super(),this.object=e,this.domElement=t,this.domElement.style.touchAction="none",this.enabled=!0,this.target=new i.Pq0,this.minDistance=0,this.maxDistance=1/0,this.minZoom=0,this.maxZoom=1/0,this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.enableDamping=!1,this.dampingFactor=.05,this.enableZoom=!0,this.zoomSpeed=1,this.enableRotate=!0,this.rotateSpeed=1,this.enablePan=!0,this.panSpeed=1,this.screenSpacePanning=!0,this.keyPanSpeed=7,this.autoRotate=!1,this.autoRotateSpeed=2,this.keys={LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"},this.mouseButtons={LEFT:i.kBv.ROTATE,MIDDLE:i.kBv.DOLLY,RIGHT:i.kBv.PAN},this.touches={ONE:i.wtR.ROTATE,TWO:i.wtR.DOLLY_PAN},this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object.zoom,this._domElementKeyEvents=null,this.getPolarAngle=function(){return u.phi},this.getAzimuthalAngle=function(){return u.theta},this.getDistance=function(){return this.object.position.distanceTo(this.target)},this.listenToKeyEvents=function(e){e.addEventListener("keydown",j),this._domElementKeyEvents=e},this.stopListenToKeyEvents=function(){this._domElementKeyEvents.removeEventListener("keydown",j),this._domElementKeyEvents=null},this.saveState=function(){n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object.zoom},this.reset=function(){n.target.copy(n.target0),n.object.position.copy(n.position0),n.object.zoom=n.zoom0,n.object.updateProjectionMatrix(),n.dispatchEvent(r),n.update(),c=o.NONE},this.update=function(){const t=new i.Pq0,a=(new i.PTz).setFromUnitVectors(e.up,new i.Pq0(0,1,0)),s=a.clone().invert(),_=new i.Pq0,m=new i.PTz,g=2*Math.PI;return function(){const e=n.object.position;t.copy(e).sub(n.target),t.applyQuaternion(a),u.setFromVector3(t),n.autoRotate&&c===o.NONE&&A(2*Math.PI/60/60*n.autoRotateSpeed),n.enableDamping?(u.theta+=d.theta*n.dampingFactor,u.phi+=d.phi*n.dampingFactor):(u.theta+=d.theta,u.phi+=d.phi);let i=n.minAzimuthAngle,b=n.maxAzimuthAngle;return isFinite(i)&&isFinite(b)&&(i<-Math.PI?i+=g:i>Math.PI&&(i-=g),b<-Math.PI?b+=g:b>Math.PI&&(b-=g),u.theta=i<=b?Math.max(i,Math.min(b,u.theta)):u.theta>(i+b)/2?Math.max(i,u.theta):Math.min(b,u.theta)),u.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,u.phi)),u.makeSafe(),u.radius*=h,u.radius=Math.max(n.minDistance,Math.min(n.maxDistance,u.radius)),!0===n.enableDamping?n.target.addScaledVector(f,n.dampingFactor):n.target.add(f),t.setFromSpherical(u),t.applyQuaternion(s),e.copy(n.target).add(t),n.object.lookAt(n.target),!0===n.enableDamping?(d.theta*=1-n.dampingFactor,d.phi*=1-n.dampingFactor,f.multiplyScalar(1-n.dampingFactor)):(d.set(0,0,0),f.set(0,0,0)),h=1,!!(p||_.distanceToSquared(n.object.position)>l||8*(1-m.dot(n.object.quaternion))>l)&&(n.dispatchEvent(r),_.copy(n.object.position),m.copy(n.object.quaternion),p=!1,!0)}}(),this.dispose=function(){n.domElement.removeEventListener("contextmenu",q),n.domElement.removeEventListener("pointerdown",k),n.domElement.removeEventListener("pointercancel",W),n.domElement.removeEventListener("wheel",X),n.domElement.removeEventListener("pointermove",V),n.domElement.removeEventListener("pointerup",W),null!==n._domElementKeyEvents&&(n._domElementKeyEvents.removeEventListener("keydown",j),n._domElementKeyEvents=null)};const n=this,o={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let c=o.NONE;const l=1e-6,u=new i.YHV,d=new i.YHV;let h=1;const f=new i.Pq0;let p=!1;const _=new i.I9Y,m=new i.I9Y,g=new i.I9Y,b=new i.I9Y,v=new i.I9Y,x=new i.I9Y,w=new i.I9Y,y=new i.I9Y,M=new i.I9Y,S=[],E={};function T(){return Math.pow(.95,n.zoomSpeed)}function A(e){d.theta-=e}function R(e){d.phi-=e}const P=function(){const e=new i.Pq0;return function(t,n){e.setFromMatrixColumn(n,0),e.multiplyScalar(-t),f.add(e)}}(),C=function(){const e=new i.Pq0;return function(t,i){!0===n.screenSpacePanning?e.setFromMatrixColumn(i,1):(e.setFromMatrixColumn(i,0),e.crossVectors(n.object.up,e)),e.multiplyScalar(t),f.add(e)}}(),L=function(){const e=new i.Pq0;return function(t,i){const r=n.domElement;if(n.object.isPerspectiveCamera){const a=n.object.position;e.copy(a).sub(n.target);let s=e.length();s*=Math.tan(n.object.fov/2*Math.PI/180),P(2*t*s/r.clientHeight,n.object.matrix),C(2*i*s/r.clientHeight,n.object.matrix)}else n.object.isOrthographicCamera?(P(t*(n.object.right-n.object.left)/n.object.zoom/r.clientWidth,n.object.matrix),C(i*(n.object.top-n.object.bottom)/n.object.zoom/r.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}}();function D(e){n.object.isPerspectiveCamera?h/=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*e)),n.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function U(e){n.object.isPerspectiveCamera?h*=e:n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/e)),n.object.updateProjectionMatrix(),p=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function I(e){_.set(e.clientX,e.clientY)}function N(e){b.set(e.clientX,e.clientY)}function O(){if(1===S.length)_.set(S[0].pageX,S[0].pageY);else{const e=.5*(S[0].pageX+S[1].pageX),t=.5*(S[0].pageY+S[1].pageY);_.set(e,t)}}function F(){if(1===S.length)b.set(S[0].pageX,S[0].pageY);else{const e=.5*(S[0].pageX+S[1].pageX),t=.5*(S[0].pageY+S[1].pageY);b.set(e,t)}}function B(){const e=S[0].pageX-S[1].pageX,t=S[0].pageY-S[1].pageY,n=Math.sqrt(e*e+t*t);w.set(0,n)}function z(e){if(1==S.length)m.set(e.pageX,e.pageY);else{const t=K(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);m.set(n,i)}g.subVectors(m,_).multiplyScalar(n.rotateSpeed);const t=n.domElement;A(2*Math.PI*g.x/t.clientHeight),R(2*Math.PI*g.y/t.clientHeight),_.copy(m)}function H(e){if(1===S.length)v.set(e.pageX,e.pageY);else{const t=K(e),n=.5*(e.pageX+t.x),i=.5*(e.pageY+t.y);v.set(n,i)}x.subVectors(v,b).multiplyScalar(n.panSpeed),L(x.x,x.y),b.copy(v)}function G(e){const t=K(e),i=e.pageX-t.x,r=e.pageY-t.y,a=Math.sqrt(i*i+r*r);y.set(0,a),M.set(0,Math.pow(y.y/w.y,n.zoomSpeed)),D(M.y),w.copy(y)}function k(e){!1!==n.enabled&&(0===S.length&&(n.domElement.setPointerCapture(e.pointerId),n.domElement.addEventListener("pointermove",V),n.domElement.addEventListener("pointerup",W)),function(e){S.push(e)}(e),"touch"===e.pointerType?function(e){switch(Y(e),S.length){case 1:switch(n.touches.ONE){case i.wtR.ROTATE:if(!1===n.enableRotate)return;O(),c=o.TOUCH_ROTATE;break;case i.wtR.PAN:if(!1===n.enablePan)return;F(),c=o.TOUCH_PAN;break;default:c=o.NONE}break;case 2:switch(n.touches.TWO){case i.wtR.DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;n.enableZoom&&B(),n.enablePan&&F(),c=o.TOUCH_DOLLY_PAN;break;case i.wtR.DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;n.enableZoom&&B(),n.enableRotate&&O(),c=o.TOUCH_DOLLY_ROTATE;break;default:c=o.NONE}break;default:c=o.NONE}c!==o.NONE&&n.dispatchEvent(a)}(e):function(e){let t;switch(e.button){case 0:t=n.mouseButtons.LEFT;break;case 1:t=n.mouseButtons.MIDDLE;break;case 2:t=n.mouseButtons.RIGHT;break;default:t=-1}switch(t){case i.kBv.DOLLY:if(!1===n.enableZoom)return;!function(e){w.set(e.clientX,e.clientY)}(e),c=o.DOLLY;break;case i.kBv.ROTATE:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enablePan)return;N(e),c=o.PAN}else{if(!1===n.enableRotate)return;I(e),c=o.ROTATE}break;case i.kBv.PAN:if(e.ctrlKey||e.metaKey||e.shiftKey){if(!1===n.enableRotate)return;I(e),c=o.ROTATE}else{if(!1===n.enablePan)return;N(e),c=o.PAN}break;default:c=o.NONE}c!==o.NONE&&n.dispatchEvent(a)}(e))}function V(e){!1!==n.enabled&&("touch"===e.pointerType?function(e){switch(Y(e),c){case o.TOUCH_ROTATE:if(!1===n.enableRotate)return;z(e),n.update();break;case o.TOUCH_PAN:if(!1===n.enablePan)return;H(e),n.update();break;case o.TOUCH_DOLLY_PAN:if(!1===n.enableZoom&&!1===n.enablePan)return;!function(e){n.enableZoom&&G(e),n.enablePan&&H(e)}(e),n.update();break;case o.TOUCH_DOLLY_ROTATE:if(!1===n.enableZoom&&!1===n.enableRotate)return;!function(e){n.enableZoom&&G(e),n.enableRotate&&z(e)}(e),n.update();break;default:c=o.NONE}}(e):function(e){switch(c){case o.ROTATE:if(!1===n.enableRotate)return;!function(e){m.set(e.clientX,e.clientY),g.subVectors(m,_).multiplyScalar(n.rotateSpeed);const t=n.domElement;A(2*Math.PI*g.x/t.clientHeight),R(2*Math.PI*g.y/t.clientHeight),_.copy(m),n.update()}(e);break;case o.DOLLY:if(!1===n.enableZoom)return;!function(e){y.set(e.clientX,e.clientY),M.subVectors(y,w),M.y>0?D(T()):M.y<0&&U(T()),w.copy(y),n.update()}(e);break;case o.PAN:if(!1===n.enablePan)return;!function(e){v.set(e.clientX,e.clientY),x.subVectors(v,b).multiplyScalar(n.panSpeed),L(x.x,x.y),b.copy(v),n.update()}(e)}}(e))}function W(e){!function(e){delete E[e.pointerId];for(let t=0;t<S.length;t++)if(S[t].pointerId==e.pointerId)return void S.splice(t,1)}(e),0===S.length&&(n.domElement.releasePointerCapture(e.pointerId),n.domElement.removeEventListener("pointermove",V),n.domElement.removeEventListener("pointerup",W)),n.dispatchEvent(s),c=o.NONE}function X(e){!1!==n.enabled&&!1!==n.enableZoom&&c===o.NONE&&(e.preventDefault(),n.dispatchEvent(a),function(e){e.deltaY<0?U(T()):e.deltaY>0&&D(T()),n.update()}(e),n.dispatchEvent(s))}function j(e){!1!==n.enabled&&!1!==n.enablePan&&function(e){let t=!1;switch(e.code){case n.keys.UP:e.ctrlKey||e.metaKey||e.shiftKey?R(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):L(0,n.keyPanSpeed),t=!0;break;case n.keys.BOTTOM:e.ctrlKey||e.metaKey||e.shiftKey?R(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):L(0,-n.keyPanSpeed),t=!0;break;case n.keys.LEFT:e.ctrlKey||e.metaKey||e.shiftKey?A(2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):L(n.keyPanSpeed,0),t=!0;break;case n.keys.RIGHT:e.ctrlKey||e.metaKey||e.shiftKey?A(-2*Math.PI*n.rotateSpeed/n.domElement.clientHeight):L(-n.keyPanSpeed,0),t=!0}t&&(e.preventDefault(),n.update())}(e)}function q(e){!1!==n.enabled&&e.preventDefault()}function Y(e){let t=E[e.pointerId];void 0===t&&(t=new i.I9Y,E[e.pointerId]=t),t.set(e.pageX,e.pageY)}function K(e){const t=e.pointerId===S[0].pointerId?S[1]:S[0];return E[t.pointerId]}n.domElement.addEventListener("contextmenu",q),n.domElement.addEventListener("pointerdown",k),n.domElement.addEventListener("pointercancel",W),n.domElement.addEventListener("wheel",X,{passive:!1}),this.update()}}class c{constructor(){this.scene=new i.Z58;let e=document.getElementById("threejs").getBoundingClientRect();this.camera=new i.ubm(45,e.width/e.height,.1,1e4),this.renderer=new i.JeP({antialias:!0}),this.renderer.setSize(e.width,e.height),this.renderer.setClearColor(2697513,1);const t=window.devicePixelRatio?Math.min(window.devicePixelRatio,1.5):1;this.renderer.setPixelRatio(t),document.getElementById("threejs").appendChild(this.renderer.domElement);let n=new i.$p8(6316128);this.scene.add(n),this.light=new i.HiM(16777215,1,1e3),this.scene.add(this.light);const r=new i.fTw(10,100,16711680,255);r.rotateOnAxis(new i.Pq0(1,0,0),-Math.PI/2),this.scene.add(r);let a=this;window.addEventListener("resize",(function(){let e=document.getElementById("threejs").getBoundingClientRect();a.camera&&(a.camera.aspect=e.width/e.height,a.camera.updateProjectionMatrix(),a.renderer.setSize(e.width,e.height))}),!1),this.camera.up.set(0,0,1),this.controls=new o(this.camera,this.renderer.domElement),this.controls.enableDamping=!1}render(){this.controls.update(),this.light.position.set(this.camera.position.x,this.camera.position.y,this.camera.position.z),this.renderer.render(this.scene,this.camera)}lookAt(e){this.camera.position.set(e.eye.x,e.eye.y,e.eye.z),this.controls.target.set(e.target.x,e.target.y,e.target.z),this.controls.update()}}},241:(e,t,n)=>{let i;function r(e){i=e}n.d(t,{$54:()=>sa,$Kc:()=>la,$PD:()=>So,$Pc:()=>Rr,$hO:()=>An,$nJ:()=>cr,$pK:()=>Ur,A0i:()=>wi,A4E:()=>oe,A5w:()=>Er,AUZ:()=>le,AoQ:()=>vr,BKO:()=>Fr,BZb:()=>pc,B_i:()=>Fi,BbO:()=>ti,Bu4:()=>Ot,C3o:()=>ta,CGD:()=>Uo,CLN:()=>Os,CMF:()=>gn,CTb:()=>$t,CYB:()=>Y,CcU:()=>D,Ced:()=>Za,Cmg:()=>Jt,CrI:()=>hn,D4L:()=>Sa,DDW:()=>oa,DF5:()=>Ja,Dfn:()=>Ro,DgC:()=>Is,Dlh:()=>is,Dm0:()=>ei,DoT:()=>To,Du1:()=>lt,E5R:()=>Ko,EBY:()=>de,EKX:()=>mi,ELU:()=>k,ENX:()=>ns,ENm:()=>Nr,EPt:()=>sr,Erh:()=>je,ExB:()=>Cs,Eyb:()=>Zo,FHK:()=>Ct,FNd:()=>Zn,FOz:()=>N,FsR:()=>Ei,Fx8:()=>Ln,GGS:()=>Bo,GH5:()=>Jn,GIr:()=>$e,GL7:()=>on,GNz:()=>xt,GQG:()=>co,G_z:()=>ws,GbS:()=>Wi,GhA:()=>ii,Gq6:()=>_t,Gy:()=>Wa,H2O:()=>Ps,H3_:()=>Ws,H4Z:()=>pt,H5s:()=>as,HBq:()=>va,HcK:()=>Qs,HdZ:()=>jt,Hv4:()=>Ra,HxU:()=>mn,Hxo:()=>Do,Hxr:()=>It,Hzn:()=>or,IRU:()=>fa,I_O:()=>Fn,Idb:()=>V,Iig:()=>$r,Imq:()=>yr,It8:()=>nn,J$Y:()=>fr,J4C:()=>Kn,JcA:()=>Bn,JgO:()=>Ai,Jgt:()=>ba,JoZ:()=>et,KHy:()=>Yn,KS6:()=>ds,Kan:()=>fn,Kec:()=>Tt,KnR:()=>O,L3o:()=>Ha,LCp:()=>rc,LF7:()=>jr,LJc:()=>H,LKB:()=>Gi,LQ1:()=>Bi,LSi:()=>ls,LT1:()=>G,L_l:()=>mo,Lh6:()=>Ht,Lk4:()=>tc,M0b:()=>Ve,M2:()=>Ar,M47:()=>Ya,M6L:()=>Ii,MIe:()=>mt,MW2:()=>Fs,MZS:()=>sn,Mip:()=>bt,MlO:()=>Rt,Mnx:()=>fs,MyH:()=>bo,N0b:()=>ni,N7m:()=>Wo,NBD:()=>Aa,NIJ:()=>q,NRY:()=>St,Nc6:()=>go,NhE:()=>ic,Nlo:()=>Ba,O30:()=>ft,OLt:()=>Qa,Ow3:()=>hr,PD8:()=>jn,PF2:()=>Fe,PP4:()=>X,PRY:()=>cc,PU0:()=>z,PX6:()=>xo,PgH:()=>Pn,Py0:()=>dc,Pyu:()=>io,Q5w:()=>_s,QPw:()=>Ci,QRK:()=>fc,QRh:()=>lc,QS3:()=>aa,QV1:()=>Br,QaU:()=>ac,Qnr:()=>bc,QqI:()=>Ir,Qto:()=>ue,RBH:()=>no,RKz:()=>nr,RLH:()=>cn,RZ8:()=>rn,R_j:()=>Mt,Rqq:()=>ca,Rwh:()=>ln,Ry:()=>gr,S$8:()=>Wn,S55:()=>Vt,S9k:()=>Go,SD7:()=>Fo,SG2:()=>j,SMp:()=>Xn,SMz:()=>Zs,STu:()=>Un,Sp_:()=>qs,THL:()=>ar,TMx:()=>Ft,TZA:()=>U,Ta1:()=>Ns,TgG:()=>$o,Tjt:()=>Ea,U2W:()=>hi,U7A:()=>ts,UKu:()=>Io,UNs:()=>qi,UUJ:()=>pi,UVj:()=>ee,U_l:()=>ae,U_v:()=>Pa,Unn:()=>xn,Uo2:()=>po,UrN:()=>nt,UsL:()=>Mn,V4m:()=>Qi,VBJ:()=>js,VFl:()=>ga,VG9:()=>pn,VKT:()=>_e,VOO:()=>Nn,VRP:()=>es,VUC:()=>Xt,VVK:()=>br,Vf0:()=>Hr,VrZ:()=>Lr,Vrt:()=>zt,WOG:()=>ka,WYM:()=>bi,WZM:()=>vi,W_t:()=>xs,Wds:()=>Xo,WfJ:()=>wn,WgO:()=>en,XGN:()=>Ut,Xj0:()=>Gs,Xvg:()=>Ji,Y0x:()=>un,Y5L:()=>ce,YBk:()=>tr,Y_e:()=>Mi,Ys6:()=>Cr,Yt6:()=>Gr,Yx4:()=>Tr,Yxg:()=>Q,Z46:()=>ua,ZGT:()=>Di,ZHv:()=>$a,ZIH:()=>be,ZV5:()=>kn,ZX6:()=>En,ZXk:()=>Ti,Zdy:()=>Si,ZsK:()=>tt,Zws:()=>Na,_$u:()=>rs,_M_:()=>yo,_Qc:()=>jo,_S2:()=>Rn,_Ue:()=>Pt,_Zb:()=>ot,_mt:()=>Qr,_q7:()=>li,_x0:()=>F,a$B:()=>os,ab:()=>At,akg:()=>ao,atZ:()=>ja,az_:()=>hs,b$z:()=>Us,bBT:()=>ko,biQ:()=>Et,bkt:()=>_c,c6u:()=>Mr,c8_:()=>pa,cFT:()=>ec,cI:()=>Ni,cIF:()=>uo,cWK:()=>ia,clo:()=>Qo,cou:()=>Ho,cyt:()=>_n,d$C:()=>Vn,d0z:()=>Ke,d2d:()=>Ds,dEj:()=>Qt,dYQ:()=>Dr,d_i:()=>On,dce:()=>ui,deo:()=>rt,dfz:()=>ut,dlv:()=>Ta,dpx:()=>Tn,dtP:()=>Da,dyN:()=>er,e$2:()=>Ca,eDG:()=>ie,eIr:()=>mr,eT0:()=>Ua,eTY:()=>Ma,eTi:()=>Fa,eWC:()=>Hi,ebH:()=>ge,edx:()=>qt,eg2:()=>Ys,ehv:()=>ss,esQ:()=>ms,evT:()=>Gt,ewW:()=>qo,ezo:()=>vt,fHS:()=>yn,fXd:()=>so,fb$:()=>Ts,fm7:()=>Gn,fx8:()=>rr,fxK:()=>tn,gNe:()=>Jo,gVi:()=>an,gi$:()=>fe,gmt:()=>Mo,gtG:()=>oo,h$A:()=>Vs,h8E:()=>In,hBy:()=>ro,hH2:()=>ya,hI8:()=>Or,hJw:()=>wa,hK5:()=>ki,haC:()=>na,hb9:()=>_i,hgB:()=>Z,i1o:()=>Oa,i3N:()=>Lo,iJ1:()=>dn,iS1:()=>Dn,iTg:()=>pe,ii7:()=>Ss,ijB:()=>Oi,irV:()=>Kr,ix7:()=>ri,jUi:()=>wo,jnf:()=>Wr,jqP:()=>di,jzA:()=>Wt,k2R:()=>ea,k8A:()=>Ze,kD2:()=>Jr,kEf:()=>$s,kGM:()=>Ye,kGc:()=>Hn,kfZ:()=>$n,kzL:()=>yt,l4v:()=>Yo,l7J:()=>Pi,l7f:()=>eo,lAr:()=>bs,lF0:()=>ht,lIU:()=>r,lYD:()=>bn,lq$:()=>L,lry:()=>it,m0F:()=>qr,mFY:()=>ci,mID:()=>Zt,mOz:()=>$i,mPI:()=>Me,man:()=>qa,mcs:()=>ma,ms$:()=>ys,mvO:()=>za,mx$:()=>ps,n1G:()=>Je,nAv:()=>fo,nIv:()=>K,nZe:()=>_r,nd4:()=>Ia,o2s:()=>vs,oeS:()=>Vi,p$M:()=>ve,p$s:()=>us,p99:()=>Vo,pDX:()=>kr,pFK:()=>dt,pKw:()=>Ls,pY8:()=>ho,p_A:()=>Xe,q1i:()=>I,qI_:()=>fi,qNE:()=>mc,qSN:()=>Ne,qWt:()=>La,qgk:()=>Zi,qoe:()=>zi,qsm:()=>Qe,qyd:()=>Sn,r0O:()=>sc,rBU:()=>st,rDt:()=>Ui,rFL:()=>ha,rhW:()=>ct,rl:()=>oc,s0W:()=>gi,s1T:()=>wt,s3f:()=>Se,s4Q:()=>Ge,s8_:()=>qe,sLg:()=>Bs,sVW:()=>ze,sWe:()=>hc,sYf:()=>Ao,sZK:()=>Xr,sgF:()=>zo,sgz:()=>qn,siT:()=>Ki,swM:()=>xr,t2e:()=>to,tBX:()=>gt,tCD:()=>Xs,tRb:()=>Kt,tWU:()=>Cn,tZf:()=>Zr,taC:()=>zr,twp:()=>we,u1z:()=>Hs,uJ9:()=>ji,uJK:()=>ai,uNT:()=>vo,uPV:()=>No,uYA:()=>Nt,udC:()=>Eo,ui$:()=>zn,uiV:()=>re,uqL:()=>Ka,uuF:()=>_a,uyA:()=>zs,v$G:()=>oi,vBH:()=>Bt,vCr:()=>nc,vF0:()=>lr,vUM:()=>uc,vVD:()=>Pr,vYo:()=>We,va5:()=>Sr,va8:()=>kt,vbf:()=>ur,vj2:()=>ra,vqF:()=>Yt,vuT:()=>Vr,vxx:()=>Ks,w2X:()=>xa,w6e:()=>Es,w86:()=>B,w9h:()=>Dt,wBE:()=>xi,wHY:()=>Lt,wJz:()=>da,whP:()=>se,wht:()=>Oo,wik:()=>Xa,wkG:()=>he,wu_:()=>at,wvU:()=>Qn,wzN:()=>Co,x$X:()=>Ms,x0C:()=>As,x6S:()=>wr,x8H:()=>Po,xCe:()=>Js,xKR:()=>xe,xNl:()=>gs,xV_:()=>lo,x_k:()=>si,xiP:()=>Li,xl2:()=>Ri,y2T:()=>Rs,y3A:()=>_o,yNj:()=>vn,yNk:()=>dr,ya2:()=>ye,ycJ:()=>gc,ywC:()=>pr,ywv:()=>Va,z4O:()=>Xi,zAG:()=>me,zGz:()=>Ga,zNy:()=>cs,zQq:()=>ir,zZJ:()=>yi,zby:()=>Yr,zre:()=>W,zsB:()=>Yi,zve:()=>ks});const a=new Array(128).fill(void 0);function s(e){return a[e]}a.push(void 0,null,!0,!1);let o=a.length;function c(e){o===a.length&&a.push(a.length+1);const t=o;return o=a[t],a[t]=e,t}let l=new("undefined"==typeof TextDecoder?(0,module.require)("util").TextDecoder:TextDecoder)("utf-8",{ignoreBOM:!0,fatal:!0});l.decode();let u=null;function d(){return null!==u&&0!==u.byteLength||(u=new Uint8Array(i.memory.buffer)),u}function h(e,t){return e>>>=0,l.decode(d().subarray(e,e+t))}function f(e,t){try{return e.apply(this,t)}catch(e){i.__wbindgen_export_0(c(e))}}let p=null;function _(e,t){return e>>>=0,(null!==p&&0!==p.byteLength||(p=new Float32Array(i.memory.buffer)),p).subarray(e/4,e/4+t)}let m=null;function g(e,t){return e>>>=0,(null!==m&&0!==m.byteLength||(m=new Int32Array(i.memory.buffer)),m).subarray(e/4,e/4+t)}let b=null;function v(e,t){return e>>>=0,(null!==b&&0!==b.byteLength||(b=new Uint32Array(i.memory.buffer)),b).subarray(e/4,e/4+t)}function x(e){return null==e}let w=0,y=new("undefined"==typeof TextEncoder?(0,module.require)("util").TextEncoder:TextEncoder)("utf-8");const M="function"==typeof y.encodeInto?function(e,t){return y.encodeInto(e,t)}:function(e,t){const n=y.encode(e);return t.set(n),{read:e.length,written:n.length}};function S(e,t,n){if(void 0===n){const n=y.encode(e),i=t(n.length,1)>>>0;return d().subarray(i,i+n.length).set(n),w=n.length,i}let i=e.length,r=t(i,1)>>>0;const a=d();let s=0;for(;s<i;s++){const t=e.charCodeAt(s);if(t>127)break;a[r+s]=t}if(s!==i){0!==s&&(e=e.slice(s)),r=n(r,i,i=s+3*e.length,1)>>>0;const t=d().subarray(r+s,r+i);s+=M(e,t).written,r=n(r,i,s,1)>>>0}return w=s,r}let E=null;function T(){return(null===E||!0===E.buffer.detached||void 0===E.buffer.detached&&E.buffer!==i.memory.buffer)&&(E=new DataView(i.memory.buffer)),E}function A(e){const t=s(e);return function(e){e<132||(a[e]=o,o=e)}(e),t}const R="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((e=>{i.__wbindgen_export_4.get(e.dtor)(e.a,e.b)}));function P(e,t,n,r){const a={a:e,b:t,cnt:1,dtor:n},s=(...e)=>{a.cnt++;const t=a.a;a.a=0;try{return r(t,a.b,...e)}finally{0==--a.cnt?(i.__wbindgen_export_4.get(a.dtor)(t,a.b),R.unregister(a)):a.a=t}};return s.original=a,R.register(s,a,a),s}function C(e){const t=typeof e;if("number"==t||"boolean"==t||null==e)return`${e}`;if("string"==t)return`"${e}"`;if("symbol"==t){const t=e.description;return null==t?"Symbol":`Symbol(${t})`}if("function"==t){const t=e.name;return"string"==typeof t&&t.length>0?`Function(${t})`:"Function"}if(Array.isArray(e)){const t=e.length;let n="[";t>0&&(n+=C(e[0]));for(let i=1;i<t;i++)n+=", "+C(e[i]);return n+="]",n}const n=/\[object ([^\]]+)\]/.exec(toString.call(e));let i;if(!(n&&n.length>1))return toString.call(e);if(i=n[1],"Object"==i)try{return"Object("+JSON.stringify(e)+")"}catch(e){return"Object"}return e instanceof Error?`${e.name}: ${e.message}\n${e.stack}`:i}function L(e){const t=i.createCartPole(e);return Ge.__wrap(t)}function D(){const e=i.createQuadrupedStandingController();return Ne.__wrap(e)}function U(e,t,n){const r=i.createQuadrupedTrottingController(e,t,n);return Ne.__wrap(r)}function I(e,t,n){const r=i.createHopper1DController(e,t,n);return Ne.__wrap(r)}function N(e,t,n,r,a,s){const o=i.createHopper2DController(e,t,n,r,a,s);return Ne.__wrap(o)}function O(){const e=i.createPusherController();return Ne.__wrap(e)}function F(){const e=i.createGripperManualController();return Ne.__wrap(e)}function B(){const e=i.createSO101PositionController();return Ne.__wrap(e)}function z(e){const t=i.createNavbotController(e);return Ne.__wrap(t)}function H(){const e=i.createBalancingBotController();return Ne.__wrap(e)}function G(){const e=i.createFourBarLinkageController();return Ne.__wrap(e)}function k(){const e=i.createFourBarLinkageWithBaseController();return Ne.__wrap(e)}function V(){const e=i.createNullController();return Ne.__wrap(e)}function W(e,t){const n=i.createRimlessWheel(e,t);return Ge.__wrap(n)}function X(){return A(i.createFourBarLinkage())}function j(){return A(i.createFourBarLinkageWithBase())}function q(){return A(i.createMockNavbot())}function Y(){return A(i.createNavbotMotor())}function K(){return A(i.createNavbot())}function Z(){return A(i.createBalancingBot())}let J=null;function $(e,t){const n=t(8*e.length,8)>>>0;return(null!==J&&0!==J.byteLength||(J=new Float64Array(i.memory.buffer)),J).set(e,n/8),w=e.length,n}function Q(){return A(i.createFEMBox())}function ee(){return A(i.createMassSpringBunny())}function te(e,t){if(!(e instanceof t))throw new Error(`expected instance of ${t.name}`)}function ne(e,t){e>>>=0;const n=T(),i=[];for(let r=e;r<e+4*t;r+=4)i.push(A(n.getUint32(r,!0)));return i}function ie(e){const t=i.createRodPendulumAtBottom(e);return Ge.__wrap(t)}function re(e){const t=i.createRodPendulum(e);return Ge.__wrap(t)}function ae(e){const t=i.createDoublePendulumHorizontal(e);return Ge.__wrap(t)}function se(e,t){const n=i.createSphere(e,t);return Ge.__wrap(n)}function oe(){const e=i.createCompassGait();return Ge.__wrap(e)}function ce(e){const t=i.createCube(e);return Ge.__wrap(t)}function le(e){const t=i.createDoublePendulum(e);return Ge.__wrap(t)}function ue(){return A(i.createRigidTetrahedron())}function de(){return A(i.createTwoRigidTetrahedron())}function he(){return A(i.createRigidMeshBox())}function fe(){return A(i.createTwoRigidMeshBoxes())}function pe(){return A(i.createTwoRigidCubes())}function _e(){return A(i.createSO101())}function me(e){const t=i.createCart(e);return Ge.__wrap(t)}function ge(e,t,n,r,a,s){const o=i.create1DHopper(e,t,n,r,a,s);return Ge.__wrap(o)}function be(e,t,n,r,a,s,o,c){const l=i.create2DHopper(e,t,n,r,a,s,o,c);return Ge.__wrap(l)}function ve(){const e=i.createActuatedAnkleHopper();return Ge.__wrap(e)}function xe(){const e=i.createActuatedHipHopper();return Ge.__wrap(e)}function we(e,t){const n=i.createSimplePendulum(e,t);return Ge.__wrap(n)}function ye(e,t){const n=i.createQuadruped(e,t);return Ge.__wrap(n)}function Me(){return A(i.createPusher())}function Se(){const e=i.createGripper();return Ge.__wrap(e)}function Ee(e,t,n){i.__wbindgen_export_5(e,t,c(n))}function Te(e,t,n){i.__wbindgen_export_6(e,t,c(n))}const Ae=["uniform","storage","read-only-storage"],Re=["low-power","high-performance"],Pe=["filtering","non-filtering","comparison"],Ce=["write-only","read-only","read-write"],Le=["r8unorm","r8snorm","r8uint","r8sint","r16uint","r16sint","r16float","rg8unorm","rg8snorm","rg8uint","rg8sint","r32uint","r32sint","r32float","rg16uint","rg16sint","rg16float","rgba8unorm","rgba8unorm-srgb","rgba8snorm","rgba8uint","rgba8sint","bgra8unorm","bgra8unorm-srgb","rgb9e5ufloat","rgb10a2uint","rgb10a2unorm","rg11b10ufloat","rg32uint","rg32sint","rg32float","rgba16uint","rgba16sint","rgba16float","rgba32uint","rgba32sint","rgba32float","stencil8","depth16unorm","depth24plus","depth24plus-stencil8","depth32float","depth32float-stencil8","bc1-rgba-unorm","bc1-rgba-unorm-srgb","bc2-rgba-unorm","bc2-rgba-unorm-srgb","bc3-rgba-unorm","bc3-rgba-unorm-srgb","bc4-r-unorm","bc4-r-snorm","bc5-rg-unorm","bc5-rg-snorm","bc6h-rgb-ufloat","bc6h-rgb-float","bc7-rgba-unorm","bc7-rgba-unorm-srgb","etc2-rgb8unorm","etc2-rgb8unorm-srgb","etc2-rgb8a1unorm","etc2-rgb8a1unorm-srgb","etc2-rgba8unorm","etc2-rgba8unorm-srgb","eac-r11unorm","eac-r11snorm","eac-rg11unorm","eac-rg11snorm","astc-4x4-unorm","astc-4x4-unorm-srgb","astc-5x4-unorm","astc-5x4-unorm-srgb","astc-5x5-unorm","astc-5x5-unorm-srgb","astc-6x5-unorm","astc-6x5-unorm-srgb","astc-6x6-unorm","astc-6x6-unorm-srgb","astc-8x5-unorm","astc-8x5-unorm-srgb","astc-8x6-unorm","astc-8x6-unorm-srgb","astc-8x8-unorm","astc-8x8-unorm-srgb","astc-10x5-unorm","astc-10x5-unorm-srgb","astc-10x6-unorm","astc-10x6-unorm-srgb","astc-10x8-unorm","astc-10x8-unorm-srgb","astc-10x10-unorm","astc-10x10-unorm-srgb","astc-12x10-unorm","astc-12x10-unorm-srgb","astc-12x12-unorm","astc-12x12-unorm-srgb"],De=["float","unfilterable-float","depth","sint","uint"],Ue=["1d","2d","2d-array","cube","cube-array","3d"],Ie="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((e=>i.__wbg_interfacecontroller_free(e>>>0,1)));class Ne{static __wrap(e){e>>>=0;const t=Object.create(Ne.prototype);return t.__wbg_ptr=e,Ie.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Ie.unregister(this),e}free(){const e=this.__destroy_into_raw();i.__wbg_interfacecontroller_free(e,0)}}const Oe="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((e=>i.__wbg_interfacefemdeformable_free(e>>>0,1)));class Fe{static __wrap(e){e>>>=0;const t=Object.create(Fe.prototype);return t.__wbg_ptr=e,Oe.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Oe.unregister(this),e}free(){const e=this.__destroy_into_raw();i.__wbg_interfacefemdeformable_free(e,0)}vertices(){return A(i.interfacefemdeformable_vertices(this.__wbg_ptr))}facets(){return A(i.interfacefemdeformable_facets(this.__wbg_ptr))}step(e,t){const n=$(t,i.__wbindgen_export_2),r=w;return A(i.interfacefemdeformable_step(this.__wbg_ptr,e,n,r))}}const Be="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((e=>i.__wbg_interfacemassspringdeformable_free(e>>>0,1)));class ze{static __wrap(e){e>>>=0;const t=Object.create(ze.prototype);return t.__wbg_ptr=e,Be.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,Be.unregister(this),e}free(){const e=this.__destroy_into_raw();i.__wbg_interfacemassspringdeformable_free(e,0)}vertices(){return A(i.interfacemassspringdeformable_vertices(this.__wbg_ptr))}edges(){return A(i.interfacemassspringdeformable_edges(this.__wbg_ptr))}facets(){return A(i.interfacemassspringdeformable_facets(this.__wbg_ptr))}tetrahedra(){return A(i.interfacemassspringdeformable_tetrahedra(this.__wbg_ptr))}step(e,t){const n=$(t,i.__wbindgen_export_2),r=w;i.interfacemassspringdeformable_step(this.__wbg_ptr,e,n,r)}}const He="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((e=>i.__wbg_interfacemechanismstate_free(e>>>0,1)));class Ge{static __wrap(e){e>>>=0;const t=Object.create(Ge.prototype);return t.__wbg_ptr=e,He.register(t,t.__wbg_ptr,t),t}__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,He.unregister(this),e}free(){const e=this.__destroy_into_raw();i.__wbg_interfacemechanismstate_free(e,0)}poses(){return A(i.interfacemechanismstate_poses(this.__wbg_ptr))}contact_positions(){return A(i.interfacemechanismstate_contact_positions(this.__wbg_ptr))}addHalfSpace(e,t){const n=$(e,i.__wbindgen_export_2),r=w;i.interfacemechanismstate_addHalfSpace(this.__wbg_ptr,n,r,t)}addHalfSpaceCustom(e,t,n,r){const a=$(e,i.__wbindgen_export_2),s=w;i.interfacemechanismstate_addHalfSpaceCustom(this.__wbg_ptr,a,s,t,n,r)}vertices(e){return A(i.interfacemechanismstate_vertices(this.__wbg_ptr,e))}visual_base_vertices(e){try{const a=i.__wbindgen_add_to_stack_pointer(-16);i.interfacemechanismstate_visual_base_vertices(a,this.__wbg_ptr,e);var t=T().getInt32(a+0,!0),n=T().getInt32(a+4,!0),r=ne(t,n).slice();return i.__wbindgen_export_1(t,4*n,4),r}finally{i.__wbindgen_add_to_stack_pointer(16)}}visual_facets(e){try{const a=i.__wbindgen_add_to_stack_pointer(-16);i.interfacemechanismstate_visual_facets(a,this.__wbg_ptr,e);var t=T().getInt32(a+0,!0),n=T().getInt32(a+4,!0),r=ne(t,n).slice();return i.__wbindgen_export_1(t,4*n,4),r}finally{i.__wbindgen_add_to_stack_pointer(16)}}sphere_center(e){return A(i.interfacemechanismstate_sphere_center(this.__wbg_ptr,e))}isometry(e){return A(i.interfacemechanismstate_isometry(this.__wbg_ptr,e))}}const ke="undefined"==typeof FinalizationRegistry?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry((e=>i.__wbg_interfacesimulator_free(e>>>0,1)));class Ve{__destroy_into_raw(){const e=this.__wbg_ptr;return this.__wbg_ptr=0,ke.unregister(this),e}free(){const e=this.__destroy_into_raw();i.__wbg_interfacesimulator_free(e,0)}constructor(e,t){te(e,Ge);var n=e.__destroy_into_raw();te(t,Ne);var r=t.__destroy_into_raw();const a=i.interfacesimulator_new(n,r);return this.__wbg_ptr=a>>>0,ke.register(this,this.__wbg_ptr,this),this}step(e,t){const n=$(t,i.__wbindgen_export_2),r=w;return A(i.interfacesimulator_step(this.__wbg_ptr,e,n,r))}poses(){return A(i.interfacesimulator_poses(this.__wbg_ptr))}contact_positions(){return A(i.interfacesimulator_contact_positions(this.__wbg_ptr))}vertices(e){return A(i.interfacesimulator_vertices(this.__wbg_ptr,e))}visual_base_vertices(e){try{const a=i.__wbindgen_add_to_stack_pointer(-16);i.interfacesimulator_visual_base_vertices(a,this.__wbg_ptr,e);var t=T().getInt32(a+0,!0),n=T().getInt32(a+4,!0),r=ne(t,n).slice();return i.__wbindgen_export_1(t,4*n,4),r}finally{i.__wbindgen_add_to_stack_pointer(16)}}facets(e){try{const a=i.__wbindgen_add_to_stack_pointer(-16);i.interfacesimulator_facets(a,this.__wbg_ptr,e);var t=T().getInt32(a+0,!0),n=T().getInt32(a+4,!0),r=ne(t,n).slice();return i.__wbindgen_export_1(t,4*n,4),r}finally{i.__wbindgen_add_to_stack_pointer(16)}}isometry(e){return A(i.interfacesimulator_isometry(this.__wbg_ptr,e))}sphere_center(e){return A(i.interfacesimulator_sphere_center(this.__wbg_ptr,e))}}function We(e){return c(s(e).Window)}function Xe(e){return c(s(e).WorkerGlobalScope)}function je(e,t){s(e).activeTexture(t>>>0)}function qe(e,t){s(e).activeTexture(t>>>0)}function Ye(e,t,n){s(e).attachShader(s(t),s(n))}function Ke(e,t,n){s(e).attachShader(s(t),s(n))}function Ze(e,t){return c(s(e).beginComputePass(s(t)))}function Je(e,t,n){s(e).beginQuery(t>>>0,s(n))}function $e(e,t,n,i,r){s(e).bindAttribLocation(s(t),n>>>0,h(i,r))}function Qe(e,t,n,i,r){s(e).bindAttribLocation(s(t),n>>>0,h(i,r))}function et(e,t,n,i,r,a){s(e).bindBufferRange(t>>>0,n>>>0,s(i),r,a)}function tt(e,t,n){s(e).bindBuffer(t>>>0,s(n))}function nt(e,t,n){s(e).bindBuffer(t>>>0,s(n))}function it(e,t,n){s(e).bindFramebuffer(t>>>0,s(n))}function rt(e,t,n){s(e).bindFramebuffer(t>>>0,s(n))}function at(e,t,n){s(e).bindRenderbuffer(t>>>0,s(n))}function st(e,t,n){s(e).bindRenderbuffer(t>>>0,s(n))}function ot(e,t,n){s(e).bindSampler(t>>>0,s(n))}function ct(e,t,n){s(e).bindTexture(t>>>0,s(n))}function lt(e,t,n){s(e).bindTexture(t>>>0,s(n))}function ut(e,t){s(e).bindVertexArrayOES(s(t))}function dt(e,t){s(e).bindVertexArray(s(t))}function ht(e,t,n,i,r){s(e).blendColor(t,n,i,r)}function ft(e,t,n,i,r){s(e).blendColor(t,n,i,r)}function pt(e,t,n){s(e).blendEquationSeparate(t>>>0,n>>>0)}function _t(e,t,n){s(e).blendEquationSeparate(t>>>0,n>>>0)}function mt(e,t){s(e).blendEquation(t>>>0)}function gt(e,t){s(e).blendEquation(t>>>0)}function bt(e,t,n,i,r){s(e).blendFuncSeparate(t>>>0,n>>>0,i>>>0,r>>>0)}function vt(e,t,n,i,r){s(e).blendFuncSeparate(t>>>0,n>>>0,i>>>0,r>>>0)}function xt(e,t,n){s(e).blendFunc(t>>>0,n>>>0)}function wt(e,t,n){s(e).blendFunc(t>>>0,n>>>0)}function yt(e,t,n,i,r,a,o,c,l,u,d){s(e).blitFramebuffer(t,n,i,r,a,o,c,l,u>>>0,d>>>0)}function Mt(e,t,n,i){s(e).bufferData(t>>>0,s(n),i>>>0)}function St(e,t,n,i){s(e).bufferData(t>>>0,s(n),i>>>0)}function Et(e,t,n,i){s(e).bufferData(t>>>0,n,i>>>0)}function Tt(e,t,n,i){s(e).bufferData(t>>>0,n,i>>>0)}function At(e,t,n,i){s(e).bufferSubData(t>>>0,n,s(i))}function Rt(e,t,n,i){s(e).bufferSubData(t>>>0,n,s(i))}function Pt(e){return c(s(e).buffer)}function Ct(e){return c(s(e).buffer)}function Lt(){return f((function(e,t){return c(s(e).call(s(t)))}),arguments)}function Dt(){return f((function(e,t,n){return c(s(e).call(s(t),s(n)))}),arguments)}function Ut(e,t,n,i,r){s(e).clearBufferfv(t>>>0,n,_(i,r))}function It(e,t,n,i,r){s(e).clearBufferiv(t>>>0,n,g(i,r))}function Nt(e,t,n,i,r){s(e).clearBufferuiv(t>>>0,n,v(i,r))}function Ot(e,t){s(e).clearDepth(t)}function Ft(e,t){s(e).clearDepth(t)}function Bt(e,t){s(e).clearStencil(t)}function zt(e,t){s(e).clearStencil(t)}function Ht(e,t){s(e).clear(t>>>0)}function Gt(e,t){s(e).clear(t>>>0)}function kt(e,t,n,i){return s(e).clientWaitSync(s(t),n>>>0,i>>>0)}function Vt(e,t,n,i,r){s(e).colorMask(0!==t,0!==n,0!==i,0!==r)}function Wt(e,t,n,i,r){s(e).colorMask(0!==t,0!==n,0!==i,0!==r)}function Xt(e,t){s(e).compileShader(s(t))}function jt(e,t){s(e).compileShader(s(t))}function qt(e,t,n,i,r,a,o,c,l,u){s(e).compressedTexSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l,u)}function Yt(e,t,n,i,r,a,o,c,l){s(e).compressedTexSubImage2D(t>>>0,n,i,r,a,o,c>>>0,s(l))}function Kt(e,t,n,i,r,a,o,c,l){s(e).compressedTexSubImage2D(t>>>0,n,i,r,a,o,c>>>0,s(l))}function Zt(e,t,n,i,r,a,o,c,l,u,d){s(e).compressedTexSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,s(d))}function Jt(e,t,n,i,r,a,o,c,l,u,d,h){s(e).compressedTexSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d,h)}function $t(e,t,n,i,r,a){s(e).copyBufferSubData(t>>>0,n>>>0,i,r,a)}function Qt(){return f((function(e,t,n,i,r,a){s(e).copyBufferToBuffer(s(t),n,s(i),r,a)}),arguments)}function en(e,t,n,i,r,a,o,c,l){s(e).copyTexSubImage2D(t>>>0,n,i,r,a,o,c,l)}function tn(e,t,n,i,r,a,o,c,l){s(e).copyTexSubImage2D(t>>>0,n,i,r,a,o,c,l)}function nn(e,t,n,i,r,a,o,c,l,u){s(e).copyTexSubImage3D(t>>>0,n,i,r,a,o,c,l,u)}function rn(){return f((function(e,t){return c(s(e).createBindGroupLayout(s(t)))}),arguments)}function an(e,t){return c(s(e).createBindGroup(s(t)))}function sn(){return f((function(e,t){return c(s(e).createBuffer(s(t)))}),arguments)}function on(e){const t=s(e).createBuffer();return x(t)?0:c(t)}function cn(e){const t=s(e).createBuffer();return x(t)?0:c(t)}function ln(e,t){return c(s(e).createCommandEncoder(s(t)))}function un(e,t){return c(s(e).createComputePipeline(s(t)))}function dn(e){const t=s(e).createFramebuffer();return x(t)?0:c(t)}function hn(e){const t=s(e).createFramebuffer();return x(t)?0:c(t)}function fn(e,t){return c(s(e).createPipelineLayout(s(t)))}function pn(e){const t=s(e).createProgram();return x(t)?0:c(t)}function _n(e){const t=s(e).createProgram();return x(t)?0:c(t)}function mn(e){const t=s(e).createQuery();return x(t)?0:c(t)}function gn(e){const t=s(e).createRenderbuffer();return x(t)?0:c(t)}function bn(e){const t=s(e).createRenderbuffer();return x(t)?0:c(t)}function vn(e){const t=s(e).createSampler();return x(t)?0:c(t)}function xn(e,t){return c(s(e).createShaderModule(s(t)))}function wn(e,t){const n=s(e).createShader(t>>>0);return x(n)?0:c(n)}function yn(e,t){const n=s(e).createShader(t>>>0);return x(n)?0:c(n)}function Mn(e){const t=s(e).createTexture();return x(t)?0:c(t)}function Sn(e){const t=s(e).createTexture();return x(t)?0:c(t)}function En(e){const t=s(e).createVertexArrayOES();return x(t)?0:c(t)}function Tn(e){const t=s(e).createVertexArray();return x(t)?0:c(t)}function An(e,t){s(e).cullFace(t>>>0)}function Rn(e,t){s(e).cullFace(t>>>0)}function Pn(e,t){s(e).deleteBuffer(s(t))}function Cn(e,t){s(e).deleteBuffer(s(t))}function Ln(e,t){s(e).deleteFramebuffer(s(t))}function Dn(e,t){s(e).deleteFramebuffer(s(t))}function Un(e,t){s(e).deleteProgram(s(t))}function In(e,t){s(e).deleteProgram(s(t))}function Nn(e,t){s(e).deleteQuery(s(t))}function On(e,t){s(e).deleteRenderbuffer(s(t))}function Fn(e,t){s(e).deleteRenderbuffer(s(t))}function Bn(e,t){s(e).deleteSampler(s(t))}function zn(e,t){s(e).deleteShader(s(t))}function Hn(e,t){s(e).deleteShader(s(t))}function Gn(e,t){s(e).deleteSync(s(t))}function kn(e,t){s(e).deleteTexture(s(t))}function Vn(e,t){s(e).deleteTexture(s(t))}function Wn(e,t){s(e).deleteVertexArrayOES(s(t))}function Xn(e,t){s(e).deleteVertexArray(s(t))}function jn(e,t){s(e).depthFunc(t>>>0)}function qn(e,t){s(e).depthFunc(t>>>0)}function Yn(e,t){s(e).depthMask(0!==t)}function Kn(e,t){s(e).depthMask(0!==t)}function Zn(e,t,n){s(e).depthRange(t,n)}function Jn(e,t,n){s(e).depthRange(t,n)}function $n(e,t){s(e).disableVertexAttribArray(t>>>0)}function Qn(e,t){s(e).disableVertexAttribArray(t>>>0)}function ei(e,t){s(e).disable(t>>>0)}function ti(e,t){s(e).disable(t>>>0)}function ni(e,t,n,i){s(e).dispatchWorkgroups(t>>>0,n>>>0,i>>>0)}function ii(e){const t=s(e).document;return x(t)?0:c(t)}function ri(e,t,n,i,r){s(e).drawArraysInstancedANGLE(t>>>0,n,i,r)}function ai(e,t,n,i,r){s(e).drawArraysInstanced(t>>>0,n,i,r)}function si(e,t,n,i){s(e).drawArrays(t>>>0,n,i)}function oi(e,t,n,i){s(e).drawArrays(t>>>0,n,i)}function ci(e,t){s(e).drawBuffersWEBGL(s(t))}function li(e,t){s(e).drawBuffers(s(t))}function ui(e,t,n,i,r,a){s(e).drawElementsInstancedANGLE(t>>>0,n,i>>>0,r,a)}function di(e,t,n,i,r,a){s(e).drawElementsInstanced(t>>>0,n,i>>>0,r,a)}function hi(e,t){s(e).enableVertexAttribArray(t>>>0)}function fi(e,t){s(e).enableVertexAttribArray(t>>>0)}function pi(e,t){s(e).enable(t>>>0)}function _i(e,t){s(e).enable(t>>>0)}function mi(e,t){s(e).endQuery(t>>>0)}function gi(e){s(e).end()}function bi(e,t){let n,r;try{n=e,r=t,console.error(h(e,t))}finally{i.__wbindgen_export_1(n,r,1)}}function vi(e,t,n){const i=s(e).fenceSync(t>>>0,n>>>0);return x(i)?0:c(i)}function xi(e,t,n){return c(s(e).fetch(h(t,n)))}function wi(e){return c(s(e).finish())}function yi(e,t){return c(s(e).finish(s(t)))}function Mi(e){s(e).flush()}function Si(e){s(e).flush()}function Ei(e,t,n,i,r){s(e).framebufferRenderbuffer(t>>>0,n>>>0,i>>>0,s(r))}function Ti(e,t,n,i,r){s(e).framebufferRenderbuffer(t>>>0,n>>>0,i>>>0,s(r))}function Ai(e,t,n,i,r,a){s(e).framebufferTexture2D(t>>>0,n>>>0,i>>>0,s(r),a)}function Ri(e,t,n,i,r,a){s(e).framebufferTexture2D(t>>>0,n>>>0,i>>>0,s(r),a)}function Pi(e,t,n,i,r,a){s(e).framebufferTextureLayer(t>>>0,n>>>0,s(i),r,a)}function Ci(e,t,n,i,r,a,o){s(e).framebufferTextureMultiviewOVR(t>>>0,n>>>0,s(i),r,a,o)}function Li(e,t){s(e).frontFace(t>>>0)}function Di(e,t){s(e).frontFace(t>>>0)}function Ui(e,t,n,i){s(e).getBufferSubData(t>>>0,n,s(i))}function Ii(){return f((function(e,t,n,i){const r=s(e).getContext(h(t,n),s(i));return x(r)?0:c(r)}),arguments)}function Ni(){return f((function(e,t,n,i){const r=s(e).getContext(h(t,n),s(i));return x(r)?0:c(r)}),arguments)}function Oi(){return f((function(e,t,n){const i=s(e).getExtension(h(t,n));return x(i)?0:c(i)}),arguments)}function Fi(){return f((function(e,t,n){return c(s(e).getIndexedParameter(t>>>0,n>>>0))}),arguments)}function Bi(){return f((function(e,t,n){return c(s(e).getMappedRange(t,n))}),arguments)}function zi(){return f((function(e,t){return c(s(e).getParameter(t>>>0))}),arguments)}function Hi(){return f((function(e,t){return c(s(e).getParameter(t>>>0))}),arguments)}function Gi(e,t,n){const r=s(t).getProgramInfoLog(s(n));var a=x(r)?0:S(r,i.__wbindgen_export_2,i.__wbindgen_export_3),o=w;T().setInt32(e+4,o,!0),T().setInt32(e+0,a,!0)}function ki(e,t,n){const r=s(t).getProgramInfoLog(s(n));var a=x(r)?0:S(r,i.__wbindgen_export_2,i.__wbindgen_export_3),o=w;T().setInt32(e+4,o,!0),T().setInt32(e+0,a,!0)}function Vi(e,t,n){return c(s(e).getProgramParameter(s(t),n>>>0))}function Wi(e,t,n){return c(s(e).getProgramParameter(s(t),n>>>0))}function Xi(e,t,n){return c(s(e).getQueryParameter(s(t),n>>>0))}function ji(e,t,n){const r=s(t).getShaderInfoLog(s(n));var a=x(r)?0:S(r,i.__wbindgen_export_2,i.__wbindgen_export_3),o=w;T().setInt32(e+4,o,!0),T().setInt32(e+0,a,!0)}function qi(e,t,n){const r=s(t).getShaderInfoLog(s(n));var a=x(r)?0:S(r,i.__wbindgen_export_2,i.__wbindgen_export_3),o=w;T().setInt32(e+4,o,!0),T().setInt32(e+0,a,!0)}function Yi(e,t,n){return c(s(e).getShaderParameter(s(t),n>>>0))}function Ki(e,t,n){return c(s(e).getShaderParameter(s(t),n>>>0))}function Zi(e){const t=s(e).getSupportedExtensions();return x(t)?0:c(t)}function Ji(e){const t=s(e).getSupportedProfiles();return x(t)?0:c(t)}function $i(e,t,n){return c(s(e).getSyncParameter(s(t),n>>>0))}function Qi(e,t,n,i){return s(e).getUniformBlockIndex(s(t),h(n,i))}function er(e,t,n,i){const r=s(e).getUniformLocation(s(t),h(n,i));return x(r)?0:c(r)}function tr(e,t,n,i){const r=s(e).getUniformLocation(s(t),h(n,i));return x(r)?0:c(r)}function nr(e,t){return c(s(e)[t>>>0])}function ir(e){return c(s(e).gpu)}function rr(e,t,n){return s(e).includes(s(t),n)}function ar(e){let t;try{t=s(e)instanceof GPUAdapter}catch(e){t=!1}return t}function sr(e){let t;try{t=s(e)instanceof HTMLCanvasElement}catch(e){t=!1}return t}function or(e){let t;try{t=s(e)instanceof Response}catch(e){t=!1}return t}function cr(e){let t;try{t=s(e)instanceof WebGL2RenderingContext}catch(e){t=!1}return t}function lr(e){let t;try{t=s(e)instanceof Window}catch(e){t=!1}return t}function ur(e){return c(Fe.__wrap(e))}function dr(e){return c(ze.__wrap(e))}function hr(e){return c(Ge.__wrap(e))}function fr(){return f((function(e,t,n){s(e).invalidateFramebuffer(t>>>0,s(n))}),arguments)}function pr(e,t){return Object.is(s(e),s(t))}function _r(e,t){const n=S(s(t).label,i.__wbindgen_export_2,i.__wbindgen_export_3),r=w;T().setInt32(e+4,r,!0),T().setInt32(e+0,n,!0)}function mr(e){return s(e).length}function gr(e){return s(e).length}function br(e,t){s(e).linkProgram(s(t))}function vr(e,t){s(e).linkProgram(s(t))}function xr(e,t,n,i){return c(s(e).mapAsync(t>>>0,n,i))}function wr(e){return c(s(e).navigator)}function yr(e){return c(s(e).navigator)}function Mr(e,t){try{var n={a:e,b:t};const r=new Promise(((e,t)=>{const r=n.a;n.a=0;try{return function(e,t,n,r){i.__wbindgen_export_7(e,t,c(n),c(r))}(r,n.b,e,t)}finally{n.a=r}}));return c(r)}finally{n.a=n.b=0}}function Sr(){return c(new Object)}function Er(e){return c(new Float32Array(s(e)))}function Tr(e){return c(new Float64Array(s(e)))}function Ar(){return c(new Array)}function Rr(){return c(new Error)}function Pr(e){return c(new Uint8Array(s(e)))}function Cr(e){return c(new Uint32Array(s(e)))}function Lr(e,t){return c(new Function(h(e,t)))}function Dr(e,t,n){return c(new Int8Array(s(e),t>>>0,n>>>0))}function Ur(e,t,n){return c(new Float64Array(s(e),t>>>0,n>>>0))}function Ir(e,t,n){return c(new Int32Array(s(e),t>>>0,n>>>0))}function Nr(e,t,n){return c(new Uint16Array(s(e),t>>>0,n>>>0))}function Or(e,t,n){return c(new Uint8Array(s(e),t>>>0,n>>>0))}function Fr(e,t,n){return c(new Float32Array(s(e),t>>>0,n>>>0))}function Br(e,t,n){return c(new Uint32Array(s(e),t>>>0,n>>>0))}function zr(e,t,n){return c(new Int16Array(s(e),t>>>0,n>>>0))}function Hr(e){return c(new Float64Array(e>>>0))}function Gr(e){return s(e).now()}function kr(e){return s(e).now()}function Vr(e){return c(Array.of(s(e)))}function Wr(e){const t=s(e).performance;return x(t)?0:c(t)}function Xr(e){return c(s(e).performance)}function jr(e,t,n){s(e).pixelStorei(t>>>0,n)}function qr(e,t,n){s(e).pixelStorei(t>>>0,n)}function Yr(e,t,n){s(e).polygonOffset(t,n)}function Kr(e,t,n){s(e).polygonOffset(t,n)}function Zr(e,t){return s(e).push(s(t))}function Jr(e,t,n){s(e).queryCounterEXT(s(t),n>>>0)}function $r(){return f((function(e,t,n){const i=s(e).querySelector(h(t,n));return x(i)?0:c(i)}),arguments)}function Qr(e){queueMicrotask(s(e))}function ea(e){return c(s(e).queueMicrotask)}function ta(e){return c(s(e).queue)}function na(e,t){s(e).readBuffer(t>>>0)}function ia(){return f((function(e,t,n,i,r,a,o,c){s(e).readPixels(t,n,i,r,a>>>0,o>>>0,s(c))}),arguments)}function ra(){return f((function(e,t,n,i,r,a,o,c){s(e).readPixels(t,n,i,r,a>>>0,o>>>0,c)}),arguments)}function aa(){return f((function(e,t,n,i,r,a,o,c){s(e).readPixels(t,n,i,r,a>>>0,o>>>0,s(c))}),arguments)}function sa(e,t,n,i,r,a){s(e).renderbufferStorageMultisample(t>>>0,n,i>>>0,r,a)}function oa(e,t,n,i,r){s(e).renderbufferStorage(t>>>0,n>>>0,i,r)}function ca(e,t,n,i,r){s(e).renderbufferStorage(t>>>0,n>>>0,i,r)}function la(e,t){return c(s(e).requestAdapter(s(t)))}function ua(e,t){return c(s(e).requestDevice(s(t)))}function da(e){return c(Promise.resolve(s(e)))}function ha(e,t,n,i){s(e).samplerParameterf(s(t),n>>>0,i)}function fa(e,t,n,i){s(e).samplerParameteri(s(t),n>>>0,i)}function pa(e,t,n,i,r){s(e).scissor(t,n,i,r)}function _a(e,t,n,i,r){s(e).scissor(t,n,i,r)}function ma(){return f((function(e,t,n,i,r,a,o){s(e).setBindGroup(t>>>0,s(n),v(i,r),a,o>>>0)}),arguments)}function ga(e,t,n){s(e).setBindGroup(t>>>0,s(n))}function ba(e,t){s(e).setPipeline(s(t))}function va(e,t,n){s(e).set(s(t),n>>>0)}function xa(){return f((function(e,t,n){return Reflect.set(s(e),s(t),s(n))}),arguments)}function wa(e,t){s(e).access=Ce[t]}function ya(e,t){s(e).beginningOfPassWriteIndex=t>>>0}function Ma(e,t){s(e).bindGroupLayouts=s(t)}function Sa(e,t){s(e).binding=t>>>0}function Ea(e,t){s(e).binding=t>>>0}function Ta(e,t){s(e).buffer=s(t)}function Aa(e,t){s(e).buffer=s(t)}function Ra(e,t,n){s(e).code=h(t,n)}function Pa(e,t){s(e).compute=s(t)}function Ca(e,t){s(e).endOfPassWriteIndex=t>>>0}function La(e,t){s(e).entries=s(t)}function Da(e,t){s(e).entries=s(t)}function Ua(e,t,n){s(e).entryPoint=h(t,n)}function Ia(e,t){s(e).format=Le[t]}function Na(e,t){s(e).hasDynamicOffset=0!==t}function Oa(e,t){s(e).height=t>>>0}function Fa(e,t){s(e).height=t>>>0}function Ba(e,t,n){s(e)[t>>>0]=n}function za(e,t,n){s(e).label=h(t,n)}function Ha(e,t,n){s(e).label=h(t,n)}function Ga(e,t,n){s(e).label=h(t,n)}function ka(e,t,n){s(e).label=h(t,n)}function Va(e,t,n){s(e).label=h(t,n)}function Wa(e,t,n){s(e).label=h(t,n)}function Xa(e,t,n){s(e).label=h(t,n)}function ja(e,t,n){s(e).label=h(t,n)}function qa(e,t,n){s(e).label=h(t,n)}function Ya(e,t,n){s(e).label=h(t,n)}function Ka(e,t){s(e).layout=s(t)}function Za(e,t){s(e).layout=s(t)}function Ja(e,t){s(e).mappedAtCreation=0!==t}function $a(e,t){s(e).minBindingSize=t}function Qa(e,t){s(e).module=s(t)}function es(e,t){s(e).multisampled=0!==t}function ts(e,t){s(e).offset=t}function ns(e,t){s(e).powerPreference=Re[t]}function is(e,t){s(e).querySet=s(t)}function rs(e,t){s(e).requiredFeatures=s(t)}function as(e,t){s(e).resource=s(t)}function ss(e,t){s(e).sampler=s(t)}function os(e,t){s(e).sampleType=De[t]}function cs(e,t){s(e).size=t}function ls(e,t){s(e).size=t}function us(e,t){s(e).storageTexture=s(t)}function ds(e,t){s(e).texture=s(t)}function hs(e,t){s(e).timestampWrites=s(t)}function fs(e,t){s(e).type=Pe[t]}function ps(e,t){s(e).type=Ae[t]}function _s(e,t){s(e).usage=t>>>0}function ms(e,t){s(e).viewDimension=Ue[t]}function gs(e,t){s(e).viewDimension=Ue[t]}function bs(e,t){s(e).visibility=t>>>0}function vs(e,t){s(e).width=t>>>0}function xs(e,t){s(e).width=t>>>0}function ws(e,t,n,i){s(e).shaderSource(s(t),h(n,i))}function ys(e,t,n,i){s(e).shaderSource(s(t),h(n,i))}function Ms(e,t){const n=S(s(t).stack,i.__wbindgen_export_2,i.__wbindgen_export_3),r=w;T().setInt32(e+4,r,!0),T().setInt32(e+0,n,!0)}function Ss(){const e="undefined"==typeof global?null:global;return x(e)?0:c(e)}function Es(){const e="undefined"==typeof globalThis?null:globalThis;return x(e)?0:c(e)}function Ts(){const e="undefined"==typeof self?null:self;return x(e)?0:c(e)}function As(){const e="undefined"==typeof window?null:window;return x(e)?0:c(e)}function Rs(e,t,n,i,r){s(e).stencilFuncSeparate(t>>>0,n>>>0,i,r>>>0)}function Ps(e,t,n,i,r){s(e).stencilFuncSeparate(t>>>0,n>>>0,i,r>>>0)}function Cs(e,t,n){s(e).stencilMaskSeparate(t>>>0,n>>>0)}function Ls(e,t,n){s(e).stencilMaskSeparate(t>>>0,n>>>0)}function Ds(e,t){s(e).stencilMask(t>>>0)}function Us(e,t){s(e).stencilMask(t>>>0)}function Is(e,t,n,i,r){s(e).stencilOpSeparate(t>>>0,n>>>0,i>>>0,r>>>0)}function Ns(e,t,n,i,r){s(e).stencilOpSeparate(t>>>0,n>>>0,i>>>0,r>>>0)}function Os(e,t){s(e).submit(s(t))}function Fs(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,u)}),arguments)}function Bs(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function zs(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function Hs(){return f((function(e,t,n,i,r,a,o,c,l,u,d){s(e).texImage3D(t>>>0,n,i,r,a,o,c,l>>>0,u>>>0,s(d))}),arguments)}function Gs(){return f((function(e,t,n,i,r,a,o,c,l,u,d){s(e).texImage3D(t>>>0,n,i,r,a,o,c,l>>>0,u>>>0,d)}),arguments)}function ks(e,t,n,i){s(e).texParameteri(t>>>0,n>>>0,i)}function Vs(e,t,n,i){s(e).texParameteri(t>>>0,n>>>0,i)}function Ws(e,t,n,i,r,a){s(e).texStorage2D(t>>>0,n,i>>>0,r,a)}function Xs(e,t,n,i,r,a,o){s(e).texStorage3D(t>>>0,n,i>>>0,r,a,o)}function js(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function qs(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function Ys(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,u)}),arguments)}function Ks(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function Zs(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function Js(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function $s(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function Qs(){return f((function(e,t,n,i,r,a,o,c,l,u){s(e).texSubImage2D(t>>>0,n,i,r,a,o,c>>>0,l>>>0,s(u))}),arguments)}function eo(){return f((function(e,t,n,i,r,a,o,c,l,u,d,h){s(e).texSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d>>>0,s(h))}),arguments)}function to(){return f((function(e,t,n,i,r,a,o,c,l,u,d,h){s(e).texSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d>>>0,s(h))}),arguments)}function no(){return f((function(e,t,n,i,r,a,o,c,l,u,d,h){s(e).texSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d>>>0,s(h))}),arguments)}function io(){return f((function(e,t,n,i,r,a,o,c,l,u,d,h){s(e).texSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d>>>0,s(h))}),arguments)}function ro(){return f((function(e,t,n,i,r,a,o,c,l,u,d,h){s(e).texSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d>>>0,s(h))}),arguments)}function ao(){return f((function(e,t,n,i,r,a,o,c,l,u,d,h){s(e).texSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d>>>0,h)}),arguments)}function so(){return f((function(e,t,n,i,r,a,o,c,l,u,d,h){s(e).texSubImage3D(t>>>0,n,i,r,a,o,c,l,u>>>0,d>>>0,s(h))}),arguments)}function oo(){return f((function(e){return c(s(e).text())}),arguments)}function co(e,t){return c(s(e).then(s(t)))}function lo(e,t,n){return c(s(e).then(s(t),s(n)))}function uo(e,t,n){s(e).uniform1f(s(t),n)}function ho(e,t,n){s(e).uniform1f(s(t),n)}function fo(e,t,n){s(e).uniform1i(s(t),n)}function po(e,t,n){s(e).uniform1i(s(t),n)}function _o(e,t,n){s(e).uniform1ui(s(t),n>>>0)}function mo(e,t,n,i){s(e).uniform2fv(s(t),_(n,i))}function go(e,t,n,i){s(e).uniform2fv(s(t),_(n,i))}function bo(e,t,n,i){s(e).uniform2iv(s(t),g(n,i))}function vo(e,t,n,i){s(e).uniform2iv(s(t),g(n,i))}function xo(e,t,n,i){s(e).uniform2uiv(s(t),v(n,i))}function wo(e,t,n,i){s(e).uniform3fv(s(t),_(n,i))}function yo(e,t,n,i){s(e).uniform3fv(s(t),_(n,i))}function Mo(e,t,n,i){s(e).uniform3iv(s(t),g(n,i))}function So(e,t,n,i){s(e).uniform3iv(s(t),g(n,i))}function Eo(e,t,n,i){s(e).uniform3uiv(s(t),v(n,i))}function To(e,t,n,i,r,a){s(e).uniform4f(s(t),n,i,r,a)}function Ao(e,t,n,i,r,a){s(e).uniform4f(s(t),n,i,r,a)}function Ro(e,t,n,i){s(e).uniform4fv(s(t),_(n,i))}function Po(e,t,n,i){s(e).uniform4fv(s(t),_(n,i))}function Co(e,t,n,i){s(e).uniform4iv(s(t),g(n,i))}function Lo(e,t,n,i){s(e).uniform4iv(s(t),g(n,i))}function Do(e,t,n,i){s(e).uniform4uiv(s(t),v(n,i))}function Uo(e,t,n,i){s(e).uniformBlockBinding(s(t),n>>>0,i>>>0)}function Io(e,t,n,i,r){s(e).uniformMatrix2fv(s(t),0!==n,_(i,r))}function No(e,t,n,i,r){s(e).uniformMatrix2fv(s(t),0!==n,_(i,r))}function Oo(e,t,n,i,r){s(e).uniformMatrix2x3fv(s(t),0!==n,_(i,r))}function Fo(e,t,n,i,r){s(e).uniformMatrix2x4fv(s(t),0!==n,_(i,r))}function Bo(e,t,n,i,r){s(e).uniformMatrix3fv(s(t),0!==n,_(i,r))}function zo(e,t,n,i,r){s(e).uniformMatrix3fv(s(t),0!==n,_(i,r))}function Ho(e,t,n,i,r){s(e).uniformMatrix3x2fv(s(t),0!==n,_(i,r))}function Go(e,t,n,i,r){s(e).uniformMatrix3x4fv(s(t),0!==n,_(i,r))}function ko(e,t,n,i,r){s(e).uniformMatrix4fv(s(t),0!==n,_(i,r))}function Vo(e,t,n,i,r){s(e).uniformMatrix4fv(s(t),0!==n,_(i,r))}function Wo(e,t,n,i,r){s(e).uniformMatrix4x2fv(s(t),0!==n,_(i,r))}function Xo(e,t,n,i,r){s(e).uniformMatrix4x3fv(s(t),0!==n,_(i,r))}function jo(e){s(e).unmap()}function qo(e,t){s(e).useProgram(s(t))}function Yo(e,t){s(e).useProgram(s(t))}function Ko(e,t,n){s(e).vertexAttribDivisorANGLE(t>>>0,n>>>0)}function Zo(e,t,n){s(e).vertexAttribDivisor(t>>>0,n>>>0)}function Jo(e,t,n,i,r,a){s(e).vertexAttribIPointer(t>>>0,n,i>>>0,r,a)}function $o(e,t,n,i,r,a,o){s(e).vertexAttribPointer(t>>>0,n,i>>>0,0!==r,a,o)}function Qo(e,t,n,i,r,a,o){s(e).vertexAttribPointer(t>>>0,n,i>>>0,0!==r,a,o)}function ec(e,t,n,i,r){s(e).viewport(t,n,i,r)}function tc(e,t,n,i,r){s(e).viewport(t,n,i,r)}function nc(){return f((function(e,t,n,i,r,a){s(e).writeBuffer(s(t),n,s(i),r,a)}),arguments)}function ic(e){const t=s(e);return"boolean"==typeof t?t?1:0:2}function rc(e){const t=A(e).original;return 1==t.cnt--&&(t.a=0,!0)}function ac(e,t,n){return c(P(e,t,804,Ee))}function sc(e,t,n){return c(P(e,t,899,Te))}function oc(e,t){const n=S(C(s(t)),i.__wbindgen_export_2,i.__wbindgen_export_3),r=w;T().setInt32(e+4,r,!0),T().setInt32(e+0,n,!0)}function cc(e){return"function"==typeof s(e)}function lc(e){return null===s(e)}function uc(e){return void 0===s(e)}function dc(){return c(i.memory)}function hc(e,t){const n=s(t),i="number"==typeof n?n:void 0;T().setFloat64(e+8,x(i)?0:i,!0),T().setInt32(e+0,!x(i),!0)}function fc(e){return c(e)}function pc(e){return c(s(e))}function _c(e){A(e)}function mc(e,t){const n=s(t),r="string"==typeof n?n:void 0;var a=x(r)?0:S(r,i.__wbindgen_export_2,i.__wbindgen_export_3),o=w;T().setInt32(e+4,o,!0),T().setInt32(e+0,a,!0)}function gc(e,t){return c(h(e,t))}function bc(e,t){throw new Error(h(e,t))}},437:(e,t,n)=>{n.d(t,{$EB:()=>c,$p8:()=>Os,BKk:()=>$n,CmU:()=>Fs,DXC:()=>is,Gu$:()=>us,HiM:()=>Ns,Ho_:()=>rs,I9Y:()=>ve,IUQ:()=>ze,JeP:()=>Va,LlO:()=>Jn,LoY:()=>An,LuO:()=>Xs,NRn:()=>qe,O9p:()=>Ct,PTz:()=>Ve,Pq0:()=>We,Qev:()=>ae,TDQ:()=>ls,THS:()=>mn,V9B:()=>fn,XJ7:()=>ds,YHV:()=>js,Z58:()=>Wa,bdM:()=>pi,cZY:()=>Ks,cj9:()=>be,eHs:()=>qa,eaF:()=>Xn,fCn:()=>mi,fTw:()=>Zs,iNn:()=>qn,iyt:()=>dt,kBv:()=>r,kn4:()=>xt,mrM:()=>Ya,qtW:()=>vn,tXL:()=>fs,ubm:()=>ei,wtR:()=>a,zkh:()=>gi});const i="152",r={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},a={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},s=0,o=1,c=2,l=100,u=101,d=102,h=200,f=201,p=202,_=203,m=204,g=205,b=206,v=207,x=208,w=209,y=210,M=301,S=302,E=306,T=1e3,A=1001,R=1002,P=1003,C=1004,L=1005,D=1006,U=1007,I=1008,N=1009,O=1014,F=1015,B=1016,z=1020,H=1023,G=1026,k=1027,V=33776,W=33777,X=33778,j=33779,q=36492,Y=2300,K=2301,Z=2302,J=3001,$="srgb",Q="srgb-linear",ee="display-p3",te=7680,ne=35044,ie="300 es",re=1035;class ae{addEventListener(e,t){void 0===this._listeners&&(this._listeners={});const n=this._listeners;void 0===n[e]&&(n[e]=[]),-1===n[e].indexOf(t)&&n[e].push(t)}hasEventListener(e,t){if(void 0===this._listeners)return!1;const n=this._listeners;return void 0!==n[e]&&-1!==n[e].indexOf(t)}removeEventListener(e,t){if(void 0===this._listeners)return;const n=this._listeners[e];if(void 0!==n){const e=n.indexOf(t);-1!==e&&n.splice(e,1)}}dispatchEvent(e){if(void 0===this._listeners)return;const t=this._listeners[e.type];if(void 0!==t){e.target=this;const n=t.slice(0);for(let t=0,i=n.length;t<i;t++)n[t].call(this,e);e.target=null}}}const se=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let oe=1234567;const ce=Math.PI/180,le=180/Math.PI;function ue(){const e=4294967295*Math.random()|0,t=4294967295*Math.random()|0,n=4294967295*Math.random()|0,i=4294967295*Math.random()|0;return(se[255&e]+se[e>>8&255]+se[e>>16&255]+se[e>>24&255]+"-"+se[255&t]+se[t>>8&255]+"-"+se[t>>16&15|64]+se[t>>24&255]+"-"+se[63&n|128]+se[n>>8&255]+"-"+se[n>>16&255]+se[n>>24&255]+se[255&i]+se[i>>8&255]+se[i>>16&255]+se[i>>24&255]).toLowerCase()}function de(e,t,n){return Math.max(t,Math.min(n,e))}function he(e,t){return(e%t+t)%t}function fe(e,t,n){return(1-n)*e+n*t}function pe(e){return!(e&e-1)&&0!==e}function _e(e){return Math.pow(2,Math.floor(Math.log(e)/Math.LN2))}function me(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return e/65535;case Uint8Array:return e/255;case Int16Array:return Math.max(e/32767,-1);case Int8Array:return Math.max(e/127,-1);default:throw new Error("Invalid component type.")}}function ge(e,t){switch(t.constructor){case Float32Array:return e;case Uint16Array:return Math.round(65535*e);case Uint8Array:return Math.round(255*e);case Int16Array:return Math.round(32767*e);case Int8Array:return Math.round(127*e);default:throw new Error("Invalid component type.")}}const be={DEG2RAD:ce,RAD2DEG:le,generateUUID:ue,clamp:de,euclideanModulo:he,mapLinear:function(e,t,n,i,r){return i+(e-t)*(r-i)/(n-t)},inverseLerp:function(e,t,n){return e!==t?(n-e)/(t-e):0},lerp:fe,damp:function(e,t,n,i){return fe(e,t,1-Math.exp(-n*i))},pingpong:function(e,t=1){return t-Math.abs(he(e,2*t)-t)},smoothstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*(3-2*e)},smootherstep:function(e,t,n){return e<=t?0:e>=n?1:(e=(e-t)/(n-t))*e*e*(e*(6*e-15)+10)},randInt:function(e,t){return e+Math.floor(Math.random()*(t-e+1))},randFloat:function(e,t){return e+Math.random()*(t-e)},randFloatSpread:function(e){return e*(.5-Math.random())},seededRandom:function(e){void 0!==e&&(oe=e);let t=oe+=1831565813;return t=Math.imul(t^t>>>15,1|t),t^=t+Math.imul(t^t>>>7,61|t),((t^t>>>14)>>>0)/4294967296},degToRad:function(e){return e*ce},radToDeg:function(e){return e*le},isPowerOfTwo:pe,ceilPowerOfTwo:function(e){return Math.pow(2,Math.ceil(Math.log(e)/Math.LN2))},floorPowerOfTwo:_e,setQuaternionFromProperEuler:function(e,t,n,i,r){const a=Math.cos,s=Math.sin,o=a(n/2),c=s(n/2),l=a((t+i)/2),u=s((t+i)/2),d=a((t-i)/2),h=s((t-i)/2),f=a((i-t)/2),p=s((i-t)/2);switch(r){case"XYX":e.set(o*u,c*d,c*h,o*l);break;case"YZY":e.set(c*h,o*u,c*d,o*l);break;case"ZXZ":e.set(c*d,c*h,o*u,o*l);break;case"XZX":e.set(o*u,c*p,c*f,o*l);break;case"YXY":e.set(c*f,o*u,c*p,o*l);break;case"ZYZ":e.set(c*p,c*f,o*u,o*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+r)}},normalize:ge,denormalize:me};class ve{constructor(e=0,t=0){ve.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(de(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class xe{constructor(){xe.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,a,s,o,c){const l=this.elements;return l[0]=e,l[1]=i,l[2]=s,l[3]=t,l[4]=r,l[5]=o,l[6]=n,l[7]=a,l[8]=c,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[3],o=n[6],c=n[1],l=n[4],u=n[7],d=n[2],h=n[5],f=n[8],p=i[0],_=i[3],m=i[6],g=i[1],b=i[4],v=i[7],x=i[2],w=i[5],y=i[8];return r[0]=a*p+s*g+o*x,r[3]=a*_+s*b+o*w,r[6]=a*m+s*v+o*y,r[1]=c*p+l*g+u*x,r[4]=c*_+l*b+u*w,r[7]=c*m+l*v+u*y,r[2]=d*p+h*g+f*x,r[5]=d*_+h*b+f*w,r[8]=d*m+h*v+f*y,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],c=e[7],l=e[8];return t*a*l-t*s*c-n*r*l+n*s*o+i*r*c-i*a*o}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],c=e[7],l=e[8],u=l*a-s*c,d=s*o-l*r,h=c*r-a*o,f=t*u+n*d+i*h;if(0===f)return this.set(0,0,0,0,0,0,0,0,0);const p=1/f;return e[0]=u*p,e[1]=(i*c-l*n)*p,e[2]=(s*n-i*a)*p,e[3]=d*p,e[4]=(l*t-i*o)*p,e[5]=(i*r-s*t)*p,e[6]=h*p,e[7]=(n*o-c*t)*p,e[8]=(a*t-n*r)*p,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,s){const o=Math.cos(r),c=Math.sin(r);return this.set(n*o,n*c,-n*(o*a+c*s)+a+e,-i*c,i*o,-i*(-c*a+o*s)+s+t,0,0,1),this}scale(e,t){return this.premultiply(we.makeScale(e,t)),this}rotate(e){return this.premultiply(we.makeRotation(-e)),this}translate(e,t){return this.premultiply(we.makeTranslation(e,t)),this}makeTranslation(e,t){return this.set(1,0,e,0,1,t,0,0,1),this}makeRotation(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,n,t,0,0,0,1),this}makeScale(e,t){return this.set(e,0,0,0,t,0,0,0,1),this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<9;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return(new this.constructor).fromArray(this.elements)}}const we=new xe;function ye(e){for(let t=e.length-1;t>=0;--t)if(e[t]>=65535)return!0;return!1}function Me(e){return document.createElementNS("http://www.w3.org/1999/xhtml",e)}Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array;const Se={};function Ee(e){e in Se||(Se[e]=!0,console.warn(e))}function Te(e){return e<.04045?.0773993808*e:Math.pow(.9478672986*e+.0521327014,2.4)}function Ae(e){return e<.0031308?12.92*e:1.055*Math.pow(e,.41666)-.055}const Re=(new xe).fromArray([.8224621,.0331941,.0170827,.177538,.9668058,.0723974,-1e-7,1e-7,.9105199]),Pe=(new xe).fromArray([1.2249401,-.0420569,-.0196376,-.2249404,1.0420571,-.0786361,1e-7,0,1.0982735]),Ce={[Q]:e=>e,[$]:e=>e.convertSRGBToLinear(),[ee]:function(e){return e.convertSRGBToLinear().applyMatrix3(Pe)}},Le={[Q]:e=>e,[$]:e=>e.convertLinearToSRGB(),[ee]:function(e){return e.applyMatrix3(Re).convertLinearToSRGB()}},De={enabled:!0,get legacyMode(){return console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),!this.enabled},set legacyMode(e){console.warn("THREE.ColorManagement: .legacyMode=false renamed to .enabled=true in r150."),this.enabled=!e},get workingColorSpace(){return Q},set workingColorSpace(e){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(e,t,n){if(!1===this.enabled||t===n||!t||!n)return e;const i=Ce[t],r=Le[n];if(void 0===i||void 0===r)throw new Error(`Unsupported color space conversion, "${t}" to "${n}".`);return r(i(e))},fromWorkingColorSpace:function(e,t){return this.convert(e,this.workingColorSpace,t)},toWorkingColorSpace:function(e,t){return this.convert(e,t,this.workingColorSpace)}};let Ue;class Ie{static getDataURL(e){if(/^data:/i.test(e.src))return e.src;if("undefined"==typeof HTMLCanvasElement)return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{void 0===Ue&&(Ue=Me("canvas")),Ue.width=e.width,Ue.height=e.height;const n=Ue.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=Ue}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const t=Me("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let e=0;e<r.length;e++)r[e]=255*Te(r[e]/255);return n.putImageData(i,0,0),t}if(e.data){const t=e.data.slice(0);for(let e=0;e<t.length;e++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[e]=Math.floor(255*Te(t[e]/255)):t[e]=Te(t[e]);return{data:t,width:e.width,height:e.height}}return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Ne{constructor(e=null){this.isSource=!0,this.uuid=ue(),this.data=e,this.version=0}set needsUpdate(e){!0===e&&this.version++}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.images[this.uuid])return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(null!==i){let e;if(Array.isArray(i)){e=[];for(let t=0,n=i.length;t<n;t++)i[t].isDataTexture?e.push(Oe(i[t].image)):e.push(Oe(i[t]))}else e=Oe(i);n.url=e}return t||(e.images[this.uuid]=n),n}}function Oe(e){return"undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap?Ie.getDataURL(e):e.data?{data:Array.from(e.data),width:e.width,height:e.height,type:e.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Fe=0;class Be extends ae{constructor(e=Be.DEFAULT_IMAGE,t=Be.DEFAULT_MAPPING,n=1001,i=1001,r=1006,a=1008,s=1023,o=1009,c=Be.DEFAULT_ANISOTROPY,l=""){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Fe++}),this.uuid=ue(),this.name="",this.source=new Ne(e),this.mipmaps=[],this.mapping=t,this.channel=0,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=c,this.format=s,this.internalFormat=null,this.type=o,this.offset=new ve(0,0),this.repeat=new ve(1,1),this.center=new ve(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new xe,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,"string"==typeof l?this.colorSpace=l:(Ee("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=l===J?$:""),this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e=null){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return(new this.constructor).copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.channel=e.channel,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.colorSpace=e.colorSpace,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=void 0===e||"string"==typeof e;if(!t&&void 0!==e.textures[this.uuid])return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(300!==this.mapping)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case T:e.x=e.x-Math.floor(e.x);break;case A:e.x=e.x<0?0:1;break;case R:1===Math.abs(Math.floor(e.x)%2)?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x)}if(e.y<0||e.y>1)switch(this.wrapT){case T:e.y=e.y-Math.floor(e.y);break;case A:e.y=e.y<0?0:1;break;case R:1===Math.abs(Math.floor(e.y)%2)?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y)}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){!0===e&&(this.version++,this.source.needsUpdate=!0)}get encoding(){return Ee("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace===$?J:3e3}set encoding(e){Ee("THREE.Texture: Property .encoding has been replaced by .colorSpace."),this.colorSpace=e===J?$:""}}Be.DEFAULT_IMAGE=null,Be.DEFAULT_MAPPING=300,Be.DEFAULT_ANISOTROPY=1;class ze{constructor(e=0,t=0,n=0,i=1){ze.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=void 0!==e.w?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const a=.01,s=.1,o=e.elements,c=o[0],l=o[4],u=o[8],d=o[1],h=o[5],f=o[9],p=o[2],_=o[6],m=o[10];if(Math.abs(l-d)<a&&Math.abs(u-p)<a&&Math.abs(f-_)<a){if(Math.abs(l+d)<s&&Math.abs(u+p)<s&&Math.abs(f+_)<s&&Math.abs(c+h+m-3)<s)return this.set(1,0,0,0),this;t=Math.PI;const e=(c+1)/2,o=(h+1)/2,g=(m+1)/2,b=(l+d)/4,v=(u+p)/4,x=(f+_)/4;return e>o&&e>g?e<a?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(e),i=b/n,r=v/n):o>g?o<a?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(o),n=b/i,r=x/i):g<a?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(g),n=v/r,i=x/r),this.set(n,i,r,t),this}let g=Math.sqrt((_-f)*(_-f)+(u-p)*(u-p)+(d-l)*(d-l));return Math.abs(g)<.001&&(g=1),this.x=(_-f)/g,this.y=(u-p)/g,this.z=(d-l)/g,this.w=Math.acos((c+h+m-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class He extends ae{constructor(e=1,t=1,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new ze(0,0,e,t),this.scissorTest=!1,this.viewport=new ze(0,0,e,t);const i={width:e,height:t,depth:1};void 0!==n.encoding&&(Ee("THREE.WebGLRenderTarget: option.encoding has been replaced by option.colorSpace."),n.colorSpace=n.encoding===J?$:""),this.texture=new Be(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=void 0!==n.generateMipmaps&&n.generateMipmaps,this.texture.internalFormat=void 0!==n.internalFormat?n.internalFormat:null,this.texture.minFilter=void 0!==n.minFilter?n.minFilter:D,this.depthBuffer=void 0===n.depthBuffer||n.depthBuffer,this.stencilBuffer=void 0!==n.stencilBuffer&&n.stencilBuffer,this.depthTexture=void 0!==n.depthTexture?n.depthTexture:null,this.samples=void 0!==n.samples?n.samples:0}setSize(e,t,n=1){this.width===e&&this.height===t&&this.depth===n||(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return(new this.constructor).copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.scissor.copy(e.scissor),this.scissorTest=e.scissorTest,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new Ne(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,null!==e.depthTexture&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class Ge extends Be{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=P,this.minFilter=P,this.wrapR=A,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class ke extends Be{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=P,this.minFilter=P,this.wrapR=A,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Ve{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,s){let o=n[i+0],c=n[i+1],l=n[i+2],u=n[i+3];const d=r[a+0],h=r[a+1],f=r[a+2],p=r[a+3];if(0===s)return e[t+0]=o,e[t+1]=c,e[t+2]=l,void(e[t+3]=u);if(1===s)return e[t+0]=d,e[t+1]=h,e[t+2]=f,void(e[t+3]=p);if(u!==p||o!==d||c!==h||l!==f){let e=1-s;const t=o*d+c*h+l*f+u*p,n=t>=0?1:-1,i=1-t*t;if(i>Number.EPSILON){const r=Math.sqrt(i),a=Math.atan2(r,t*n);e=Math.sin(e*a)/r,s=Math.sin(s*a)/r}const r=s*n;if(o=o*e+d*r,c=c*e+h*r,l=l*e+f*r,u=u*e+p*r,e===1-s){const e=1/Math.sqrt(o*o+c*c+l*l+u*u);o*=e,c*=e,l*=e,u*=e}}e[t]=o,e[t+1]=c,e[t+2]=l,e[t+3]=u}static multiplyQuaternionsFlat(e,t,n,i,r,a){const s=n[i],o=n[i+1],c=n[i+2],l=n[i+3],u=r[a],d=r[a+1],h=r[a+2],f=r[a+3];return e[t]=s*f+l*u+o*h-c*d,e[t+1]=o*f+l*d+c*u-s*h,e[t+2]=c*f+l*h+s*d-o*u,e[t+3]=l*f-s*u-o*d-c*h,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,s=Math.cos,o=Math.sin,c=s(n/2),l=s(i/2),u=s(r/2),d=o(n/2),h=o(i/2),f=o(r/2);switch(a){case"XYZ":this._x=d*l*u+c*h*f,this._y=c*h*u-d*l*f,this._z=c*l*f+d*h*u,this._w=c*l*u-d*h*f;break;case"YXZ":this._x=d*l*u+c*h*f,this._y=c*h*u-d*l*f,this._z=c*l*f-d*h*u,this._w=c*l*u+d*h*f;break;case"ZXY":this._x=d*l*u-c*h*f,this._y=c*h*u+d*l*f,this._z=c*l*f+d*h*u,this._w=c*l*u-d*h*f;break;case"ZYX":this._x=d*l*u-c*h*f,this._y=c*h*u+d*l*f,this._z=c*l*f-d*h*u,this._w=c*l*u+d*h*f;break;case"YZX":this._x=d*l*u+c*h*f,this._y=c*h*u+d*l*f,this._z=c*l*f-d*h*u,this._w=c*l*u-d*h*f;break;case"XZY":this._x=d*l*u-c*h*f,this._y=c*h*u-d*l*f,this._z=c*l*f+d*h*u,this._w=c*l*u+d*h*f;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return!1!==t&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],s=t[5],o=t[9],c=t[2],l=t[6],u=t[10],d=n+s+u;if(d>0){const e=.5/Math.sqrt(d+1);this._w=.25/e,this._x=(l-o)*e,this._y=(r-c)*e,this._z=(a-i)*e}else if(n>s&&n>u){const e=2*Math.sqrt(1+n-s-u);this._w=(l-o)/e,this._x=.25*e,this._y=(i+a)/e,this._z=(r+c)/e}else if(s>u){const e=2*Math.sqrt(1+s-n-u);this._w=(r-c)/e,this._x=(i+a)/e,this._y=.25*e,this._z=(o+l)/e}else{const e=2*Math.sqrt(1+u-n-s);this._w=(a-i)/e,this._x=(r+c)/e,this._y=(o+l)/e,this._z=.25*e}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(de(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(0===n)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return 0===e?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,s=t._x,o=t._y,c=t._z,l=t._w;return this._x=n*l+a*s+i*c-r*o,this._y=i*l+a*o+r*s-n*c,this._z=r*l+a*c+n*o-i*s,this._w=a*l-n*s-i*o-r*c,this._onChangeCallback(),this}slerp(e,t){if(0===t)return this;if(1===t)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let s=a*e._w+n*e._x+i*e._y+r*e._z;if(s<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,s=-s):this.copy(e),s>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const o=1-s*s;if(o<=Number.EPSILON){const e=1-t;return this._w=e*a+t*this._w,this._x=e*n+t*this._x,this._y=e*i+t*this._y,this._z=e*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const c=Math.sqrt(o),l=Math.atan2(c,s),u=Math.sin((1-t)*l)/c,d=Math.sin(t*l)/c;return this._w=a*u+this._w*d,this._x=n*u+this._x*d,this._y=i*u+this._y*d,this._z=r*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}toJSON(){return this.toArray()}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class We{constructor(e=0,t=0,n=0){We.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return void 0===n&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(je.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(je.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,s=e.z,o=e.w,c=o*t+a*i-s*n,l=o*n+s*t-r*i,u=o*i+r*n-a*t,d=-r*t-a*n-s*i;return this.x=c*o+d*-r+l*-s-u*-a,this.y=l*o+d*-a+u*-r-c*-s,this.z=u*o+d*-s+c*-a-l*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,s=t.y,o=t.z;return this.x=i*o-r*s,this.y=r*a-n*o,this.z=n*s-i*a,this}projectOnVector(e){const t=e.lengthSq();if(0===t)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Xe.copy(this).projectOnVector(e),this.sub(Xe)}reflect(e){return this.sub(Xe.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(0===t)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(de(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,4*t)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,3*t)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}setFromColor(e){return this.x=e.r,this.y=e.g,this.z=e.b,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=2*(Math.random()-.5),t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const Xe=new We,je=new Ve;class qe{constructor(e=new We(1/0,1/0,1/0),t=new We(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t+=3)this.expandByPoint(Ke.fromArray(e,t));return this}setFromBufferAttribute(e){this.makeEmpty();for(let t=0,n=e.count;t<n;t++)this.expandByPoint(Ke.fromBufferAttribute(e,t));return this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ke.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return(new this.constructor).copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){if(e.updateWorldMatrix(!1,!1),void 0!==e.boundingBox)null===e.boundingBox&&e.computeBoundingBox(),Ze.copy(e.boundingBox),Ze.applyMatrix4(e.matrixWorld),this.union(Ze);else{const n=e.geometry;if(void 0!==n)if(t&&void 0!==n.attributes&&void 0!==n.attributes.position){const t=n.attributes.position;for(let n=0,i=t.count;n<i;n++)Ke.fromBufferAttribute(t,n).applyMatrix4(e.matrixWorld),this.expandByPoint(Ke)}else null===n.boundingBox&&n.computeBoundingBox(),Ze.copy(n.boundingBox),Ze.applyMatrix4(e.matrixWorld),this.union(Ze)}const n=e.children;for(let e=0,i=n.length;e<i;e++)this.expandByObject(n[e],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ke),Ke.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(it),rt.subVectors(this.max,it),Je.subVectors(e.a,it),$e.subVectors(e.b,it),Qe.subVectors(e.c,it),et.subVectors($e,Je),tt.subVectors(Qe,$e),nt.subVectors(Je,Qe);let t=[0,-et.z,et.y,0,-tt.z,tt.y,0,-nt.z,nt.y,et.z,0,-et.x,tt.z,0,-tt.x,nt.z,0,-nt.x,-et.y,et.x,0,-tt.y,tt.x,0,-nt.y,nt.x,0];return!!ot(t,Je,$e,Qe,rt)&&(t=[1,0,0,0,1,0,0,0,1],!!ot(t,Je,$e,Qe,rt)&&(at.crossVectors(et,tt),t=[at.x,at.y,at.z],ot(t,Je,$e,Qe,rt)))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return this.clampPoint(e,Ke).distanceTo(e)}getBoundingSphere(e){return this.isEmpty()?e.makeEmpty():(this.getCenter(e.center),e.radius=.5*this.getSize(Ke).length()),e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()||(Ye[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Ye[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Ye[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Ye[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Ye[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Ye[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Ye[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Ye[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Ye)),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Ye=[new We,new We,new We,new We,new We,new We,new We,new We],Ke=new We,Ze=new qe,Je=new We,$e=new We,Qe=new We,et=new We,tt=new We,nt=new We,it=new We,rt=new We,at=new We,st=new We;function ot(e,t,n,i,r){for(let a=0,s=e.length-3;a<=s;a+=3){st.fromArray(e,a);const s=r.x*Math.abs(st.x)+r.y*Math.abs(st.y)+r.z*Math.abs(st.z),o=t.dot(st),c=n.dot(st),l=i.dot(st);if(Math.max(-Math.max(o,c,l),Math.min(o,c,l))>s)return!1}return!0}const ct=new qe,lt=new We,ut=new We;class dt{constructor(e=new We,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;void 0!==t?n.copy(t):ct.setFromPoints(e).getCenter(n);let i=0;for(let t=0,r=e.length;t<r;t++)i=Math.max(i,n.distanceToSquared(e[t]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;lt.subVectors(e,this.center);const t=lt.lengthSq();if(t>this.radius*this.radius){const e=Math.sqrt(t),n=.5*(e-this.radius);this.center.addScaledVector(lt,n/e),this.radius+=n}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(!0===this.center.equals(e.center)?this.radius=Math.max(this.radius,e.radius):(ut.subVectors(e.center,this.center).setLength(e.radius),this.expandByPoint(lt.copy(e.center).add(ut)),this.expandByPoint(lt.copy(e.center).sub(ut))),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return(new this.constructor).copy(this)}}const ht=new We,ft=new We,pt=new We,_t=new We,mt=new We,gt=new We,bt=new We;class vt{constructor(e=new We,t=new We(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.origin).addScaledVector(this.direction,e)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,ht)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.origin).addScaledVector(this.direction,n)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=ht.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(ht.copy(this.origin).addScaledVector(this.direction,t),ht.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){ft.copy(e).add(t).multiplyScalar(.5),pt.copy(t).sub(e).normalize(),_t.copy(this.origin).sub(ft);const r=.5*e.distanceTo(t),a=-this.direction.dot(pt),s=_t.dot(this.direction),o=-_t.dot(pt),c=_t.lengthSq(),l=Math.abs(1-a*a);let u,d,h,f;if(l>0)if(u=a*o-s,d=a*s-o,f=r*l,u>=0)if(d>=-f)if(d<=f){const e=1/l;u*=e,d*=e,h=u*(u+a*d+2*s)+d*(a*u+d+2*o)+c}else d=r,u=Math.max(0,-(a*d+s)),h=-u*u+d*(d+2*o)+c;else d=-r,u=Math.max(0,-(a*d+s)),h=-u*u+d*(d+2*o)+c;else d<=-f?(u=Math.max(0,-(-a*r+s)),d=u>0?-r:Math.min(Math.max(-r,-o),r),h=-u*u+d*(d+2*o)+c):d<=f?(u=0,d=Math.min(Math.max(-r,-o),r),h=d*(d+2*o)+c):(u=Math.max(0,-(a*r+s)),d=u>0?r:Math.min(Math.max(-r,-o),r),h=-u*u+d*(d+2*o)+c);else d=a>0?-r:r,u=Math.max(0,-(a*d+s)),h=-u*u+d*(d+2*o)+c;return n&&n.copy(this.origin).addScaledVector(this.direction,u),i&&i.copy(ft).addScaledVector(pt,d),h}intersectSphere(e,t){ht.subVectors(e.center,this.origin);const n=ht.dot(this.direction),i=ht.dot(ht)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),s=n-a,o=n+a;return o<0?null:s<0?this.at(o,t):this.at(s,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(0===t)return 0===e.distanceToPoint(this.origin)?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return null===n?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return 0===t||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,s,o;const c=1/this.direction.x,l=1/this.direction.y,u=1/this.direction.z,d=this.origin;return c>=0?(n=(e.min.x-d.x)*c,i=(e.max.x-d.x)*c):(n=(e.max.x-d.x)*c,i=(e.min.x-d.x)*c),l>=0?(r=(e.min.y-d.y)*l,a=(e.max.y-d.y)*l):(r=(e.max.y-d.y)*l,a=(e.min.y-d.y)*l),n>a||r>i?null:((r>n||isNaN(n))&&(n=r),(a<i||isNaN(i))&&(i=a),u>=0?(s=(e.min.z-d.z)*u,o=(e.max.z-d.z)*u):(s=(e.max.z-d.z)*u,o=(e.min.z-d.z)*u),n>o||s>i?null:((s>n||n!=n)&&(n=s),(o<i||i!=i)&&(i=o),i<0?null:this.at(n>=0?n:i,t)))}intersectsBox(e){return null!==this.intersectBox(e,ht)}intersectTriangle(e,t,n,i,r){mt.subVectors(t,e),gt.subVectors(n,e),bt.crossVectors(mt,gt);let a,s=this.direction.dot(bt);if(s>0){if(i)return null;a=1}else{if(!(s<0))return null;a=-1,s=-s}_t.subVectors(this.origin,e);const o=a*this.direction.dot(gt.crossVectors(_t,gt));if(o<0)return null;const c=a*this.direction.dot(mt.cross(_t));if(c<0)return null;if(o+c>s)return null;const l=-a*_t.dot(bt);return l<0?null:this.at(l/s,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return(new this.constructor).copy(this)}}class xt{constructor(){xt.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,a,s,o,c,l,u,d,h,f,p,_){const m=this.elements;return m[0]=e,m[4]=t,m[8]=n,m[12]=i,m[1]=r,m[5]=a,m[9]=s,m[13]=o,m[2]=c,m[6]=l,m[10]=u,m[14]=d,m[3]=h,m[7]=f,m[11]=p,m[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return(new xt).fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/wt.setFromMatrixColumn(e,0).length(),r=1/wt.setFromMatrixColumn(e,1).length(),a=1/wt.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),s=Math.sin(n),o=Math.cos(i),c=Math.sin(i),l=Math.cos(r),u=Math.sin(r);if("XYZ"===e.order){const e=a*l,n=a*u,i=s*l,r=s*u;t[0]=o*l,t[4]=-o*u,t[8]=c,t[1]=n+i*c,t[5]=e-r*c,t[9]=-s*o,t[2]=r-e*c,t[6]=i+n*c,t[10]=a*o}else if("YXZ"===e.order){const e=o*l,n=o*u,i=c*l,r=c*u;t[0]=e+r*s,t[4]=i*s-n,t[8]=a*c,t[1]=a*u,t[5]=a*l,t[9]=-s,t[2]=n*s-i,t[6]=r+e*s,t[10]=a*o}else if("ZXY"===e.order){const e=o*l,n=o*u,i=c*l,r=c*u;t[0]=e-r*s,t[4]=-a*u,t[8]=i+n*s,t[1]=n+i*s,t[5]=a*l,t[9]=r-e*s,t[2]=-a*c,t[6]=s,t[10]=a*o}else if("ZYX"===e.order){const e=a*l,n=a*u,i=s*l,r=s*u;t[0]=o*l,t[4]=i*c-n,t[8]=e*c+r,t[1]=o*u,t[5]=r*c+e,t[9]=n*c-i,t[2]=-c,t[6]=s*o,t[10]=a*o}else if("YZX"===e.order){const e=a*o,n=a*c,i=s*o,r=s*c;t[0]=o*l,t[4]=r-e*u,t[8]=i*u+n,t[1]=u,t[5]=a*l,t[9]=-s*l,t[2]=-c*l,t[6]=n*u+i,t[10]=e-r*u}else if("XZY"===e.order){const e=a*o,n=a*c,i=s*o,r=s*c;t[0]=o*l,t[4]=-u,t[8]=c*l,t[1]=e*u+r,t[5]=a*l,t[9]=n*u-i,t[2]=i*u-n,t[6]=s*l,t[10]=r*u+e}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Mt,e,St)}lookAt(e,t,n){const i=this.elements;return At.subVectors(e,t),0===At.lengthSq()&&(At.z=1),At.normalize(),Et.crossVectors(n,At),0===Et.lengthSq()&&(1===Math.abs(n.z)?At.x+=1e-4:At.z+=1e-4,At.normalize(),Et.crossVectors(n,At)),Et.normalize(),Tt.crossVectors(At,Et),i[0]=Et.x,i[4]=Tt.x,i[8]=At.x,i[1]=Et.y,i[5]=Tt.y,i[9]=At.y,i[2]=Et.z,i[6]=Tt.z,i[10]=At.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],s=n[4],o=n[8],c=n[12],l=n[1],u=n[5],d=n[9],h=n[13],f=n[2],p=n[6],_=n[10],m=n[14],g=n[3],b=n[7],v=n[11],x=n[15],w=i[0],y=i[4],M=i[8],S=i[12],E=i[1],T=i[5],A=i[9],R=i[13],P=i[2],C=i[6],L=i[10],D=i[14],U=i[3],I=i[7],N=i[11],O=i[15];return r[0]=a*w+s*E+o*P+c*U,r[4]=a*y+s*T+o*C+c*I,r[8]=a*M+s*A+o*L+c*N,r[12]=a*S+s*R+o*D+c*O,r[1]=l*w+u*E+d*P+h*U,r[5]=l*y+u*T+d*C+h*I,r[9]=l*M+u*A+d*L+h*N,r[13]=l*S+u*R+d*D+h*O,r[2]=f*w+p*E+_*P+m*U,r[6]=f*y+p*T+_*C+m*I,r[10]=f*M+p*A+_*L+m*N,r[14]=f*S+p*R+_*D+m*O,r[3]=g*w+b*E+v*P+x*U,r[7]=g*y+b*T+v*C+x*I,r[11]=g*M+b*A+v*L+x*N,r[15]=g*S+b*R+v*D+x*O,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],s=e[5],o=e[9],c=e[13],l=e[2],u=e[6],d=e[10],h=e[14];return e[3]*(+r*o*u-i*c*u-r*s*d+n*c*d+i*s*h-n*o*h)+e[7]*(+t*o*h-t*c*d+r*a*d-i*a*h+i*c*l-r*o*l)+e[11]*(+t*c*u-t*s*h-r*a*u+n*a*h+r*s*l-n*c*l)+e[15]*(-i*s*l-t*o*u+t*s*d+i*a*u-n*a*d+n*o*l)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],s=e[5],o=e[6],c=e[7],l=e[8],u=e[9],d=e[10],h=e[11],f=e[12],p=e[13],_=e[14],m=e[15],g=u*_*c-p*d*c+p*o*h-s*_*h-u*o*m+s*d*m,b=f*d*c-l*_*c-f*o*h+a*_*h+l*o*m-a*d*m,v=l*p*c-f*u*c+f*s*h-a*p*h-l*s*m+a*u*m,x=f*u*o-l*p*o-f*s*d+a*p*d+l*s*_-a*u*_,w=t*g+n*b+i*v+r*x;if(0===w)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const y=1/w;return e[0]=g*y,e[1]=(p*d*r-u*_*r-p*i*h+n*_*h+u*i*m-n*d*m)*y,e[2]=(s*_*r-p*o*r+p*i*c-n*_*c-s*i*m+n*o*m)*y,e[3]=(u*o*r-s*d*r-u*i*c+n*d*c+s*i*h-n*o*h)*y,e[4]=b*y,e[5]=(l*_*r-f*d*r+f*i*h-t*_*h-l*i*m+t*d*m)*y,e[6]=(f*o*r-a*_*r-f*i*c+t*_*c+a*i*m-t*o*m)*y,e[7]=(a*d*r-l*o*r+l*i*c-t*d*c-a*i*h+t*o*h)*y,e[8]=v*y,e[9]=(f*u*r-l*p*r-f*n*h+t*p*h+l*n*m-t*u*m)*y,e[10]=(a*p*r-f*s*r+f*n*c-t*p*c-a*n*m+t*s*m)*y,e[11]=(l*s*r-a*u*r-l*n*c+t*u*c+a*n*h-t*s*h)*y,e[12]=x*y,e[13]=(l*p*i-f*u*i+f*n*d-t*p*d-l*n*_+t*u*_)*y,e[14]=(f*s*i-a*p*i-f*n*o+t*p*o+a*n*_-t*s*_)*y,e[15]=(a*u*i-l*s*i+l*n*o-t*u*o-a*n*d+t*s*d)*y,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,s=e.y,o=e.z,c=r*a,l=r*s;return this.set(c*a+n,c*s-i*o,c*o+i*s,0,c*s+i*o,l*s+n,l*o-i*a,0,c*o-i*s,l*o+i*a,r*o*o+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,s=t._z,o=t._w,c=r+r,l=a+a,u=s+s,d=r*c,h=r*l,f=r*u,p=a*l,_=a*u,m=s*u,g=o*c,b=o*l,v=o*u,x=n.x,w=n.y,y=n.z;return i[0]=(1-(p+m))*x,i[1]=(h+v)*x,i[2]=(f-b)*x,i[3]=0,i[4]=(h-v)*w,i[5]=(1-(d+m))*w,i[6]=(_+g)*w,i[7]=0,i[8]=(f+b)*y,i[9]=(_-g)*y,i[10]=(1-(d+p))*y,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=wt.set(i[0],i[1],i[2]).length();const a=wt.set(i[4],i[5],i[6]).length(),s=wt.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],yt.copy(this);const o=1/r,c=1/a,l=1/s;return yt.elements[0]*=o,yt.elements[1]*=o,yt.elements[2]*=o,yt.elements[4]*=c,yt.elements[5]*=c,yt.elements[6]*=c,yt.elements[8]*=l,yt.elements[9]*=l,yt.elements[10]*=l,t.setFromRotationMatrix(yt),n.x=r,n.y=a,n.z=s,this}makePerspective(e,t,n,i,r,a){const s=this.elements,o=2*r/(t-e),c=2*r/(n-i),l=(t+e)/(t-e),u=(n+i)/(n-i),d=-(a+r)/(a-r),h=-2*a*r/(a-r);return s[0]=o,s[4]=0,s[8]=l,s[12]=0,s[1]=0,s[5]=c,s[9]=u,s[13]=0,s[2]=0,s[6]=0,s[10]=d,s[14]=h,s[3]=0,s[7]=0,s[11]=-1,s[15]=0,this}makeOrthographic(e,t,n,i,r,a){const s=this.elements,o=1/(t-e),c=1/(n-i),l=1/(a-r),u=(t+e)*o,d=(n+i)*c,h=(a+r)*l;return s[0]=2*o,s[4]=0,s[8]=0,s[12]=-u,s[1]=0,s[5]=2*c,s[9]=0,s[13]=-d,s[2]=0,s[6]=0,s[10]=-2*l,s[14]=-h,s[3]=0,s[7]=0,s[11]=0,s[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let e=0;e<16;e++)if(t[e]!==n[e])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const wt=new We,yt=new xt,Mt=new We(0,0,0),St=new We(1,1,1),Et=new We,Tt=new We,At=new We,Rt=new xt,Pt=new Ve;class Ct{constructor(e=0,t=0,n=0,i=Ct.DEFAULT_ORDER){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],s=i[8],o=i[1],c=i[5],l=i[9],u=i[2],d=i[6],h=i[10];switch(t){case"XYZ":this._y=Math.asin(de(s,-1,1)),Math.abs(s)<.9999999?(this._x=Math.atan2(-l,h),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(d,c),this._z=0);break;case"YXZ":this._x=Math.asin(-de(l,-1,1)),Math.abs(l)<.9999999?(this._y=Math.atan2(s,h),this._z=Math.atan2(o,c)):(this._y=Math.atan2(-u,r),this._z=0);break;case"ZXY":this._x=Math.asin(de(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,h),this._z=Math.atan2(-a,c)):(this._y=0,this._z=Math.atan2(o,r));break;case"ZYX":this._y=Math.asin(-de(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,h),this._z=Math.atan2(o,r)):(this._x=0,this._z=Math.atan2(-a,c));break;case"YZX":this._z=Math.asin(de(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(-l,c),this._y=Math.atan2(-u,r)):(this._x=0,this._y=Math.atan2(s,h));break;case"XZY":this._z=Math.asin(-de(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(d,c),this._y=Math.atan2(s,r)):(this._x=Math.atan2(-l,h),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,!0===n&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Rt.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Rt,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return Pt.setFromEuler(this),this.setFromQuaternion(Pt,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],void 0!==e[3]&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}Ct.DEFAULT_ORDER="XYZ";class Lt{constructor(){this.mask=1}set(e){this.mask=1<<e>>>0}enable(e){this.mask|=1<<e}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e}disable(e){this.mask&=~(1<<e)}disableAll(){this.mask=0}test(e){return!!(this.mask&e.mask)}isEnabled(e){return!!(this.mask&1<<e)}}let Dt=0;const Ut=new We,It=new Ve,Nt=new xt,Ot=new We,Ft=new We,Bt=new We,zt=new Ve,Ht=new We(1,0,0),Gt=new We(0,1,0),kt=new We(0,0,1),Vt={type:"added"},Wt={type:"removed"};class Xt extends ae{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:Dt++}),this.uuid=ue(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Xt.DEFAULT_UP.clone();const e=new We,t=new Ct,n=new Ve,i=new We(1,1,1);t._onChange((function(){n.setFromEuler(t,!1)})),n._onChange((function(){t.setFromQuaternion(n,void 0,!1)})),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new xt},normalMatrix:{value:new xe}}),this.matrix=new xt,this.matrixWorld=new xt,this.matrixAutoUpdate=Xt.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=Xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.layers=new Lt,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return It.setFromAxisAngle(e,t),this.quaternion.multiply(It),this}rotateOnWorldAxis(e,t){return It.setFromAxisAngle(e,t),this.quaternion.premultiply(It),this}rotateX(e){return this.rotateOnAxis(Ht,e)}rotateY(e){return this.rotateOnAxis(Gt,e)}rotateZ(e){return this.rotateOnAxis(kt,e)}translateOnAxis(e,t){return Ut.copy(e).applyQuaternion(this.quaternion),this.position.add(Ut.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Ht,e)}translateY(e){return this.translateOnAxis(Gt,e)}translateZ(e){return this.translateOnAxis(kt,e)}localToWorld(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return this.updateWorldMatrix(!0,!1),e.applyMatrix4(Nt.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Ot.copy(e):Ot.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Ft.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Nt.lookAt(Ft,Ot,this.up):Nt.lookAt(Ot,Ft,this.up),this.quaternion.setFromRotationMatrix(Nt),i&&(Nt.extractRotation(i.matrixWorld),It.setFromRotationMatrix(Nt),this.quaternion.premultiply(It.invert()))}add(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(null!==e.parent&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Vt)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.remove(arguments[e]);return this}const t=this.children.indexOf(e);return-1!==t&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(Wt)),this}removeFromParent(){const e=this.parent;return null!==e&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(Wt)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Nt.copy(this.matrixWorld).invert(),null!==e.parent&&(e.parent.updateWorldMatrix(!0,!1),Nt.multiply(e.parent.matrixWorld)),e.applyMatrix4(Nt),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const i=this.children[n].getObjectByProperty(e,t);if(void 0!==i)return i}}getObjectsByProperty(e,t){let n=[];this[e]===t&&n.push(this);for(let i=0,r=this.children.length;i<r;i++){const r=this.children[i].getObjectsByProperty(e,t);r.length>0&&(n=n.concat(r))}return n}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ft,e,Bt),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ft,zt,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(!1===this.visible)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;null!==t&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const i=t[n];!0!==i.matrixWorldAutoUpdate&&!0!==e||i.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(!0===e&&null!==n&&!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),null===this.parent?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),!0===t){const e=this.children;for(let t=0,n=e.length;t<n;t++){const n=e[t];!0===n.matrixWorldAutoUpdate&&n.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=void 0===e||"string"==typeof e,n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};function r(t,n){return void 0===t[n.uuid]&&(t[n.uuid]=n.toJSON(e)),n.uuid}if(i.uuid=this.uuid,i.type=this.type,""!==this.name&&(i.name=this.name),!0===this.castShadow&&(i.castShadow=!0),!0===this.receiveShadow&&(i.receiveShadow=!0),!1===this.visible&&(i.visible=!1),!1===this.frustumCulled&&(i.frustumCulled=!1),0!==this.renderOrder&&(i.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),i.up=this.up.toArray(),!1===this.matrixAutoUpdate&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),null!==this.instanceColor&&(i.instanceColor=this.instanceColor.toJSON())),this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&!0!==this.environment.isRenderTargetTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const t=this.geometry.parameters;if(void 0!==t&&void 0!==t.shapes){const n=t.shapes;if(Array.isArray(n))for(let t=0,i=n.length;t<i;t++){const i=n[t];r(e.shapes,i)}else r(e.shapes,n)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),void 0!==this.skeleton&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),void 0!==this.material)if(Array.isArray(this.material)){const t=[];for(let n=0,i=this.material.length;n<i;n++)t.push(r(e.materials,this.material[n]));i.material=t}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let t=0;t<this.children.length;t++)i.children.push(this.children[t].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let t=0;t<this.animations.length;t++){const n=this.animations[t];i.animations.push(r(e.animations,n))}}if(t){const t=a(e.geometries),i=a(e.materials),r=a(e.textures),s=a(e.images),o=a(e.shapes),c=a(e.skeletons),l=a(e.animations),u=a(e.nodes);t.length>0&&(n.geometries=t),i.length>0&&(n.materials=i),r.length>0&&(n.textures=r),s.length>0&&(n.images=s),o.length>0&&(n.shapes=o),c.length>0&&(n.skeletons=c),l.length>0&&(n.animations=l),u.length>0&&(n.nodes=u)}return n.object=i,n;function a(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}}clone(e){return(new this.constructor).copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.animations=e.animations,this.userData=JSON.parse(JSON.stringify(e.userData)),!0===t)for(let t=0;t<e.children.length;t++){const n=e.children[t];this.add(n.clone())}return this}}Xt.DEFAULT_UP=new We(0,1,0),Xt.DEFAULT_MATRIX_AUTO_UPDATE=!0,Xt.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const jt=new We,qt=new We,Yt=new We,Kt=new We,Zt=new We,Jt=new We,$t=new We,Qt=new We,en=new We,tn=new We;let nn=!1;class rn{constructor(e=new We,t=new We,n=new We){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),jt.subVectors(e,t),i.cross(jt);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){jt.subVectors(i,t),qt.subVectors(n,t),Yt.subVectors(e,t);const a=jt.dot(jt),s=jt.dot(qt),o=jt.dot(Yt),c=qt.dot(qt),l=qt.dot(Yt),u=a*c-s*s;if(0===u)return r.set(-2,-1,-1);const d=1/u,h=(c*o-s*l)*d,f=(a*l-s*o)*d;return r.set(1-h-f,f,h)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Kt),Kt.x>=0&&Kt.y>=0&&Kt.x+Kt.y<=1}static getUV(e,t,n,i,r,a,s,o){return!1===nn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),nn=!0),this.getInterpolation(e,t,n,i,r,a,s,o)}static getInterpolation(e,t,n,i,r,a,s,o){return this.getBarycoord(e,t,n,i,Kt),o.setScalar(0),o.addScaledVector(r,Kt.x),o.addScaledVector(a,Kt.y),o.addScaledVector(s,Kt.z),o}static isFrontFacing(e,t,n,i){return jt.subVectors(n,t),qt.subVectors(e,t),jt.cross(qt).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return(new this.constructor).copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return jt.subVectors(this.c,this.b),qt.subVectors(this.a,this.b),.5*jt.cross(qt).length()}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return rn.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return rn.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return!1===nn&&(console.warn("THREE.Triangle.getUV() has been renamed to THREE.Triangle.getInterpolation()."),nn=!0),rn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}getInterpolation(e,t,n,i,r){return rn.getInterpolation(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return rn.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return rn.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,s;Zt.subVectors(i,n),Jt.subVectors(r,n),Qt.subVectors(e,n);const o=Zt.dot(Qt),c=Jt.dot(Qt);if(o<=0&&c<=0)return t.copy(n);en.subVectors(e,i);const l=Zt.dot(en),u=Jt.dot(en);if(l>=0&&u<=l)return t.copy(i);const d=o*u-l*c;if(d<=0&&o>=0&&l<=0)return a=o/(o-l),t.copy(n).addScaledVector(Zt,a);tn.subVectors(e,r);const h=Zt.dot(tn),f=Jt.dot(tn);if(f>=0&&h<=f)return t.copy(r);const p=h*c-o*f;if(p<=0&&c>=0&&f<=0)return s=c/(c-f),t.copy(n).addScaledVector(Jt,s);const _=l*f-h*u;if(_<=0&&u-l>=0&&h-f>=0)return $t.subVectors(r,i),s=(u-l)/(u-l+(h-f)),t.copy(i).addScaledVector($t,s);const m=1/(_+p+d);return a=p*m,s=d*m,t.copy(n).addScaledVector(Zt,a).addScaledVector(Jt,s)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let an=0;class sn extends ae{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:an++}),this.uuid=ue(),this.name="",this.type="Material",this.blending=1,this.side=0,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=204,this.blendDst=205,this.blendEquation=l,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=3,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=519,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=te,this.stencilZFail=te,this.stencilZPass=te,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(void 0!==e)for(const t in e){const n=e[t];if(void 0===n){console.warn(`THREE.Material: parameter '${t}' has value of undefined.`);continue}const i=this[t];void 0!==i?i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n:console.warn(`THREE.Material: '${t}' is not a property of THREE.${this.type}.`)}}toJSON(e){const t=void 0===e||"string"==typeof e;t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};function i(e){const t=[];for(const n in e){const i=e[n];delete i.metadata,t.push(i)}return t}if(n.uuid=this.uuid,n.type=this.type,""!==this.name&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),void 0!==this.roughness&&(n.roughness=this.roughness),void 0!==this.metalness&&(n.metalness=this.metalness),void 0!==this.sheen&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),void 0!==this.sheenRoughness&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&1!==this.emissiveIntensity&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),void 0!==this.specularIntensity&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),void 0!==this.shininess&&(n.shininess=this.shininess),void 0!==this.clearcoat&&(n.clearcoat=this.clearcoat),void 0!==this.clearcoatRoughness&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),void 0!==this.iridescence&&(n.iridescence=this.iridescence),void 0!==this.iridescenceIOR&&(n.iridescenceIOR=this.iridescenceIOR),void 0!==this.iridescenceThicknessRange&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,void 0!==this.combine&&(n.combine=this.combine)),void 0!==this.envMapIntensity&&(n.envMapIntensity=this.envMapIntensity),void 0!==this.reflectivity&&(n.reflectivity=this.reflectivity),void 0!==this.refractionRatio&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),void 0!==this.transmission&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),void 0!==this.thickness&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),void 0!==this.attenuationDistance&&this.attenuationDistance!==1/0&&(n.attenuationDistance=this.attenuationDistance),void 0!==this.attenuationColor&&(n.attenuationColor=this.attenuationColor.getHex()),void 0!==this.size&&(n.size=this.size),null!==this.shadowSide&&(n.shadowSide=this.shadowSide),void 0!==this.sizeAttenuation&&(n.sizeAttenuation=this.sizeAttenuation),1!==this.blending&&(n.blending=this.blending),0!==this.side&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),!0===this.transparent&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,void 0!==this.rotation&&0!==this.rotation&&(n.rotation=this.rotation),!0===this.polygonOffset&&(n.polygonOffset=!0),0!==this.polygonOffsetFactor&&(n.polygonOffsetFactor=this.polygonOffsetFactor),0!==this.polygonOffsetUnits&&(n.polygonOffsetUnits=this.polygonOffsetUnits),void 0!==this.linewidth&&1!==this.linewidth&&(n.linewidth=this.linewidth),void 0!==this.dashSize&&(n.dashSize=this.dashSize),void 0!==this.gapSize&&(n.gapSize=this.gapSize),void 0!==this.scale&&(n.scale=this.scale),!0===this.dithering&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),!0===this.alphaToCoverage&&(n.alphaToCoverage=this.alphaToCoverage),!0===this.premultipliedAlpha&&(n.premultipliedAlpha=this.premultipliedAlpha),!0===this.forceSinglePass&&(n.forceSinglePass=this.forceSinglePass),!0===this.wireframe&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),"round"!==this.wireframeLinecap&&(n.wireframeLinecap=this.wireframeLinecap),"round"!==this.wireframeLinejoin&&(n.wireframeLinejoin=this.wireframeLinejoin),!0===this.flatShading&&(n.flatShading=this.flatShading),!1===this.visible&&(n.visible=!1),!1===this.toneMapped&&(n.toneMapped=!1),!1===this.fog&&(n.fog=!1),Object.keys(this.userData).length>0&&(n.userData=this.userData),t){const t=i(e.textures),r=i(e.images);t.length>0&&(n.textures=t),r.length>0&&(n.images=r)}return n}clone(){return(new this.constructor).copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(null!==t){const e=t.length;n=new Array(e);for(let i=0;i!==e;++i)n[i]=t[i].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.forceSinglePass=e.forceSinglePass,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){!0===e&&this.version++}}const on={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},cn={h:0,s:0,l:0},ln={h:0,s:0,l:0};function un(e,t,n){return n<0&&(n+=1),n>1&&(n-=1),n<1/6?e+6*(t-e)*n:n<.5?t:n<2/3?e+6*(t-e)*(2/3-n):e}class dn{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,void 0===t&&void 0===n?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):"number"==typeof e?this.setHex(e):"string"==typeof e&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=$){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(255&e)/255,De.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=De.workingColorSpace){return this.r=e,this.g=t,this.b=n,De.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=De.workingColorSpace){if(e=he(e,1),t=de(t,0,1),n=de(n,0,1),0===t)this.r=this.g=this.b=n;else{const i=n<=.5?n*(1+t):n+t-n*t,r=2*n-i;this.r=un(r,i,e+1/3),this.g=un(r,i,e),this.b=un(r,i,e-1/3)}return De.toWorkingColorSpace(this,i),this}setStyle(e,t=$){function n(t){void 0!==t&&parseFloat(t)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^(\w+)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],s=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setRGB(Math.min(255,parseInt(r[1],10))/255,Math.min(255,parseInt(r[2],10))/255,Math.min(255,parseInt(r[3],10))/255,t);if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setRGB(Math.min(100,parseInt(r[1],10))/100,Math.min(100,parseInt(r[2],10))/100,Math.min(100,parseInt(r[3],10))/100,t);break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(s))return n(r[4]),this.setHSL(parseFloat(r[1])/360,parseFloat(r[2])/100,parseFloat(r[3])/100,t);break;default:console.warn("THREE.Color: Unknown color model "+e)}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const n=i[1],r=n.length;if(3===r)return this.setRGB(parseInt(n.charAt(0),16)/15,parseInt(n.charAt(1),16)/15,parseInt(n.charAt(2),16)/15,t);if(6===r)return this.setHex(parseInt(n,16),t);console.warn("THREE.Color: Invalid hex color "+e)}else if(e&&e.length>0)return this.setColorName(e,t);return this}setColorName(e,t=$){const n=on[e.toLowerCase()];return void 0!==n?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Te(e.r),this.g=Te(e.g),this.b=Te(e.b),this}copyLinearToSRGB(e){return this.r=Ae(e.r),this.g=Ae(e.g),this.b=Ae(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=$){return De.fromWorkingColorSpace(hn.copy(this),e),65536*Math.round(de(255*hn.r,0,255))+256*Math.round(de(255*hn.g,0,255))+Math.round(de(255*hn.b,0,255))}getHexString(e=$){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=De.workingColorSpace){De.fromWorkingColorSpace(hn.copy(this),t);const n=hn.r,i=hn.g,r=hn.b,a=Math.max(n,i,r),s=Math.min(n,i,r);let o,c;const l=(s+a)/2;if(s===a)o=0,c=0;else{const e=a-s;switch(c=l<=.5?e/(a+s):e/(2-a-s),a){case n:o=(i-r)/e+(i<r?6:0);break;case i:o=(r-n)/e+2;break;case r:o=(n-i)/e+4}o/=6}return e.h=o,e.s=c,e.l=l,e}getRGB(e,t=De.workingColorSpace){return De.fromWorkingColorSpace(hn.copy(this),t),e.r=hn.r,e.g=hn.g,e.b=hn.b,e}getStyle(e=$){De.fromWorkingColorSpace(hn.copy(this),e);const t=hn.r,n=hn.g,i=hn.b;return e!==$?`color(${e} ${t.toFixed(3)} ${n.toFixed(3)} ${i.toFixed(3)})`:`rgb(${Math.round(255*t)},${Math.round(255*n)},${Math.round(255*i)})`}offsetHSL(e,t,n){return this.getHSL(cn),cn.h+=e,cn.s+=t,cn.l+=n,this.setHSL(cn.h,cn.s,cn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(cn),e.getHSL(ln);const n=fe(cn.h,ln.h,t),i=fe(cn.s,ln.s,t),r=fe(cn.l,ln.l,t);return this.setHSL(n,i,r),this}setFromVector3(e){return this.r=e.x,this.g=e.y,this.b=e.z,this}applyMatrix3(e){const t=this.r,n=this.g,i=this.b,r=e.elements;return this.r=r[0]*t+r[3]*n+r[6]*i,this.g=r[1]*t+r[4]*n+r[7]*i,this.b=r[2]*t+r[5]*n+r[8]*i,this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const hn=new dn;dn.NAMES=on;class fn extends sn{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new dn(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const pn=new We,_n=new ve;class mn{constructor(e,t,n=!1){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=void 0!==e?e.length/t:0,this.normalized=n,this.usage=ne,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(2===this.itemSize)for(let t=0,n=this.count;t<n;t++)_n.fromBufferAttribute(this,t),_n.applyMatrix3(e),this.setXY(t,_n.x,_n.y);else if(3===this.itemSize)for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.applyMatrix3(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.applyMatrix4(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.applyNormalMatrix(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)pn.fromBufferAttribute(this,t),pn.transformDirection(e),this.setXYZ(t,pn.x,pn.y,pn.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=me(t,this.array)),t}setX(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=me(t,this.array)),t}setY(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=me(t,this.array)),t}setZ(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=me(t,this.array)),t}setW(e,t){return this.normalized&&(t=ge(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array),i=ge(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array),i=ge(i,this.array),r=ge(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return""!==this.name&&(e.name=this.name),this.usage!==ne&&(e.usage=this.usage),0===this.updateRange.offset&&-1===this.updateRange.count||(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class gn extends mn{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class bn extends mn{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class vn extends mn{constructor(e,t,n){super(new Float32Array(e),t,n)}}let xn=0;const wn=new xt,yn=new Xt,Mn=new We,Sn=new qe,En=new qe,Tn=new We;class An extends ae{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:xn++}),this.uuid=ue(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(ye(e)?bn:gn)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return void 0!==this.attributes[e]}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;void 0!==t&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(void 0!==n){const t=(new xe).getNormalMatrix(e);n.applyNormalMatrix(t),n.needsUpdate=!0}const i=this.attributes.tangent;return void 0!==i&&(i.transformDirection(e),i.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}applyQuaternion(e){return wn.makeRotationFromQuaternion(e),this.applyMatrix4(wn),this}rotateX(e){return wn.makeRotationX(e),this.applyMatrix4(wn),this}rotateY(e){return wn.makeRotationY(e),this.applyMatrix4(wn),this}rotateZ(e){return wn.makeRotationZ(e),this.applyMatrix4(wn),this}translate(e,t,n){return wn.makeTranslation(e,t,n),this.applyMatrix4(wn),this}scale(e,t,n){return wn.makeScale(e,t,n),this.applyMatrix4(wn),this}lookAt(e){return yn.lookAt(e),yn.updateMatrix(),this.applyMatrix4(yn.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Mn).negate(),this.translate(Mn.x,Mn.y,Mn.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const i=e[n];t.push(i.x,i.y,i.z||0)}return this.setAttribute("position",new vn(t,3)),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new qe);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingBox.set(new We(-1/0,-1/0,-1/0),new We(1/0,1/0,1/0));if(void 0!==e){if(this.boundingBox.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];Sn.setFromBufferAttribute(n),this.morphTargetsRelative?(Tn.addVectors(this.boundingBox.min,Sn.min),this.boundingBox.expandByPoint(Tn),Tn.addVectors(this.boundingBox.max,Sn.max),this.boundingBox.expandByPoint(Tn)):(this.boundingBox.expandByPoint(Sn.min),this.boundingBox.expandByPoint(Sn.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new dt);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute)return console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),void this.boundingSphere.set(new We,1/0);if(e){const n=this.boundingSphere.center;if(Sn.setFromBufferAttribute(e),t)for(let e=0,n=t.length;e<n;e++){const n=t[e];En.setFromBufferAttribute(n),this.morphTargetsRelative?(Tn.addVectors(Sn.min,En.min),Sn.expandByPoint(Tn),Tn.addVectors(Sn.max,En.max),Sn.expandByPoint(Tn)):(Sn.expandByPoint(En.min),Sn.expandByPoint(En.max))}Sn.getCenter(n);let i=0;for(let t=0,r=e.count;t<r;t++)Tn.fromBufferAttribute(e,t),i=Math.max(i,n.distanceToSquared(Tn));if(t)for(let r=0,a=t.length;r<a;r++){const a=t[r],s=this.morphTargetsRelative;for(let t=0,r=a.count;t<r;t++)Tn.fromBufferAttribute(a,t),s&&(Mn.fromBufferAttribute(e,t),Tn.add(Mn)),i=Math.max(i,n.distanceToSquared(Tn))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(null===e||void 0===t.position||void 0===t.normal||void 0===t.uv)return void console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,s=i.length/3;!1===this.hasAttribute("tangent")&&this.setAttribute("tangent",new mn(new Float32Array(4*s),4));const o=this.getAttribute("tangent").array,c=[],l=[];for(let e=0;e<s;e++)c[e]=new We,l[e]=new We;const u=new We,d=new We,h=new We,f=new ve,p=new ve,_=new ve,m=new We,g=new We;function b(e,t,n){u.fromArray(i,3*e),d.fromArray(i,3*t),h.fromArray(i,3*n),f.fromArray(a,2*e),p.fromArray(a,2*t),_.fromArray(a,2*n),d.sub(u),h.sub(u),p.sub(f),_.sub(f);const r=1/(p.x*_.y-_.x*p.y);isFinite(r)&&(m.copy(d).multiplyScalar(_.y).addScaledVector(h,-p.y).multiplyScalar(r),g.copy(h).multiplyScalar(p.x).addScaledVector(d,-_.x).multiplyScalar(r),c[e].add(m),c[t].add(m),c[n].add(m),l[e].add(g),l[t].add(g),l[n].add(g))}let v=this.groups;0===v.length&&(v=[{start:0,count:n.length}]);for(let e=0,t=v.length;e<t;++e){const t=v[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)b(n[e+0],n[e+1],n[e+2])}const x=new We,w=new We,y=new We,M=new We;function S(e){y.fromArray(r,3*e),M.copy(y);const t=c[e];x.copy(t),x.sub(y.multiplyScalar(y.dot(t))).normalize(),w.crossVectors(M,t);const n=w.dot(l[e])<0?-1:1;o[4*e]=x.x,o[4*e+1]=x.y,o[4*e+2]=x.z,o[4*e+3]=n}for(let e=0,t=v.length;e<t;++e){const t=v[e],i=t.start;for(let e=i,r=i+t.count;e<r;e+=3)S(n[e+0]),S(n[e+1]),S(n[e+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(void 0!==t){let n=this.getAttribute("normal");if(void 0===n)n=new mn(new Float32Array(3*t.count),3),this.setAttribute("normal",n);else for(let e=0,t=n.count;e<t;e++)n.setXYZ(e,0,0,0);const i=new We,r=new We,a=new We,s=new We,o=new We,c=new We,l=new We,u=new We;if(e)for(let d=0,h=e.count;d<h;d+=3){const h=e.getX(d+0),f=e.getX(d+1),p=e.getX(d+2);i.fromBufferAttribute(t,h),r.fromBufferAttribute(t,f),a.fromBufferAttribute(t,p),l.subVectors(a,r),u.subVectors(i,r),l.cross(u),s.fromBufferAttribute(n,h),o.fromBufferAttribute(n,f),c.fromBufferAttribute(n,p),s.add(l),o.add(l),c.add(l),n.setXYZ(h,s.x,s.y,s.z),n.setXYZ(f,o.x,o.y,o.z),n.setXYZ(p,c.x,c.y,c.z)}else for(let e=0,s=t.count;e<s;e+=3)i.fromBufferAttribute(t,e+0),r.fromBufferAttribute(t,e+1),a.fromBufferAttribute(t,e+2),l.subVectors(a,r),u.subVectors(i,r),l.cross(u),n.setXYZ(e+0,l.x,l.y,l.z),n.setXYZ(e+1,l.x,l.y,l.z),n.setXYZ(e+2,l.x,l.y,l.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Tn.fromBufferAttribute(e,t),Tn.normalize(),e.setXYZ(t,Tn.x,Tn.y,Tn.z)}toNonIndexed(){function e(e,t){const n=e.array,i=e.itemSize,r=e.normalized,a=new n.constructor(t.length*i);let s=0,o=0;for(let r=0,c=t.length;r<c;r++){s=e.isInterleavedBufferAttribute?t[r]*e.data.stride+e.offset:t[r]*i;for(let e=0;e<i;e++)a[o++]=n[s++]}return new mn(a,i,r)}if(null===this.index)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new An,n=this.index.array,i=this.attributes;for(const r in i){const a=e(i[r],n);t.setAttribute(r,a)}const r=this.morphAttributes;for(const i in r){const a=[],s=r[i];for(let t=0,i=s.length;t<i;t++){const i=e(s[t],n);a.push(i)}t.morphAttributes[i]=a}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let e=0,n=a.length;e<n;e++){const n=a[e];t.addGroup(n.start,n.count,n.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,""!==this.name&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),void 0!==this.parameters){const t=this.parameters;for(const n in t)void 0!==t[n]&&(e[n]=t[n]);return e}e.data={attributes:{}};const t=this.index;null!==t&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const t in n){const i=n[t];e.data.attributes[t]=i.toJSON(e.data)}const i={};let r=!1;for(const t in this.morphAttributes){const n=this.morphAttributes[t],a=[];for(let t=0,i=n.length;t<i;t++){const i=n[t];a.push(i.toJSON(e.data))}a.length>0&&(i[t]=a,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const s=this.boundingSphere;return null!==s&&(e.data.boundingSphere={center:s.center.toArray(),radius:s.radius}),e}clone(){return(new this.constructor).copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;null!==n&&this.setIndex(n.clone(t));const i=e.attributes;for(const e in i){const n=i[e];this.setAttribute(e,n.clone(t))}const r=e.morphAttributes;for(const e in r){const n=[],i=r[e];for(let e=0,r=i.length;e<r;e++)n.push(i[e].clone(t));this.morphAttributes[e]=n}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let e=0,t=a.length;e<t;e++){const t=a[e];this.addGroup(t.start,t.count,t.materialIndex)}const s=e.boundingBox;null!==s&&(this.boundingBox=s.clone());const o=e.boundingSphere;return null!==o&&(this.boundingSphere=o.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const Rn=new xt,Pn=new vt,Cn=new dt,Ln=new We,Dn=new We,Un=new We,In=new We,Nn=new We,On=new We,Fn=new ve,Bn=new ve,zn=new ve,Hn=new We,Gn=new We,kn=new We,Vn=new We,Wn=new We;class Xn extends Xt{constructor(e=new An,t=new fn){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),void 0!==e.morphTargetInfluences&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),void 0!==e.morphTargetDictionary&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}getVertexPosition(e,t){const n=this.geometry,i=n.attributes.position,r=n.morphAttributes.position,a=n.morphTargetsRelative;t.fromBufferAttribute(i,e);const s=this.morphTargetInfluences;if(r&&s){On.set(0,0,0);for(let n=0,i=r.length;n<i;n++){const i=s[n],o=r[n];0!==i&&(Nn.fromBufferAttribute(o,e),a?On.addScaledVector(Nn,i):On.addScaledVector(Nn.sub(t),i))}t.add(On)}return t}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(void 0!==i){if(null===n.boundingSphere&&n.computeBoundingSphere(),Cn.copy(n.boundingSphere),Cn.applyMatrix4(r),Pn.copy(e.ray).recast(e.near),!1===Cn.containsPoint(Pn.origin)){if(null===Pn.intersectSphere(Cn,Ln))return;if(Pn.origin.distanceToSquared(Ln)>(e.far-e.near)**2)return}Rn.copy(r).invert(),Pn.copy(e.ray).applyMatrix4(Rn),null!==n.boundingBox&&!1===Pn.intersectsBox(n.boundingBox)||this._computeIntersections(e,t)}}_computeIntersections(e,t){let n;const i=this.geometry,r=this.material,a=i.index,s=i.attributes.position,o=i.attributes.uv,c=i.attributes.uv1,l=i.attributes.normal,u=i.groups,d=i.drawRange;if(null!==a)if(Array.isArray(r))for(let i=0,s=u.length;i<s;i++){const s=u[i],h=r[s.materialIndex];for(let i=Math.max(s.start,d.start),r=Math.min(a.count,Math.min(s.start+s.count,d.start+d.count));i<r;i+=3){const r=a.getX(i),u=a.getX(i+1),d=a.getX(i+2);n=jn(this,h,e,Pn,o,c,l,r,u,d),n&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=s.materialIndex,t.push(n))}}else for(let i=Math.max(0,d.start),s=Math.min(a.count,d.start+d.count);i<s;i+=3){const s=a.getX(i),u=a.getX(i+1),d=a.getX(i+2);n=jn(this,r,e,Pn,o,c,l,s,u,d),n&&(n.faceIndex=Math.floor(i/3),t.push(n))}else if(void 0!==s)if(Array.isArray(r))for(let i=0,a=u.length;i<a;i++){const a=u[i],h=r[a.materialIndex];for(let i=Math.max(a.start,d.start),r=Math.min(s.count,Math.min(a.start+a.count,d.start+d.count));i<r;i+=3)n=jn(this,h,e,Pn,o,c,l,i,i+1,i+2),n&&(n.faceIndex=Math.floor(i/3),n.face.materialIndex=a.materialIndex,t.push(n))}else for(let i=Math.max(0,d.start),a=Math.min(s.count,d.start+d.count);i<a;i+=3)n=jn(this,r,e,Pn,o,c,l,i,i+1,i+2),n&&(n.faceIndex=Math.floor(i/3),t.push(n))}}function jn(e,t,n,i,r,a,s,o,c,l){e.getVertexPosition(o,Dn),e.getVertexPosition(c,Un),e.getVertexPosition(l,In);const u=function(e,t,n,i,r,a,s,o){let c;if(c=1===t.side?i.intersectTriangle(s,a,r,!0,o):i.intersectTriangle(r,a,s,0===t.side,o),null===c)return null;Wn.copy(o),Wn.applyMatrix4(e.matrixWorld);const l=n.ray.origin.distanceTo(Wn);return l<n.near||l>n.far?null:{distance:l,point:Wn.clone(),object:e}}(e,t,n,i,Dn,Un,In,Vn);if(u){r&&(Fn.fromBufferAttribute(r,o),Bn.fromBufferAttribute(r,c),zn.fromBufferAttribute(r,l),u.uv=rn.getInterpolation(Vn,Dn,Un,In,Fn,Bn,zn,new ve)),a&&(Fn.fromBufferAttribute(a,o),Bn.fromBufferAttribute(a,c),zn.fromBufferAttribute(a,l),u.uv1=rn.getInterpolation(Vn,Dn,Un,In,Fn,Bn,zn,new ve),u.uv2=u.uv1),s&&(Hn.fromBufferAttribute(s,o),Gn.fromBufferAttribute(s,c),kn.fromBufferAttribute(s,l),u.normal=rn.getInterpolation(Vn,Dn,Un,In,Hn,Gn,kn,new We),u.normal.dot(i.direction)>0&&u.normal.multiplyScalar(-1));const e={a:o,b:c,c:l,normal:new We,materialIndex:0};rn.getNormal(Dn,Un,In,e.normal),u.face=e}return u}class qn extends An{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const s=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const o=[],c=[],l=[],u=[];let d=0,h=0;function f(e,t,n,i,r,a,f,p,_,m,g){const b=a/_,v=f/m,x=a/2,w=f/2,y=p/2,M=_+1,S=m+1;let E=0,T=0;const A=new We;for(let a=0;a<S;a++){const s=a*v-w;for(let o=0;o<M;o++){const d=o*b-x;A[e]=d*i,A[t]=s*r,A[n]=y,c.push(A.x,A.y,A.z),A[e]=0,A[t]=0,A[n]=p>0?1:-1,l.push(A.x,A.y,A.z),u.push(o/_),u.push(1-a/m),E+=1}}for(let e=0;e<m;e++)for(let t=0;t<_;t++){const n=d+t+M*e,i=d+t+M*(e+1),r=d+(t+1)+M*(e+1),a=d+(t+1)+M*e;o.push(n,i,a),o.push(i,r,a),T+=6}s.addGroup(h,T,g),h+=T,d+=E}f("z","y","x",-1,-1,n,t,e,a,r,0),f("z","y","x",1,-1,n,t,-e,a,r,1),f("x","z","y",1,1,e,n,t,i,a,2),f("x","z","y",1,-1,e,n,-t,i,a,3),f("x","y","z",1,-1,e,t,n,i,r,4),f("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(o),this.setAttribute("position",new vn(c,3)),this.setAttribute("normal",new vn(l,3)),this.setAttribute("uv",new vn(u,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new qn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Yn(e){const t={};for(const n in e){t[n]={};for(const i in e[n]){const r=e[n][i];r&&(r.isColor||r.isMatrix3||r.isMatrix4||r.isVector2||r.isVector3||r.isVector4||r.isTexture||r.isQuaternion)?r.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[n][i]=null):t[n][i]=r.clone():Array.isArray(r)?t[n][i]=r.slice():t[n][i]=r}}return t}function Kn(e){const t={};for(let n=0;n<e.length;n++){const i=Yn(e[n]);for(const e in i)t[e]=i[e]}return t}function Zn(e){return null===e.getRenderTarget()?e.outputColorSpace:Q}const Jn={clone:Yn,merge:Kn};class $n extends sn{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader="void main() {\n\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",this.fragmentShader="void main() {\n\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\n}",this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,void 0!==e&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Yn(e.uniforms),this.uniformsGroups=function(e){const t=[];for(let n=0;n<e.length;n++)t.push(e[n].clone());return t}(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const n in this.uniforms){const i=this.uniforms[n].value;i&&i.isTexture?t.uniforms[n]={type:"t",value:i.toJSON(e).uuid}:i&&i.isColor?t.uniforms[n]={type:"c",value:i.getHex()}:i&&i.isVector2?t.uniforms[n]={type:"v2",value:i.toArray()}:i&&i.isVector3?t.uniforms[n]={type:"v3",value:i.toArray()}:i&&i.isVector4?t.uniforms[n]={type:"v4",value:i.toArray()}:i&&i.isMatrix3?t.uniforms[n]={type:"m3",value:i.toArray()}:i&&i.isMatrix4?t.uniforms[n]={type:"m4",value:i.toArray()}:t.uniforms[n]={value:i}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader,t.lights=this.lights,t.clipping=this.clipping;const n={};for(const e in this.extensions)!0===this.extensions[e]&&(n[e]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Qn extends Xt{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new xt,this.projectionMatrix=new xt,this.projectionMatrixInverse=new xt}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return(new this.constructor).copy(this)}}class ei extends Qn{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=null===e.view?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=2*le*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(.5*ce*this.fov);return.5*this.getFilmHeight()/e}getEffectiveFOV(){return 2*le*Math.atan(Math.tan(.5*ce*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(.5*ce*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(null!==this.view&&this.view.enabled){const e=a.fullWidth,s=a.fullHeight;r+=a.offsetX*i/e,t-=a.offsetY*n/s,i*=a.width/e,n*=a.height/s}const s=this.filmOffset;0!==s&&(r+=e*s/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,null!==this.view&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const ti=-90;class ni extends Xt{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new ei(ti,1,e,t);i.layers=this.layers,i.up.set(0,1,0),i.lookAt(1,0,0),this.add(i);const r=new ei(ti,1,e,t);r.layers=this.layers,r.up.set(0,1,0),r.lookAt(-1,0,0),this.add(r);const a=new ei(ti,1,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(0,1,0),this.add(a);const s=new ei(ti,1,e,t);s.layers=this.layers,s.up.set(0,0,1),s.lookAt(0,-1,0),this.add(s);const o=new ei(ti,1,e,t);o.layers=this.layers,o.up.set(0,1,0),o.lookAt(0,0,1),this.add(o);const c=new ei(ti,1,e,t);c.layers=this.layers,c.up.set(0,1,0),c.lookAt(0,0,-1),this.add(c)}update(e,t){null===this.parent&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,s,o,c]=this.children,l=e.getRenderTarget(),u=e.toneMapping,d=e.xr.enabled;e.toneMapping=0,e.xr.enabled=!1;const h=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,s),e.setRenderTarget(n,4),e.render(t,o),n.texture.generateMipmaps=h,e.setRenderTarget(n,5),e.render(t,c),e.setRenderTarget(l),e.toneMapping=u,e.xr.enabled=d,n.texture.needsPMREMUpdate=!0}}class ii extends Be{constructor(e,t,n,i,r,a,s,o,c,l){super(e=void 0!==e?e:[],t=void 0!==t?t:M,n,i,r,a,s,o,c,l),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class ri extends He{constructor(e=1,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];void 0!==t.encoding&&(Ee("THREE.WebGLCubeRenderTarget: option.encoding has been replaced by option.colorSpace."),t.colorSpace=t.encoding===J?$:""),this.texture=new ii(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=void 0!==t.generateMipmaps&&t.generateMipmaps,this.texture.minFilter=void 0!==t.minFilter?t.minFilter:D}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.colorSpace=t.colorSpace,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={tEquirect:{value:null}},i="\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t",r="\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t",a=new qn(5,5,5),s=new $n({name:"CubemapFromEquirect",uniforms:Yn(n),vertexShader:i,fragmentShader:r,side:1,blending:0});s.uniforms.tEquirect.value=t;const o=new Xn(a,s),c=t.minFilter;return t.minFilter===I&&(t.minFilter=D),new ni(1,10,this).update(e,o),t.minFilter=c,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let r=0;r<6;r++)e.setRenderTarget(this,r),e.clear(t,n,i);e.setRenderTarget(r)}}const ai=new We,si=new We,oi=new xe;class ci{constructor(e=new We(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=ai.subVectors(n,t).cross(si.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(e).addScaledVector(this.normal,-this.distanceToPoint(e))}intersectLine(e,t){const n=e.delta(ai),i=this.normal.dot(n);if(0===i)return 0===this.distanceToPoint(e.start)?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(e.start).addScaledVector(n,r)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||oi.getNormalMatrix(e),i=this.coplanarPoint(ai).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return(new this.constructor).copy(this)}}const li=new dt,ui=new We;class di{constructor(e=new ci,t=new ci,n=new ci,i=new ci,r=new ci,a=new ci){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const s=this.planes;return s[0].copy(e),s[1].copy(t),s[2].copy(n),s[3].copy(i),s[4].copy(r),s[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],s=n[3],o=n[4],c=n[5],l=n[6],u=n[7],d=n[8],h=n[9],f=n[10],p=n[11],_=n[12],m=n[13],g=n[14],b=n[15];return t[0].setComponents(s-i,u-o,p-d,b-_).normalize(),t[1].setComponents(s+i,u+o,p+d,b+_).normalize(),t[2].setComponents(s+r,u+c,p+h,b+m).normalize(),t[3].setComponents(s-r,u-c,p-h,b-m).normalize(),t[4].setComponents(s-a,u-l,p-f,b-g).normalize(),t[5].setComponents(s+a,u+l,p+f,b+g).normalize(),this}intersectsObject(e){if(void 0!==e.boundingSphere)null===e.boundingSphere&&e.computeBoundingSphere(),li.copy(e.boundingSphere).applyMatrix4(e.matrixWorld);else{const t=e.geometry;null===t.boundingSphere&&t.computeBoundingSphere(),li.copy(t.boundingSphere).applyMatrix4(e.matrixWorld)}return this.intersectsSphere(li)}intersectsSprite(e){return li.center.set(0,0,0),li.radius=.7071067811865476,li.applyMatrix4(e.matrixWorld),this.intersectsSphere(li)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let e=0;e<6;e++)if(t[e].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(ui.x=i.normal.x>0?e.max.x:e.min.x,ui.y=i.normal.y>0?e.max.y:e.min.y,ui.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(ui)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return(new this.constructor).copy(this)}}function hi(){let e=null,t=!1,n=null,i=null;function r(t,a){n(t,a),i=e.requestAnimationFrame(r)}return{start:function(){!0!==t&&null!==n&&(i=e.requestAnimationFrame(r),t=!0)},stop:function(){e.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(e){n=e},setContext:function(t){e=t}}}function fi(e,t){const n=t.isWebGL2,i=new WeakMap;return{get:function(e){return e.isInterleavedBufferAttribute&&(e=e.data),i.get(e)},remove:function(t){t.isInterleavedBufferAttribute&&(t=t.data);const n=i.get(t);n&&(e.deleteBuffer(n.buffer),i.delete(t))},update:function(t,r){if(t.isGLBufferAttribute){const e=i.get(t);return void((!e||e.version<t.version)&&i.set(t,{buffer:t.buffer,type:t.type,bytesPerElement:t.elementSize,version:t.version}))}t.isInterleavedBufferAttribute&&(t=t.data);const a=i.get(t);void 0===a?i.set(t,function(t,i){const r=t.array,a=t.usage,s=e.createBuffer();let o;if(e.bindBuffer(i,s),e.bufferData(i,r,a),t.onUploadCallback(),r instanceof Float32Array)o=e.FLOAT;else if(r instanceof Uint16Array)if(t.isFloat16BufferAttribute){if(!n)throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");o=e.HALF_FLOAT}else o=e.UNSIGNED_SHORT;else if(r instanceof Int16Array)o=e.SHORT;else if(r instanceof Uint32Array)o=e.UNSIGNED_INT;else if(r instanceof Int32Array)o=e.INT;else if(r instanceof Int8Array)o=e.BYTE;else if(r instanceof Uint8Array)o=e.UNSIGNED_BYTE;else{if(!(r instanceof Uint8ClampedArray))throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+r);o=e.UNSIGNED_BYTE}return{buffer:s,type:o,bytesPerElement:r.BYTES_PER_ELEMENT,version:t.version}}(t,r)):a.version<t.version&&(function(t,i,r){const a=i.array,s=i.updateRange;e.bindBuffer(r,t),-1===s.count?e.bufferSubData(r,0,a):(n?e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a,s.offset,s.count):e.bufferSubData(r,s.offset*a.BYTES_PER_ELEMENT,a.subarray(s.offset,s.offset+s.count)),s.count=-1),i.onUploadCallback()}(a.buffer,t,r),a.version=t.version)}}}class pi extends An{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,s=Math.floor(n),o=Math.floor(i),c=s+1,l=o+1,u=e/s,d=t/o,h=[],f=[],p=[],_=[];for(let e=0;e<l;e++){const t=e*d-a;for(let n=0;n<c;n++){const i=n*u-r;f.push(i,-t,0),p.push(0,0,1),_.push(n/s),_.push(1-e/o)}}for(let e=0;e<o;e++)for(let t=0;t<s;t++){const n=t+c*e,i=t+c*(e+1),r=t+1+c*(e+1),a=t+1+c*e;h.push(n,i,a),h.push(i,r,a)}this.setIndex(h),this.setAttribute("position",new vn(f,3)),this.setAttribute("normal",new vn(p,3)),this.setAttribute("uv",new vn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new pi(e.width,e.height,e.widthSegments,e.heightSegments)}}const _i={alphamap_fragment:"#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;\n#endif",alphamap_pars_fragment:"#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",alphatest_fragment:"#ifdef USE_ALPHATEST\n\tif ( diffuseColor.a < alphaTest ) discard;\n#endif",alphatest_pars_fragment:"#ifdef USE_ALPHATEST\n\tuniform float alphaTest;\n#endif",aomap_fragment:"#ifdef USE_AOMAP\n\tfloat ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;\n\treflectedLight.indirectDiffuse *= ambientOcclusion;\n\t#if defined( USE_ENVMAP ) && defined( STANDARD )\n\t\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\n\t\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );\n\t#endif\n#endif",aomap_pars_fragment:"#ifdef USE_AOMAP\n\tuniform sampler2D aoMap;\n\tuniform float aoMapIntensity;\n#endif",begin_vertex:"vec3 transformed = vec3( position );",beginnormal_vertex:"vec3 objectNormal = vec3( normal );\n#ifdef USE_TANGENT\n\tvec3 objectTangent = vec3( tangent.xyz );\n#endif",bsdfs:"float G_BlinnPhong_Implicit( ) {\n\treturn 0.25;\n}\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\n\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\n}\nvec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( specularColor, 1.0, dotVH );\n\tfloat G = G_BlinnPhong_Implicit( );\n\tfloat D = D_BlinnPhong( shininess, dotNH );\n\treturn F * ( G * D );\n} // validated",iridescence_fragment:"#ifdef USE_IRIDESCENCE\n\tconst mat3 XYZ_TO_REC709 = mat3(\n\t\t 3.2404542, -0.9692660,  0.0556434,\n\t\t-1.5371385,  1.8760108, -0.2040259,\n\t\t-0.4985314,  0.0415560,  1.0572252\n\t);\n\tvec3 Fresnel0ToIor( vec3 fresnel0 ) {\n\t\tvec3 sqrtF0 = sqrt( fresnel0 );\n\t\treturn ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );\n\t}\n\tvec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );\n\t}\n\tfloat IorToFresnel0( float transmittedIor, float incidentIor ) {\n\t\treturn pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));\n\t}\n\tvec3 evalSensitivity( float OPD, vec3 shift ) {\n\t\tfloat phase = 2.0 * PI * OPD * 1.0e-9;\n\t\tvec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );\n\t\tvec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );\n\t\tvec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );\n\t\tvec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );\n\t\txyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );\n\t\txyz /= 1.0685e-7;\n\t\tvec3 rgb = XYZ_TO_REC709 * xyz;\n\t\treturn rgb;\n\t}\n\tvec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {\n\t\tvec3 I;\n\t\tfloat iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );\n\t\tfloat sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );\n\t\tfloat cosTheta2Sq = 1.0 - sinTheta2Sq;\n\t\tif ( cosTheta2Sq < 0.0 ) {\n\t\t\t return vec3( 1.0 );\n\t\t}\n\t\tfloat cosTheta2 = sqrt( cosTheta2Sq );\n\t\tfloat R0 = IorToFresnel0( iridescenceIOR, outsideIOR );\n\t\tfloat R12 = F_Schlick( R0, 1.0, cosTheta1 );\n\t\tfloat R21 = R12;\n\t\tfloat T121 = 1.0 - R12;\n\t\tfloat phi12 = 0.0;\n\t\tif ( iridescenceIOR < outsideIOR ) phi12 = PI;\n\t\tfloat phi21 = PI - phi12;\n\t\tvec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );\t\tvec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );\n\t\tvec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );\n\t\tvec3 phi23 = vec3( 0.0 );\n\t\tif ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;\n\t\tif ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;\n\t\tif ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;\n\t\tfloat OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;\n\t\tvec3 phi = vec3( phi21 ) + phi23;\n\t\tvec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );\n\t\tvec3 r123 = sqrt( R123 );\n\t\tvec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );\n\t\tvec3 C0 = R12 + Rs;\n\t\tI = C0;\n\t\tvec3 Cm = Rs - T121;\n\t\tfor ( int m = 1; m <= 2; ++ m ) {\n\t\t\tCm *= r123;\n\t\t\tvec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );\n\t\t\tI += Cm * Sm;\n\t\t}\n\t\treturn max( I, vec3( 0.0 ) );\n\t}\n#endif",bumpmap_pars_fragment:"#ifdef USE_BUMPMAP\n\tuniform sampler2D bumpMap;\n\tuniform float bumpScale;\n\tvec2 dHdxy_fwd() {\n\t\tvec2 dSTdx = dFdx( vBumpMapUv );\n\t\tvec2 dSTdy = dFdy( vBumpMapUv );\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;\n\t\treturn vec2( dBx, dBy );\n\t}\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\n\t\tvec3 vSigmaX = dFdx( surf_pos.xyz );\n\t\tvec3 vSigmaY = dFdy( surf_pos.xyz );\n\t\tvec3 vN = surf_norm;\n\t\tvec3 R1 = cross( vSigmaY, vN );\n\t\tvec3 R2 = cross( vN, vSigmaX );\n\t\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\n\t}\n#endif",clipping_planes_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvec4 plane;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\n\t\tplane = clippingPlanes[ i ];\n\t\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\n\t}\n\t#pragma unroll_loop_end\n\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\n\t\tbool clipped = true;\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\n\t\t\tplane = clippingPlanes[ i ];\n\t\t\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t\tif ( clipped ) discard;\n\t#endif\n#endif",clipping_planes_pars_fragment:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\n#endif",clipping_planes_pars_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvarying vec3 vClipPosition;\n#endif",clipping_planes_vertex:"#if NUM_CLIPPING_PLANES > 0\n\tvClipPosition = - mvPosition.xyz;\n#endif",color_fragment:"#if defined( USE_COLOR_ALPHA )\n\tdiffuseColor *= vColor;\n#elif defined( USE_COLOR )\n\tdiffuseColor.rgb *= vColor;\n#endif",color_pars_fragment:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR )\n\tvarying vec3 vColor;\n#endif",color_pars_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvarying vec4 vColor;\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvarying vec3 vColor;\n#endif",color_vertex:"#if defined( USE_COLOR_ALPHA )\n\tvColor = vec4( 1.0 );\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\n\tvColor = vec3( 1.0 );\n#endif\n#ifdef USE_COLOR\n\tvColor *= color;\n#endif\n#ifdef USE_INSTANCING_COLOR\n\tvColor.xyz *= instanceColor.xyz;\n#endif",common:"#define PI 3.141592653589793\n#define PI2 6.283185307179586\n#define PI_HALF 1.5707963267948966\n#define RECIPROCAL_PI 0.3183098861837907\n#define RECIPROCAL_PI2 0.15915494309189535\n#define EPSILON 1e-6\n#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\n#define whiteComplement( a ) ( 1.0 - saturate( a ) )\nfloat pow2( const in float x ) { return x*x; }\nvec3 pow2( const in vec3 x ) { return x*x; }\nfloat pow3( const in float x ) { return x*x*x; }\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\nfloat max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }\nfloat average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }\nhighp float rand( const in vec2 uv ) {\n\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\n\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\n\treturn fract( sin( sn ) * c );\n}\n#ifdef HIGH_PRECISION\n\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\n#else\n\tfloat precisionSafeLength( vec3 v ) {\n\t\tfloat maxComponent = max3( abs( v ) );\n\t\treturn length( v / maxComponent ) * maxComponent;\n\t}\n#endif\nstruct IncidentLight {\n\tvec3 color;\n\tvec3 direction;\n\tbool visible;\n};\nstruct ReflectedLight {\n\tvec3 directDiffuse;\n\tvec3 directSpecular;\n\tvec3 indirectDiffuse;\n\tvec3 indirectSpecular;\n};\nstruct GeometricContext {\n\tvec3 position;\n\tvec3 normal;\n\tvec3 viewDir;\n#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal;\n#endif\n};\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n}\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\n\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\n}\nmat3 transposeMat3( const in mat3 m ) {\n\tmat3 tmp;\n\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\n\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\n\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\n\treturn tmp;\n}\nfloat luminance( const in vec3 rgb ) {\n\tconst vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );\n\treturn dot( weights, rgb );\n}\nbool isPerspectiveMatrix( mat4 m ) {\n\treturn m[ 2 ][ 3 ] == - 1.0;\n}\nvec2 equirectUv( in vec3 dir ) {\n\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\n\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\n\treturn vec2( u, v );\n}\nvec3 BRDF_Lambert( const in vec3 diffuseColor ) {\n\treturn RECIPROCAL_PI * diffuseColor;\n}\nvec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n}\nfloat F_Schlick( const in float f0, const in float f90, const in float dotVH ) {\n\tfloat fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );\n\treturn f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );\n} // validated",cube_uv_reflection_fragment:"#ifdef ENVMAP_TYPE_CUBE_UV\n\t#define cubeUV_minMipLevel 4.0\n\t#define cubeUV_minTileSize 16.0\n\tfloat getFace( vec3 direction ) {\n\t\tvec3 absDirection = abs( direction );\n\t\tfloat face = - 1.0;\n\t\tif ( absDirection.x > absDirection.z ) {\n\t\t\tif ( absDirection.x > absDirection.y )\n\t\t\t\tface = direction.x > 0.0 ? 0.0 : 3.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t} else {\n\t\t\tif ( absDirection.z > absDirection.y )\n\t\t\t\tface = direction.z > 0.0 ? 2.0 : 5.0;\n\t\t\telse\n\t\t\t\tface = direction.y > 0.0 ? 1.0 : 4.0;\n\t\t}\n\t\treturn face;\n\t}\n\tvec2 getUV( vec3 direction, float face ) {\n\t\tvec2 uv;\n\t\tif ( face == 0.0 ) {\n\t\t\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 1.0 ) {\n\t\t\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\n\t\t} else if ( face == 2.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\n\t\t} else if ( face == 3.0 ) {\n\t\t\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\n\t\t} else if ( face == 4.0 ) {\n\t\t\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\n\t\t} else {\n\t\t\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\n\t\t}\n\t\treturn 0.5 * ( uv + 1.0 );\n\t}\n\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\n\t\tfloat face = getFace( direction );\n\t\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\n\t\tmipInt = max( mipInt, cubeUV_minMipLevel );\n\t\tfloat faceSize = exp2( mipInt );\n\t\thighp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;\n\t\tif ( face > 2.0 ) {\n\t\t\tuv.y += faceSize;\n\t\t\tface -= 3.0;\n\t\t}\n\t\tuv.x += face * faceSize;\n\t\tuv.x += filterInt * 3.0 * cubeUV_minTileSize;\n\t\tuv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );\n\t\tuv.x *= CUBEUV_TEXEL_WIDTH;\n\t\tuv.y *= CUBEUV_TEXEL_HEIGHT;\n\t\t#ifdef texture2DGradEXT\n\t\t\treturn texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;\n\t\t#else\n\t\t\treturn texture2D( envMap, uv ).rgb;\n\t\t#endif\n\t}\n\t#define cubeUV_r0 1.0\n\t#define cubeUV_v0 0.339\n\t#define cubeUV_m0 - 2.0\n\t#define cubeUV_r1 0.8\n\t#define cubeUV_v1 0.276\n\t#define cubeUV_m1 - 1.0\n\t#define cubeUV_r4 0.4\n\t#define cubeUV_v4 0.046\n\t#define cubeUV_m4 2.0\n\t#define cubeUV_r5 0.305\n\t#define cubeUV_v5 0.016\n\t#define cubeUV_m5 3.0\n\t#define cubeUV_r6 0.21\n\t#define cubeUV_v6 0.0038\n\t#define cubeUV_m6 4.0\n\tfloat roughnessToMip( float roughness ) {\n\t\tfloat mip = 0.0;\n\t\tif ( roughness >= cubeUV_r1 ) {\n\t\t\tmip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;\n\t\t} else if ( roughness >= cubeUV_r4 ) {\n\t\t\tmip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;\n\t\t} else if ( roughness >= cubeUV_r5 ) {\n\t\t\tmip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;\n\t\t} else if ( roughness >= cubeUV_r6 ) {\n\t\t\tmip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;\n\t\t} else {\n\t\t\tmip = - 2.0 * log2( 1.16 * roughness );\t\t}\n\t\treturn mip;\n\t}\n\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\n\t\tfloat mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );\n\t\tfloat mipF = fract( mip );\n\t\tfloat mipInt = floor( mip );\n\t\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\n\t\tif ( mipF == 0.0 ) {\n\t\t\treturn vec4( color0, 1.0 );\n\t\t} else {\n\t\t\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\n\t\t\treturn vec4( mix( color0, color1, mipF ), 1.0 );\n\t\t}\n\t}\n#endif",defaultnormal_vertex:"vec3 transformedNormal = objectNormal;\n#ifdef USE_INSTANCING\n\tmat3 m = mat3( instanceMatrix );\n\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\n\ttransformedNormal = m * transformedNormal;\n#endif\ntransformedNormal = normalMatrix * transformedNormal;\n#ifdef FLIP_SIDED\n\ttransformedNormal = - transformedNormal;\n#endif\n#ifdef USE_TANGENT\n\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#ifdef FLIP_SIDED\n\t\ttransformedTangent = - transformedTangent;\n\t#endif\n#endif",displacementmap_pars_vertex:"#ifdef USE_DISPLACEMENTMAP\n\tuniform sampler2D displacementMap;\n\tuniform float displacementScale;\n\tuniform float displacementBias;\n#endif",displacementmap_vertex:"#ifdef USE_DISPLACEMENTMAP\n\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );\n#endif",emissivemap_fragment:"#ifdef USE_EMISSIVEMAP\n\tvec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );\n\ttotalEmissiveRadiance *= emissiveColor.rgb;\n#endif",emissivemap_pars_fragment:"#ifdef USE_EMISSIVEMAP\n\tuniform sampler2D emissiveMap;\n#endif",encodings_fragment:"gl_FragColor = linearToOutputTexel( gl_FragColor );",encodings_pars_fragment:"vec4 LinearToLinear( in vec4 value ) {\n\treturn value;\n}\nvec4 LinearTosRGB( in vec4 value ) {\n\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\n}",envmap_fragment:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvec3 cameraToFrag;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\n\t\t#else\n\t\t\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\n\t\t#endif\n\t#else\n\t\tvec3 reflectVec = vReflect;\n\t#endif\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\n\t#else\n\t\tvec4 envColor = vec4( 0.0 );\n\t#endif\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_MIX )\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\n\t#elif defined( ENVMAP_BLENDING_ADD )\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\n\t#endif\n#endif",envmap_common_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float envMapIntensity;\n\tuniform float flipEnvMap;\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tuniform samplerCube envMap;\n\t#else\n\t\tuniform sampler2D envMap;\n\t#endif\n\t\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\n\tuniform float reflectivity;\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\tvarying vec3 vWorldPosition;\n\t\tuniform float refractionRatio;\n\t#else\n\t\tvarying vec3 vReflect;\n\t#endif\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )\n\t\t#define ENV_WORLDPOS\n\t#endif\n\t#ifdef ENV_WORLDPOS\n\t\t\n\t\tvarying vec3 vWorldPosition;\n\t#else\n\t\tvarying vec3 vReflect;\n\t\tuniform float refractionRatio;\n\t#endif\n#endif",envmap_physical_pars_fragment:"#if defined( USE_ENVMAP )\n\tvec3 getIBLIrradiance( const in vec3 normal ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\n\t\t\treturn PI * envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n\tvec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {\n\t\t#if defined( ENVMAP_TYPE_CUBE_UV )\n\t\t\tvec3 reflectVec = reflect( - viewDir, normal );\n\t\t\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\n\t\t\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\n\t\t\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\n\t\t\treturn envMapColor.rgb * envMapIntensity;\n\t\t#else\n\t\t\treturn vec3( 0.0 );\n\t\t#endif\n\t}\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\n\t#ifdef ENV_WORLDPOS\n\t\tvWorldPosition = worldPosition.xyz;\n\t#else\n\t\tvec3 cameraToVertex;\n\t\tif ( isOrthographic ) {\n\t\t\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\n\t\t} else {\n\t\t\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\n\t\t}\n\t\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\t\t#ifdef ENVMAP_MODE_REFLECTION\n\t\t\tvReflect = reflect( cameraToVertex, worldNormal );\n\t\t#else\n\t\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\n\t\t#endif\n\t#endif\n#endif",fog_vertex:"#ifdef USE_FOG\n\tvFogDepth = - mvPosition.z;\n#endif",fog_pars_vertex:"#ifdef USE_FOG\n\tvarying float vFogDepth;\n#endif",fog_fragment:"#ifdef USE_FOG\n\t#ifdef FOG_EXP2\n\t\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );\n\t#else\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, vFogDepth );\n\t#endif\n\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\n#endif",fog_pars_fragment:"#ifdef USE_FOG\n\tuniform vec3 fogColor;\n\tvarying float vFogDepth;\n\t#ifdef FOG_EXP2\n\t\tuniform float fogDensity;\n\t#else\n\t\tuniform float fogNear;\n\t\tuniform float fogFar;\n\t#endif\n#endif",gradientmap_pars_fragment:"#ifdef USE_GRADIENTMAP\n\tuniform sampler2D gradientMap;\n#endif\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\n\tfloat dotNL = dot( normal, lightDirection );\n\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\n\t#ifdef USE_GRADIENTMAP\n\t\treturn vec3( texture2D( gradientMap, coord ).r );\n\t#else\n\t\tvec2 fw = fwidth( coord ) * 0.5;\n\t\treturn mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );\n\t#endif\n}",lightmap_fragment:"#ifdef USE_LIGHTMAP\n\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\treflectedLight.indirectDiffuse += lightMapIrradiance;\n#endif",lightmap_pars_fragment:"#ifdef USE_LIGHTMAP\n\tuniform sampler2D lightMap;\n\tuniform float lightMapIntensity;\n#endif",lights_lambert_fragment:"LambertMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularStrength = specularStrength;",lights_lambert_pars_fragment:"varying vec3 vViewPosition;\nstruct LambertMaterial {\n\tvec3 diffuseColor;\n\tfloat specularStrength;\n};\nvoid RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Lambert\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Lambert",lights_pars_begin:"uniform bool receiveShadow;\nuniform vec3 ambientLightColor;\nuniform vec3 lightProbe[ 9 ];\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\n\tfloat x = normal.x, y = normal.y, z = normal.z;\n\tvec3 result = shCoefficients[ 0 ] * 0.886227;\n\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\n\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\n\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\n\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\n\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\n\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\n\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\n\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\n\treturn result;\n}\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {\n\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\n\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\n\treturn irradiance;\n}\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\n\tvec3 irradiance = ambientLightColor;\n\treturn irradiance;\n}\nfloat getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\n\t#if defined ( LEGACY_LIGHTS )\n\t\tif ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\n\t\t\treturn pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );\n\t\t}\n\t\treturn 1.0;\n\t#else\n\t\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\n\t\tif ( cutoffDistance > 0.0 ) {\n\t\t\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\n\t\t}\n\t\treturn distanceFalloff;\n\t#endif\n}\nfloat getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {\n\treturn smoothstep( coneCosine, penumbraCosine, angleCosine );\n}\n#if NUM_DIR_LIGHTS > 0\n\tstruct DirectionalLight {\n\t\tvec3 direction;\n\t\tvec3 color;\n\t};\n\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\n\tvoid getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tlight.color = directionalLight.color;\n\t\tlight.direction = directionalLight.direction;\n\t\tlight.visible = true;\n\t}\n#endif\n#if NUM_POINT_LIGHTS > 0\n\tstruct PointLight {\n\t\tvec3 position;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t};\n\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\n\tvoid getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = pointLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat lightDistance = length( lVector );\n\t\tlight.color = pointLight.color;\n\t\tlight.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );\n\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t}\n#endif\n#if NUM_SPOT_LIGHTS > 0\n\tstruct SpotLight {\n\t\tvec3 position;\n\t\tvec3 direction;\n\t\tvec3 color;\n\t\tfloat distance;\n\t\tfloat decay;\n\t\tfloat coneCos;\n\t\tfloat penumbraCos;\n\t};\n\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\n\tvoid getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {\n\t\tvec3 lVector = spotLight.position - geometry.position;\n\t\tlight.direction = normalize( lVector );\n\t\tfloat angleCos = dot( light.direction, spotLight.direction );\n\t\tfloat spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );\n\t\tif ( spotAttenuation > 0.0 ) {\n\t\t\tfloat lightDistance = length( lVector );\n\t\t\tlight.color = spotLight.color * spotAttenuation;\n\t\t\tlight.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );\n\t\t\tlight.visible = ( light.color != vec3( 0.0 ) );\n\t\t} else {\n\t\t\tlight.color = vec3( 0.0 );\n\t\t\tlight.visible = false;\n\t\t}\n\t}\n#endif\n#if NUM_RECT_AREA_LIGHTS > 0\n\tstruct RectAreaLight {\n\t\tvec3 color;\n\t\tvec3 position;\n\t\tvec3 halfWidth;\n\t\tvec3 halfHeight;\n\t};\n\tuniform sampler2D ltc_1;\tuniform sampler2D ltc_2;\n\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\n#endif\n#if NUM_HEMI_LIGHTS > 0\n\tstruct HemisphereLight {\n\t\tvec3 direction;\n\t\tvec3 skyColor;\n\t\tvec3 groundColor;\n\t};\n\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\n\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {\n\t\tfloat dotNL = dot( normal, hemiLight.direction );\n\t\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\n\t\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\n\t\treturn irradiance;\n\t}\n#endif",lights_toon_fragment:"ToonMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;",lights_toon_pars_fragment:"varying vec3 vViewPosition;\nstruct ToonMaterial {\n\tvec3 diffuseColor;\n};\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_Toon\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Toon",lights_phong_fragment:"BlinnPhongMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb;\nmaterial.specularColor = specular;\nmaterial.specularShininess = shininess;\nmaterial.specularStrength = specularStrength;",lights_phong_pars_fragment:"varying vec3 vViewPosition;\nstruct BlinnPhongMaterial {\n\tvec3 diffuseColor;\n\tvec3 specularColor;\n\tfloat specularShininess;\n\tfloat specularStrength;\n};\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n\treflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;\n}\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\n#define RE_Direct\t\t\t\tRE_Direct_BlinnPhong\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_BlinnPhong",lights_physical_fragment:"PhysicalMaterial material;\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\nmaterial.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;\nmaterial.roughness = min( material.roughness, 1.0 );\n#ifdef IOR\n\tmaterial.ior = ior;\n\t#ifdef USE_SPECULAR\n\t\tfloat specularIntensityFactor = specularIntensity;\n\t\tvec3 specularColorFactor = specularColor;\n\t\t#ifdef USE_SPECULAR_COLORMAP\n\t\t\tspecularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;\n\t\t#endif\n\t\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\t\tspecularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;\n\t\t#endif\n\t\tmaterial.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );\n\t#else\n\t\tfloat specularIntensityFactor = 1.0;\n\t\tvec3 specularColorFactor = vec3( 1.0 );\n\t\tmaterial.specularF90 = 1.0;\n\t#endif\n\tmaterial.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );\n#else\n\tmaterial.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );\n\tmaterial.specularF90 = 1.0;\n#endif\n#ifdef USE_CLEARCOAT\n\tmaterial.clearcoat = clearcoat;\n\tmaterial.clearcoatRoughness = clearcoatRoughness;\n\tmaterial.clearcoatF0 = vec3( 0.04 );\n\tmaterial.clearcoatF90 = 1.0;\n\t#ifdef USE_CLEARCOATMAP\n\t\tmaterial.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;\n\t#endif\n\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\t\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;\n\t#endif\n\tmaterial.clearcoat = saturate( material.clearcoat );\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\n\tmaterial.clearcoatRoughness += geometryRoughness;\n\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\n#endif\n#ifdef USE_IRIDESCENCE\n\tmaterial.iridescence = iridescence;\n\tmaterial.iridescenceIOR = iridescenceIOR;\n\t#ifdef USE_IRIDESCENCEMAP\n\t\tmaterial.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;\n\t#endif\n\t#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\t\tmaterial.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;\n\t#else\n\t\tmaterial.iridescenceThickness = iridescenceThicknessMaximum;\n\t#endif\n#endif\n#ifdef USE_SHEEN\n\tmaterial.sheenColor = sheenColor;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tmaterial.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;\n\t#endif\n\tmaterial.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tmaterial.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;\n\t#endif\n#endif",lights_physical_pars_fragment:"struct PhysicalMaterial {\n\tvec3 diffuseColor;\n\tfloat roughness;\n\tvec3 specularColor;\n\tfloat specularF90;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat clearcoat;\n\t\tfloat clearcoatRoughness;\n\t\tvec3 clearcoatF0;\n\t\tfloat clearcoatF90;\n\t#endif\n\t#ifdef USE_IRIDESCENCE\n\t\tfloat iridescence;\n\t\tfloat iridescenceIOR;\n\t\tfloat iridescenceThickness;\n\t\tvec3 iridescenceFresnel;\n\t\tvec3 iridescenceF0;\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tvec3 sheenColor;\n\t\tfloat sheenRoughness;\n\t#endif\n\t#ifdef IOR\n\t\tfloat ior;\n\t#endif\n\t#ifdef USE_TRANSMISSION\n\t\tfloat transmission;\n\t\tfloat transmissionAlpha;\n\t\tfloat thickness;\n\t\tfloat attenuationDistance;\n\t\tvec3 attenuationColor;\n\t#endif\n};\nvec3 clearcoatSpecular = vec3( 0.0 );\nvec3 sheenSpecular = vec3( 0.0 );\nvec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {\n    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );\n    float x2 = x * x;\n    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );\n    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );\n}\nfloat V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\n\tfloat a2 = pow2( alpha );\n\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\n\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\n\treturn 0.5 / max( gv + gl, EPSILON );\n}\nfloat D_GGX( const in float alpha, const in float dotNH ) {\n\tfloat a2 = pow2( alpha );\n\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\n\treturn RECIPROCAL_PI * a2 / pow2( denom );\n}\n#ifdef USE_CLEARCOAT\n\tvec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {\n\t\tvec3 f0 = material.clearcoatF0;\n\t\tfloat f90 = material.clearcoatF90;\n\t\tfloat roughness = material.clearcoatRoughness;\n\t\tfloat alpha = pow2( roughness );\n\t\tvec3 halfDir = normalize( lightDir + viewDir );\n\t\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\t\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\t\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\t\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\t\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\t\tfloat D = D_GGX( alpha, dotNH );\n\t\treturn F * ( V * D );\n\t}\n#endif\nvec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {\n\tvec3 f0 = material.specularColor;\n\tfloat f90 = material.specularF90;\n\tfloat roughness = material.roughness;\n\tfloat alpha = pow2( roughness );\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat dotVH = saturate( dot( viewDir, halfDir ) );\n\tvec3 F = F_Schlick( f0, f90, dotVH );\n\t#ifdef USE_IRIDESCENCE\n\t\tF = mix( F, material.iridescenceFresnel, material.iridescence );\n\t#endif\n\tfloat V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );\n\tfloat D = D_GGX( alpha, dotNH );\n\treturn F * ( V * D );\n}\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\n\tconst float LUT_SIZE = 64.0;\n\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\n\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\n\tfloat dotNV = saturate( dot( N, V ) );\n\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\n\tuv = uv * LUT_SCALE + LUT_BIAS;\n\treturn uv;\n}\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\n\tfloat l = length( f );\n\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\n}\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\n\tfloat x = dot( v1, v2 );\n\tfloat y = abs( x );\n\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\n\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\n\tfloat v = a / b;\n\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\n\treturn cross( v1, v2 ) * theta_sintheta;\n}\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\n\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\n\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\n\tvec3 lightNormal = cross( v1, v2 );\n\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\n\tvec3 T1, T2;\n\tT1 = normalize( V - N * dot( V, N ) );\n\tT2 = - cross( N, T1 );\n\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\n\tvec3 coords[ 4 ];\n\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\n\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\n\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\n\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\n\tcoords[ 0 ] = normalize( coords[ 0 ] );\n\tcoords[ 1 ] = normalize( coords[ 1 ] );\n\tcoords[ 2 ] = normalize( coords[ 2 ] );\n\tcoords[ 3 ] = normalize( coords[ 3 ] );\n\tvec3 vectorFormFactor = vec3( 0.0 );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\n\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\n\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\n\treturn vec3( result );\n}\n#if defined( USE_SHEEN )\nfloat D_Charlie( float roughness, float dotNH ) {\n\tfloat alpha = pow2( roughness );\n\tfloat invAlpha = 1.0 / alpha;\n\tfloat cos2h = dotNH * dotNH;\n\tfloat sin2h = max( 1.0 - cos2h, 0.0078125 );\n\treturn ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );\n}\nfloat V_Neubelt( float dotNV, float dotNL ) {\n\treturn saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );\n}\nvec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {\n\tvec3 halfDir = normalize( lightDir + viewDir );\n\tfloat dotNL = saturate( dot( normal, lightDir ) );\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat dotNH = saturate( dot( normal, halfDir ) );\n\tfloat D = D_Charlie( sheenRoughness, dotNH );\n\tfloat V = V_Neubelt( dotNV, dotNL );\n\treturn sheenColor * ( D * V );\n}\n#endif\nfloat IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tfloat r2 = roughness * roughness;\n\tfloat a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;\n\tfloat b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;\n\tfloat DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );\n\treturn saturate( DG * RECIPROCAL_PI );\n}\nvec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {\n\tfloat dotNV = saturate( dot( normal, viewDir ) );\n\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\n\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\n\tvec4 r = roughness * c0 + c1;\n\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\n\tvec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;\n\treturn fab;\n}\nvec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\treturn specularColor * fab.x + specularF90 * fab.y;\n}\n#ifdef USE_IRIDESCENCE\nvoid computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#else\nvoid computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\n#endif\n\tvec2 fab = DFGApprox( normal, viewDir, roughness );\n\t#ifdef USE_IRIDESCENCE\n\t\tvec3 Fr = mix( specularColor, iridescenceF0, iridescence );\n\t#else\n\t\tvec3 Fr = specularColor;\n\t#endif\n\tvec3 FssEss = Fr * fab.x + specularF90 * fab.y;\n\tfloat Ess = fab.x + fab.y;\n\tfloat Ems = 1.0 - Ess;\n\tvec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\n\tsingleScatter += FssEss;\n\tmultiScatter += Fms * Ems;\n}\n#if NUM_RECT_AREA_LIGHTS > 0\n\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\t\tvec3 normal = geometry.normal;\n\t\tvec3 viewDir = geometry.viewDir;\n\t\tvec3 position = geometry.position;\n\t\tvec3 lightPos = rectAreaLight.position;\n\t\tvec3 halfWidth = rectAreaLight.halfWidth;\n\t\tvec3 halfHeight = rectAreaLight.halfHeight;\n\t\tvec3 lightColor = rectAreaLight.color;\n\t\tfloat roughness = material.roughness;\n\t\tvec3 rectCoords[ 4 ];\n\t\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\t\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\n\t\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\n\t\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\n\t\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\n\t\tvec4 t1 = texture2D( ltc_1, uv );\n\t\tvec4 t2 = texture2D( ltc_2, uv );\n\t\tmat3 mInv = mat3(\n\t\t\tvec3( t1.x, 0, t1.y ),\n\t\t\tvec3(    0, 1,    0 ),\n\t\t\tvec3( t1.z, 0, t1.w )\n\t\t);\n\t\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\n\t\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\n\t\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\n\t}\n#endif\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\n\tvec3 irradiance = dotNL * directLight.color;\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\n\t\tvec3 ccIrradiance = dotNLcc * directLight.color;\n\t\tclearcoatSpecular += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );\n\t#endif\n\treflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material );\n\treflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\n\treflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );\n}\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );\n\t#endif\n\t#ifdef USE_SHEEN\n\t\tsheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );\n\t#endif\n\tvec3 singleScattering = vec3( 0.0 );\n\tvec3 multiScattering = vec3( 0.0 );\n\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\n\t#ifdef USE_IRIDESCENCE\n\t\tcomputeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );\n\t#else\n\t\tcomputeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );\n\t#endif\n\tvec3 totalScattering = singleScattering + multiScattering;\n\tvec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );\n\treflectedLight.indirectSpecular += radiance * singleScattering;\n\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\n\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\n}\n#define RE_Direct\t\t\t\tRE_Direct_Physical\n#define RE_Direct_RectArea\t\tRE_Direct_RectArea_Physical\n#define RE_IndirectDiffuse\t\tRE_IndirectDiffuse_Physical\n#define RE_IndirectSpecular\t\tRE_IndirectSpecular_Physical\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\n\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\n}",lights_fragment_begin:"\nGeometricContext geometry;\ngeometry.position = - vViewPosition;\ngeometry.normal = normal;\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\n#ifdef USE_CLEARCOAT\n\tgeometry.clearcoatNormal = clearcoatNormal;\n#endif\n#ifdef USE_IRIDESCENCE\n\tfloat dotNVi = saturate( dot( normal, geometry.viewDir ) );\n\tif ( material.iridescenceThickness == 0.0 ) {\n\t\tmaterial.iridescence = 0.0;\n\t} else {\n\t\tmaterial.iridescence = saturate( material.iridescence );\n\t}\n\tif ( material.iridescence > 0.0 ) {\n\t\tmaterial.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );\n\t\tmaterial.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );\n\t}\n#endif\nIncidentLight directLight;\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\n\tPointLight pointLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\n\t\tpointLight = pointLights[ i ];\n\t\tgetPointLightInfo( pointLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\n\t\tpointLightShadow = pointLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\n\tSpotLight spotLight;\n\tvec4 spotColor;\n\tvec3 spotLightCoord;\n\tbool inSpotLightMap;\n\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\n\t\tspotLight = spotLights[ i ];\n\t\tgetSpotLightInfo( spotLight, geometry, directLight );\n\t\t#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX\n\t\t#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS\n\t\t#else\n\t\t#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )\n\t\t#endif\n\t\t#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )\n\t\t\tspotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;\n\t\t\tinSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );\n\t\t\tspotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );\n\t\t\tdirectLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;\n\t\t#endif\n\t\t#undef SPOT_LIGHT_MAP_INDEX\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\tspotLightShadow = spotLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\n\tDirectionalLight directionalLight;\n\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLightShadow;\n\t#endif\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\n\t\tdirectionalLight = directionalLights[ i ];\n\t\tgetDirectionalLightInfo( directionalLight, geometry, directLight );\n\t\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\n\t\tdirectionalLightShadow = directionalLightShadows[ i ];\n\t\tdirectLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t\t#endif\n\t\tRE_Direct( directLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\n\tRectAreaLight rectAreaLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\n\t\trectAreaLight = rectAreaLights[ i ];\n\t\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\n\t}\n\t#pragma unroll_loop_end\n#endif\n#if defined( RE_IndirectDiffuse )\n\tvec3 iblIrradiance = vec3( 0.0 );\n\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\n\tirradiance += getLightProbeIrradiance( lightProbe, geometry.normal );\n\t#if ( NUM_HEMI_LIGHTS > 0 )\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\n\t\t\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if defined( RE_IndirectSpecular )\n\tvec3 radiance = vec3( 0.0 );\n\tvec3 clearcoatRadiance = vec3( 0.0 );\n#endif",lights_fragment_maps:"#if defined( RE_IndirectDiffuse )\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\tvec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;\n\t\tirradiance += lightMapIrradiance;\n\t#endif\n\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\n\t\tiblIrradiance += getIBLIrradiance( geometry.normal );\n\t#endif\n#endif\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\n\tradiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );\n\t#ifdef USE_CLEARCOAT\n\t\tclearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );\n\t#endif\n#endif",lights_fragment_end:"#if defined( RE_IndirectDiffuse )\n\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\n#endif\n#if defined( RE_IndirectSpecular )\n\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\n#endif",logdepthbuf_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\n#endif",logdepthbuf_pars_fragment:"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\n\tuniform float logDepthBufFC;\n\tvarying float vFragDepth;\n\tvarying float vIsPerspective;\n#endif",logdepthbuf_pars_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvarying float vFragDepth;\n\t\tvarying float vIsPerspective;\n\t#else\n\t\tuniform float logDepthBufFC;\n\t#endif\n#endif",logdepthbuf_vertex:"#ifdef USE_LOGDEPTHBUF\n\t#ifdef USE_LOGDEPTHBUF_EXT\n\t\tvFragDepth = 1.0 + gl_Position.w;\n\t\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\n\t#else\n\t\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\n\t\t\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\n\t\t\tgl_Position.z *= gl_Position.w;\n\t\t}\n\t#endif\n#endif",map_fragment:"#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, vMapUv );\n#endif",map_pars_fragment:"#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif",map_particle_fragment:"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t#if defined( USE_POINTS_UV )\n\t\tvec2 uv = vUv;\n\t#else\n\t\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tdiffuseColor *= texture2D( map, uv );\n#endif\n#ifdef USE_ALPHAMAP\n\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\n#endif",map_particle_pars_fragment:"#if defined( USE_POINTS_UV )\n\tvarying vec2 vUv;\n#else\n\t#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\n\t\tuniform mat3 uvTransform;\n\t#endif\n#endif\n#ifdef USE_MAP\n\tuniform sampler2D map;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform sampler2D alphaMap;\n#endif",metalnessmap_fragment:"float metalnessFactor = metalness;\n#ifdef USE_METALNESSMAP\n\tvec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );\n\tmetalnessFactor *= texelMetalness.b;\n#endif",metalnessmap_pars_fragment:"#ifdef USE_METALNESSMAP\n\tuniform sampler2D metalnessMap;\n#endif",morphcolor_vertex:"#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )\n\tvColor *= morphTargetBaseInfluence;\n\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t#if defined( USE_COLOR_ALPHA )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];\n\t\t#elif defined( USE_COLOR )\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];\n\t\t#endif\n\t}\n#endif",morphnormal_vertex:"#ifdef USE_MORPHNORMALS\n\tobjectNormal *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\n\t\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\n\t\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\n\t\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\n\t#endif\n#endif",morphtarget_pars_vertex:"#ifdef USE_MORPHTARGETS\n\tuniform float morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tuniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];\n\t\tuniform sampler2DArray morphTargetsTexture;\n\t\tuniform ivec2 morphTargetsTextureSize;\n\t\tvec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {\n\t\t\tint texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;\n\t\t\tint y = texelIndex / morphTargetsTextureSize.x;\n\t\t\tint x = texelIndex - y * morphTargetsTextureSize.x;\n\t\t\tivec3 morphUV = ivec3( x, y, morphTargetIndex );\n\t\t\treturn texelFetch( morphTargetsTexture, morphUV, 0 );\n\t\t}\n\t#else\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\tuniform float morphTargetInfluences[ 8 ];\n\t\t#else\n\t\t\tuniform float morphTargetInfluences[ 4 ];\n\t\t#endif\n\t#endif\n#endif",morphtarget_vertex:"#ifdef USE_MORPHTARGETS\n\ttransformed *= morphTargetBaseInfluence;\n\t#ifdef MORPHTARGETS_TEXTURE\n\t\tfor ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {\n\t\t\tif ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];\n\t\t}\n\t#else\n\t\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\n\t\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\n\t\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\n\t\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\n\t\t#ifndef USE_MORPHNORMALS\n\t\t\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\n\t\t\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\n\t\t\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\n\t\t\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\n\t\t#endif\n\t#endif\n#endif",normal_fragment_begin:"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\n#ifdef FLAT_SHADED\n\tvec3 fdx = dFdx( vViewPosition );\n\tvec3 fdy = dFdy( vViewPosition );\n\tvec3 normal = normalize( cross( fdx, fdy ) );\n#else\n\tvec3 normal = normalize( vNormal );\n\t#ifdef DOUBLE_SIDED\n\t\tnormal *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_NORMALMAP_TANGENTSPACE\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn = getTangentFrame( - vViewPosition, normal, vNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn[0] *= faceDirection;\n\t\ttbn[1] *= faceDirection;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\t#ifdef USE_TANGENT\n\t\tmat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );\n\t#else\n\t\tmat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );\n\t#endif\n\t#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )\n\t\ttbn2[0] *= faceDirection;\n\t\ttbn2[1] *= faceDirection;\n\t#endif\n#endif\nvec3 geometryNormal = normal;",normal_fragment_maps:"#ifdef USE_NORMALMAP_OBJECTSPACE\n\tnormal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\t#ifdef FLIP_SIDED\n\t\tnormal = - normal;\n\t#endif\n\t#ifdef DOUBLE_SIDED\n\t\tnormal = normal * faceDirection;\n\t#endif\n\tnormal = normalize( normalMatrix * normal );\n#elif defined( USE_NORMALMAP_TANGENTSPACE )\n\tvec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;\n\tmapN.xy *= normalScale;\n\tnormal = normalize( tbn * mapN );\n#elif defined( USE_BUMPMAP )\n\tnormal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );\n#endif",normal_pars_fragment:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_pars_vertex:"#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n\t#ifdef USE_TANGENT\n\t\tvarying vec3 vTangent;\n\t\tvarying vec3 vBitangent;\n\t#endif\n#endif",normal_vertex:"#ifndef FLAT_SHADED\n\tvNormal = normalize( transformedNormal );\n\t#ifdef USE_TANGENT\n\t\tvTangent = normalize( transformedTangent );\n\t\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\n\t#endif\n#endif",normalmap_pars_fragment:"#ifdef USE_NORMALMAP\n\tuniform sampler2D normalMap;\n\tuniform vec2 normalScale;\n#endif\n#ifdef USE_NORMALMAP_OBJECTSPACE\n\tuniform mat3 normalMatrix;\n#endif\n#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\n\tmat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\n\t\tvec2 st0 = dFdx( uv.st );\n\t\tvec2 st1 = dFdy( uv.st );\n\t\tvec3 N = surf_norm;\n\t\tvec3 q1perp = cross( q1, N );\n\t\tvec3 q0perp = cross( N, q0 );\n\t\tvec3 T = q1perp * st0.x + q0perp * st1.x;\n\t\tvec3 B = q1perp * st0.y + q0perp * st1.y;\n\t\tfloat det = max( dot( T, T ), dot( B, B ) );\n\t\tfloat scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );\n\t\treturn mat3( T * scale, B * scale, N );\n\t}\n#endif",clearcoat_normal_fragment_begin:"#ifdef USE_CLEARCOAT\n\tvec3 clearcoatNormal = geometryNormal;\n#endif",clearcoat_normal_fragment_maps:"#ifdef USE_CLEARCOAT_NORMALMAP\n\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;\n\tclearcoatMapN.xy *= clearcoatNormalScale;\n\tclearcoatNormal = normalize( tbn2 * clearcoatMapN );\n#endif",clearcoat_pars_fragment:"#ifdef USE_CLEARCOATMAP\n\tuniform sampler2D clearcoatMap;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform sampler2D clearcoatNormalMap;\n\tuniform vec2 clearcoatNormalScale;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform sampler2D clearcoatRoughnessMap;\n#endif",iridescence_pars_fragment:"#ifdef USE_IRIDESCENCEMAP\n\tuniform sampler2D iridescenceMap;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform sampler2D iridescenceThicknessMap;\n#endif",output_fragment:"#ifdef OPAQUE\ndiffuseColor.a = 1.0;\n#endif\n#ifdef USE_TRANSMISSION\ndiffuseColor.a *= material.transmissionAlpha + 0.1;\n#endif\ngl_FragColor = vec4( outgoingLight, diffuseColor.a );",packing:"vec3 packNormalToRGB( const in vec3 normal ) {\n\treturn normalize( normal ) * 0.5 + 0.5;\n}\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\n\treturn 2.0 * rgb.xyz - 1.0;\n}\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\nconst float ShiftRight8 = 1. / 256.;\nvec4 packDepthToRGBA( const in float v ) {\n\tvec4 r = vec4( fract( v * PackFactors ), v );\n\tr.yzw -= r.xyz * ShiftRight8;\treturn r * PackUpscale;\n}\nfloat unpackRGBAToDepth( const in vec4 v ) {\n\treturn dot( v, UnpackFactors );\n}\nvec2 packDepthToRG( in highp float v ) {\n\treturn packDepthToRGBA( v ).yx;\n}\nfloat unpackRGToDepth( const in highp vec2 v ) {\n\treturn unpackRGBAToDepth( vec4( v.xy, 0.0, 0.0 ) );\n}\nvec4 pack2HalfToRGBA( vec2 v ) {\n\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );\n\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );\n}\nvec2 unpackRGBATo2Half( vec4 v ) {\n\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\n}\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( viewZ + near ) / ( near - far );\n}\nfloat orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn depth * ( near - far ) - near;\n}\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\n\treturn ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );\n}\nfloat perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {\n\treturn ( near * far ) / ( ( far - near ) * depth - far );\n}",premultiplied_alpha_fragment:"#ifdef PREMULTIPLIED_ALPHA\n\tgl_FragColor.rgb *= gl_FragColor.a;\n#endif",project_vertex:"vec4 mvPosition = vec4( transformed, 1.0 );\n#ifdef USE_INSTANCING\n\tmvPosition = instanceMatrix * mvPosition;\n#endif\nmvPosition = modelViewMatrix * mvPosition;\ngl_Position = projectionMatrix * mvPosition;",dithering_fragment:"#ifdef DITHERING\n\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\n#endif",dithering_pars_fragment:"#ifdef DITHERING\n\tvec3 dithering( vec3 color ) {\n\t\tfloat grid_position = rand( gl_FragCoord.xy );\n\t\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\n\t\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\n\t\treturn color + dither_shift_RGB;\n\t}\n#endif",roughnessmap_fragment:"float roughnessFactor = roughness;\n#ifdef USE_ROUGHNESSMAP\n\tvec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );\n\troughnessFactor *= texelRoughness.g;\n#endif",roughnessmap_pars_fragment:"#ifdef USE_ROUGHNESSMAP\n\tuniform sampler2D roughnessMap;\n#endif",shadowmap_pars_fragment:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#if NUM_SPOT_LIGHT_MAPS > 0\n\tuniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\n\t\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\n\t}\n\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\n\t\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\n\t}\n\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\n\t\tfloat occlusion = 1.0;\n\t\tvec2 distribution = texture2DDistribution( shadow, uv );\n\t\tfloat hard_shadow = step( compare , distribution.x );\n\t\tif (hard_shadow != 1.0 ) {\n\t\t\tfloat distance = compare - distribution.x ;\n\t\t\tfloat variance = max( 0.00000, distribution.y * distribution.y );\n\t\t\tfloat softness_probability = variance / (variance + distance * distance );\t\t\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\t\t\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\n\t\t}\n\t\treturn occlusion;\n\t}\n\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\n\t\tfloat shadow = 1.0;\n\t\tshadowCoord.xyz /= shadowCoord.w;\n\t\tshadowCoord.z += shadowBias;\n\t\tbool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;\n\t\tbool frustumTest = inFrustum && shadowCoord.z <= 1.0;\n\t\tif ( frustumTest ) {\n\t\t#if defined( SHADOWMAP_TYPE_PCF )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx0 = - texelSize.x * shadowRadius;\n\t\t\tfloat dy0 = - texelSize.y * shadowRadius;\n\t\t\tfloat dx1 = + texelSize.x * shadowRadius;\n\t\t\tfloat dy1 = + texelSize.y * shadowRadius;\n\t\t\tfloat dx2 = dx0 / 2.0;\n\t\t\tfloat dy2 = dy0 / 2.0;\n\t\t\tfloat dx3 = dx1 / 2.0;\n\t\t\tfloat dy3 = dy1 / 2.0;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\n\t\t\t) * ( 1.0 / 17.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\n\t\t\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\n\t\t\tfloat dx = texelSize.x;\n\t\t\tfloat dy = texelSize.y;\n\t\t\tvec2 uv = shadowCoord.xy;\n\t\t\tvec2 f = fract( uv * shadowMapSize + 0.5 );\n\t\t\tuv -= f * texelSize;\n\t\t\tshadow = (\n\t\t\t\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\n\t\t\t\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\n\t\t\t\t\t f.x ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t f.y ) +\n\t\t\t\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\n\t\t\t\t\t\t  f.x ),\n\t\t\t\t\t f.y )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#elif defined( SHADOWMAP_TYPE_VSM )\n\t\t\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#else\n\t\t\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\n\t\t#endif\n\t\t}\n\t\treturn shadow;\n\t}\n\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\n\t\tvec3 absV = abs( v );\n\t\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\n\t\tabsV *= scaleToCube;\n\t\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\n\t\tvec2 planar = v.xy;\n\t\tfloat almostATexel = 1.5 * texelSizeY;\n\t\tfloat almostOne = 1.0 - almostATexel;\n\t\tif ( absV.z >= almostOne ) {\n\t\t\tif ( v.z > 0.0 )\n\t\t\t\tplanar.x = 4.0 - v.x;\n\t\t} else if ( absV.x >= almostOne ) {\n\t\t\tfloat signX = sign( v.x );\n\t\t\tplanar.x = v.z * signX + 2.0 * signX;\n\t\t} else if ( absV.y >= almostOne ) {\n\t\t\tfloat signY = sign( v.y );\n\t\t\tplanar.x = v.x + 2.0 * signY + 2.0;\n\t\t\tplanar.y = v.z * signY - 2.0;\n\t\t}\n\t\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\n\t}\n\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\n\t\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\n\t\tvec3 lightToPosition = shadowCoord.xyz;\n\t\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\t\tdp += shadowBias;\n\t\tvec3 bd3D = normalize( lightToPosition );\n\t\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\n\t\t\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\n\t\t\treturn (\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\n\t\t\t\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\n\t\t\t) * ( 1.0 / 9.0 );\n\t\t#else\n\t\t\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\n\t\t#endif\n\t}\n#endif",shadowmap_pars_vertex:"#if NUM_SPOT_LIGHT_COORDS > 0\n\tuniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];\n\tvarying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];\n#endif\n#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\n\t\tstruct DirectionalLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\t\tstruct SpotLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t};\n\t\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\n\t\tstruct PointLightShadow {\n\t\t\tfloat shadowBias;\n\t\t\tfloat shadowNormalBias;\n\t\t\tfloat shadowRadius;\n\t\t\tvec2 shadowMapSize;\n\t\t\tfloat shadowCameraNear;\n\t\t\tfloat shadowCameraFar;\n\t\t};\n\t\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\n\t#endif\n#endif",shadowmap_vertex:"#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )\n\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\n\tvec4 shadowWorldPosition;\n#endif\n#if defined( USE_SHADOWMAP )\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\t\t#pragma unroll_loop_start\n\t\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\t\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\n\t\t\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\n\t\t}\n\t\t#pragma unroll_loop_end\n\t#endif\n#endif\n#if NUM_SPOT_LIGHT_COORDS > 0\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {\n\t\tshadowWorldPosition = worldPosition;\n\t\t#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\n\t\t\tshadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;\n\t\t#endif\n\t\tvSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;\n\t}\n\t#pragma unroll_loop_end\n#endif",shadowmask_pars_fragment:"float getShadowMask() {\n\tfloat shadow = 1.0;\n\t#ifdef USE_SHADOWMAP\n\t#if NUM_DIR_LIGHT_SHADOWS > 0\n\tDirectionalLightShadow directionalLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\n\t\tdirectionalLight = directionalLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_SPOT_LIGHT_SHADOWS > 0\n\tSpotLightShadow spotLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\n\t\tspotLight = spotLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#if NUM_POINT_LIGHT_SHADOWS > 0\n\tPointLightShadow pointLight;\n\t#pragma unroll_loop_start\n\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\n\t\tpointLight = pointLightShadows[ i ];\n\t\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\n\t}\n\t#pragma unroll_loop_end\n\t#endif\n\t#endif\n\treturn shadow;\n}",skinbase_vertex:"#ifdef USE_SKINNING\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\n#endif",skinning_pars_vertex:"#ifdef USE_SKINNING\n\tuniform mat4 bindMatrix;\n\tuniform mat4 bindMatrixInverse;\n\tuniform highp sampler2D boneTexture;\n\tuniform int boneTextureSize;\n\tmat4 getBoneMatrix( const in float i ) {\n\t\tfloat j = i * 4.0;\n\t\tfloat x = mod( j, float( boneTextureSize ) );\n\t\tfloat y = floor( j / float( boneTextureSize ) );\n\t\tfloat dx = 1.0 / float( boneTextureSize );\n\t\tfloat dy = 1.0 / float( boneTextureSize );\n\t\ty = dy * ( y + 0.5 );\n\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\n\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\n\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\n\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\n\t\tmat4 bone = mat4( v1, v2, v3, v4 );\n\t\treturn bone;\n\t}\n#endif",skinning_vertex:"#ifdef USE_SKINNING\n\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\n\tvec4 skinned = vec4( 0.0 );\n\tskinned += boneMatX * skinVertex * skinWeight.x;\n\tskinned += boneMatY * skinVertex * skinWeight.y;\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\n\tskinned += boneMatW * skinVertex * skinWeight.w;\n\ttransformed = ( bindMatrixInverse * skinned ).xyz;\n#endif",skinnormal_vertex:"#ifdef USE_SKINNING\n\tmat4 skinMatrix = mat4( 0.0 );\n\tskinMatrix += skinWeight.x * boneMatX;\n\tskinMatrix += skinWeight.y * boneMatY;\n\tskinMatrix += skinWeight.z * boneMatZ;\n\tskinMatrix += skinWeight.w * boneMatW;\n\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\n\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\n\t#ifdef USE_TANGENT\n\t\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\n\t#endif\n#endif",specularmap_fragment:"float specularStrength;\n#ifdef USE_SPECULARMAP\n\tvec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );\n\tspecularStrength = texelSpecular.r;\n#else\n\tspecularStrength = 1.0;\n#endif",specularmap_pars_fragment:"#ifdef USE_SPECULARMAP\n\tuniform sampler2D specularMap;\n#endif",tonemapping_fragment:"#if defined( TONE_MAPPING )\n\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\n#endif",tonemapping_pars_fragment:"#ifndef saturate\n#define saturate( a ) clamp( a, 0.0, 1.0 )\n#endif\nuniform float toneMappingExposure;\nvec3 LinearToneMapping( vec3 color ) {\n\treturn toneMappingExposure * color;\n}\nvec3 ReinhardToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\treturn saturate( color / ( vec3( 1.0 ) + color ) );\n}\nvec3 OptimizedCineonToneMapping( vec3 color ) {\n\tcolor *= toneMappingExposure;\n\tcolor = max( vec3( 0.0 ), color - 0.004 );\n\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\n}\nvec3 RRTAndODTFit( vec3 v ) {\n\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\n\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\n\treturn a / b;\n}\nvec3 ACESFilmicToneMapping( vec3 color ) {\n\tconst mat3 ACESInputMat = mat3(\n\t\tvec3( 0.59719, 0.07600, 0.02840 ),\t\tvec3( 0.35458, 0.90834, 0.13383 ),\n\t\tvec3( 0.04823, 0.01566, 0.83777 )\n\t);\n\tconst mat3 ACESOutputMat = mat3(\n\t\tvec3(  1.60475, -0.10208, -0.00327 ),\t\tvec3( -0.53108,  1.10813, -0.07276 ),\n\t\tvec3( -0.07367, -0.00605,  1.07602 )\n\t);\n\tcolor *= toneMappingExposure / 0.6;\n\tcolor = ACESInputMat * color;\n\tcolor = RRTAndODTFit( color );\n\tcolor = ACESOutputMat * color;\n\treturn saturate( color );\n}\nvec3 CustomToneMapping( vec3 color ) { return color; }",transmission_fragment:"#ifdef USE_TRANSMISSION\n\tmaterial.transmission = transmission;\n\tmaterial.transmissionAlpha = 1.0;\n\tmaterial.thickness = thickness;\n\tmaterial.attenuationDistance = attenuationDistance;\n\tmaterial.attenuationColor = attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tmaterial.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tmaterial.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;\n\t#endif\n\tvec3 pos = vWorldPosition;\n\tvec3 v = normalize( cameraPosition - pos );\n\tvec3 n = inverseTransformDirection( normal, viewMatrix );\n\tvec4 transmission = getIBLVolumeRefraction(\n\t\tn, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,\n\t\tpos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,\n\t\tmaterial.attenuationColor, material.attenuationDistance );\n\tmaterial.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );\n\ttotalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );\n#endif",transmission_pars_fragment:"#ifdef USE_TRANSMISSION\n\tuniform float transmission;\n\tuniform float thickness;\n\tuniform float attenuationDistance;\n\tuniform vec3 attenuationColor;\n\t#ifdef USE_TRANSMISSIONMAP\n\t\tuniform sampler2D transmissionMap;\n\t#endif\n\t#ifdef USE_THICKNESSMAP\n\t\tuniform sampler2D thicknessMap;\n\t#endif\n\tuniform vec2 transmissionSamplerSize;\n\tuniform sampler2D transmissionSamplerMap;\n\tuniform mat4 modelMatrix;\n\tuniform mat4 projectionMatrix;\n\tvarying vec3 vWorldPosition;\n\tfloat w0( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );\n\t}\n\tfloat w1( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );\n\t}\n\tfloat w2( float a ){\n\t\treturn ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );\n\t}\n\tfloat w3( float a ) {\n\t\treturn ( 1.0 / 6.0 ) * ( a * a * a );\n\t}\n\tfloat g0( float a ) {\n\t\treturn w0( a ) + w1( a );\n\t}\n\tfloat g1( float a ) {\n\t\treturn w2( a ) + w3( a );\n\t}\n\tfloat h0( float a ) {\n\t\treturn - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );\n\t}\n\tfloat h1( float a ) {\n\t\treturn 1.0 + w3( a ) / ( w2( a ) + w3( a ) );\n\t}\n\tvec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {\n\t\tuv = uv * texelSize.zw + 0.5;\n\t\tvec2 iuv = floor( uv );\n\t\tvec2 fuv = fract( uv );\n\t\tfloat g0x = g0( fuv.x );\n\t\tfloat g1x = g1( fuv.x );\n\t\tfloat h0x = h0( fuv.x );\n\t\tfloat h1x = h1( fuv.x );\n\t\tfloat h0y = h0( fuv.y );\n\t\tfloat h1y = h1( fuv.y );\n\t\tvec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\tvec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;\n\t\treturn g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +\n\t\t\tg1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );\n\t}\n\tvec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {\n\t\tvec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );\n\t\tvec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );\n\t\tvec2 fLodSizeInv = 1.0 / fLodSize;\n\t\tvec2 cLodSizeInv = 1.0 / cLodSize;\n\t\tvec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );\n\t\tvec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );\n\t\treturn mix( fSample, cSample, fract( lod ) );\n\t}\n\tvec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {\n\t\tvec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );\n\t\tvec3 modelScale;\n\t\tmodelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );\n\t\tmodelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );\n\t\tmodelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );\n\t\treturn normalize( refractionVector ) * thickness * modelScale;\n\t}\n\tfloat applyIorToRoughness( const in float roughness, const in float ior ) {\n\t\treturn roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );\n\t}\n\tvec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {\n\t\tfloat lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );\n\t\treturn textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );\n\t}\n\tvec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tif ( isinf( attenuationDistance ) ) {\n\t\t\treturn radiance;\n\t\t} else {\n\t\t\tvec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;\n\t\t\tvec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );\t\t\treturn transmittance * radiance;\n\t\t}\n\t}\n\tvec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,\n\t\tconst in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,\n\t\tconst in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,\n\t\tconst in vec3 attenuationColor, const in float attenuationDistance ) {\n\t\tvec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );\n\t\tvec3 refractedRayExit = position + transmissionRay;\n\t\tvec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );\n\t\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\n\t\trefractionCoords += 1.0;\n\t\trefractionCoords /= 2.0;\n\t\tvec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );\n\t\tvec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );\n\t\tvec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );\n\t\treturn vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );\n\t}\n#endif",uv_pars_fragment:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_pars_vertex:"#ifdef USE_UV\n\tvarying vec2 vUv;\n#endif\n#ifdef USE_MAP\n\tuniform mat3 mapTransform;\n\tvarying vec2 vMapUv;\n#endif\n#ifdef USE_ALPHAMAP\n\tuniform mat3 alphaMapTransform;\n\tvarying vec2 vAlphaMapUv;\n#endif\n#ifdef USE_LIGHTMAP\n\tuniform mat3 lightMapTransform;\n\tvarying vec2 vLightMapUv;\n#endif\n#ifdef USE_AOMAP\n\tuniform mat3 aoMapTransform;\n\tvarying vec2 vAoMapUv;\n#endif\n#ifdef USE_BUMPMAP\n\tuniform mat3 bumpMapTransform;\n\tvarying vec2 vBumpMapUv;\n#endif\n#ifdef USE_NORMALMAP\n\tuniform mat3 normalMapTransform;\n\tvarying vec2 vNormalMapUv;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tuniform mat3 displacementMapTransform;\n\tvarying vec2 vDisplacementMapUv;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tuniform mat3 emissiveMapTransform;\n\tvarying vec2 vEmissiveMapUv;\n#endif\n#ifdef USE_METALNESSMAP\n\tuniform mat3 metalnessMapTransform;\n\tvarying vec2 vMetalnessMapUv;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tuniform mat3 roughnessMapTransform;\n\tvarying vec2 vRoughnessMapUv;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tuniform mat3 clearcoatMapTransform;\n\tvarying vec2 vClearcoatMapUv;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tuniform mat3 clearcoatNormalMapTransform;\n\tvarying vec2 vClearcoatNormalMapUv;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tuniform mat3 clearcoatRoughnessMapTransform;\n\tvarying vec2 vClearcoatRoughnessMapUv;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tuniform mat3 sheenColorMapTransform;\n\tvarying vec2 vSheenColorMapUv;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tuniform mat3 sheenRoughnessMapTransform;\n\tvarying vec2 vSheenRoughnessMapUv;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tuniform mat3 iridescenceMapTransform;\n\tvarying vec2 vIridescenceMapUv;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tuniform mat3 iridescenceThicknessMapTransform;\n\tvarying vec2 vIridescenceThicknessMapUv;\n#endif\n#ifdef USE_SPECULARMAP\n\tuniform mat3 specularMapTransform;\n\tvarying vec2 vSpecularMapUv;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tuniform mat3 specularColorMapTransform;\n\tvarying vec2 vSpecularColorMapUv;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tuniform mat3 specularIntensityMapTransform;\n\tvarying vec2 vSpecularIntensityMapUv;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tuniform mat3 transmissionMapTransform;\n\tvarying vec2 vTransmissionMapUv;\n#endif\n#ifdef USE_THICKNESSMAP\n\tuniform mat3 thicknessMapTransform;\n\tvarying vec2 vThicknessMapUv;\n#endif",uv_vertex:"#ifdef USE_UV\n\tvUv = vec3( uv, 1 ).xy;\n#endif\n#ifdef USE_MAP\n\tvMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ALPHAMAP\n\tvAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_LIGHTMAP\n\tvLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_AOMAP\n\tvAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_BUMPMAP\n\tvBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_NORMALMAP\n\tvNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_DISPLACEMENTMAP\n\tvDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_EMISSIVEMAP\n\tvEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_METALNESSMAP\n\tvMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_ROUGHNESSMAP\n\tvRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOATMAP\n\tvClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_NORMALMAP\n\tvClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\n\tvClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCEMAP\n\tvIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_IRIDESCENCE_THICKNESSMAP\n\tvIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_COLORMAP\n\tvSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SHEEN_ROUGHNESSMAP\n\tvSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULARMAP\n\tvSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_COLORMAP\n\tvSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_SPECULAR_INTENSITYMAP\n\tvSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_TRANSMISSIONMAP\n\tvTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;\n#endif\n#ifdef USE_THICKNESSMAP\n\tvThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;\n#endif",worldpos_vertex:"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0\n\tvec4 worldPosition = vec4( transformed, 1.0 );\n\t#ifdef USE_INSTANCING\n\t\tworldPosition = instanceMatrix * worldPosition;\n\t#endif\n\tworldPosition = modelMatrix * worldPosition;\n#endif",background_vert:"varying vec2 vUv;\nuniform mat3 uvTransform;\nvoid main() {\n\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\tgl_Position = vec4( position.xy, 1.0, 1.0 );\n}",background_frag:"uniform sampler2D t2D;\nuniform float backgroundIntensity;\nvarying vec2 vUv;\nvoid main() {\n\tvec4 texColor = texture2D( t2D, vUv );\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",backgroundCube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",backgroundCube_frag:"#ifdef ENVMAP_TYPE_CUBE\n\tuniform samplerCube envMap;\n#elif defined( ENVMAP_TYPE_CUBE_UV )\n\tuniform sampler2D envMap;\n#endif\nuniform float flipEnvMap;\nuniform float backgroundBlurriness;\nuniform float backgroundIntensity;\nvarying vec3 vWorldDirection;\n#include <cube_uv_reflection_fragment>\nvoid main() {\n\t#ifdef ENVMAP_TYPE_CUBE\n\t\tvec4 texColor = textureCube( envMap, vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );\n\t#elif defined( ENVMAP_TYPE_CUBE_UV )\n\t\tvec4 texColor = textureCubeUV( envMap, vWorldDirection, backgroundBlurriness );\n\t#else\n\t\tvec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t#endif\n\ttexColor.rgb *= backgroundIntensity;\n\tgl_FragColor = texColor;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",cube_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n\tgl_Position.z = gl_Position.w;\n}",cube_frag:"uniform samplerCube tCube;\nuniform float tFlip;\nuniform float opacity;\nvarying vec3 vWorldDirection;\nvoid main() {\n\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\n\tgl_FragColor = texColor;\n\tgl_FragColor.a *= opacity;\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",depth_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvHighPrecisionZW = gl_Position.zw;\n}",depth_frag:"#if DEPTH_PACKING == 3200\n\tuniform float opacity;\n#endif\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvarying vec2 vHighPrecisionZW;\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#if DEPTH_PACKING == 3200\n\t\tdiffuseColor.a = opacity;\n\t#endif\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <logdepthbuf_fragment>\n\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\n\t#if DEPTH_PACKING == 3200\n\t\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\n\t#elif DEPTH_PACKING == 3201\n\t\tgl_FragColor = packDepthToRGBA( fragCoordZ );\n\t#endif\n}",distanceRGBA_vert:"#define DISTANCE\nvarying vec3 vWorldPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <skinbase_vertex>\n\t#ifdef USE_DISPLACEMENTMAP\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <worldpos_vertex>\n\t#include <clipping_planes_vertex>\n\tvWorldPosition = worldPosition.xyz;\n}",distanceRGBA_frag:"#define DISTANCE\nuniform vec3 referencePosition;\nuniform float nearDistance;\nuniform float farDistance;\nvarying vec3 vWorldPosition;\n#include <common>\n#include <packing>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main () {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( 1.0 );\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\tfloat dist = length( vWorldPosition - referencePosition );\n\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\n\tdist = saturate( dist );\n\tgl_FragColor = packDepthToRGBA( dist );\n}",equirect_vert:"varying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvWorldDirection = transformDirection( position, modelMatrix );\n\t#include <begin_vertex>\n\t#include <project_vertex>\n}",equirect_frag:"uniform sampler2D tEquirect;\nvarying vec3 vWorldDirection;\n#include <common>\nvoid main() {\n\tvec3 direction = normalize( vWorldDirection );\n\tvec2 sampleUV = equirectUv( direction );\n\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n}",linedashed_vert:"uniform float scale;\nattribute float lineDistance;\nvarying float vLineDistance;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\tvLineDistance = scale * lineDistance;\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",linedashed_frag:"uniform vec3 diffuse;\nuniform float opacity;\nuniform float dashSize;\nuniform float totalSize;\nvarying float vLineDistance;\n#include <common>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\n\t\tdiscard;\n\t}\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",meshbasic_vert:"#include <common>\n#include <uv_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )\n\t\t#include <beginnormal_vertex>\n\t\t#include <morphnormal_vertex>\n\t\t#include <skinbase_vertex>\n\t\t#include <skinnormal_vertex>\n\t\t#include <defaultnormal_vertex>\n\t#endif\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <fog_vertex>\n}",meshbasic_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#ifndef FLAT_SHADED\n\tvarying vec3 vNormal;\n#endif\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\t#ifdef USE_LIGHTMAP\n\t\tvec4 lightMapTexel = texture2D( lightMap, vLightMapUv );\n\t\treflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;\n\t#else\n\t\treflectedLight.indirectDiffuse += vec3( 1.0 );\n\t#endif\n\t#include <aomap_fragment>\n\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\n\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshlambert_vert:"#define LAMBERT\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshlambert_frag:"#define LAMBERT\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_lambert_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_lambert_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshmatcap_vert:"#define MATCAP\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <color_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n\tvViewPosition = - mvPosition.xyz;\n}",meshmatcap_frag:"#define MATCAP\nuniform vec3 diffuse;\nuniform float opacity;\nuniform sampler2D matcap;\nvarying vec3 vViewPosition;\n#include <common>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tvec3 viewDir = normalize( vViewPosition );\n\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\n\tvec3 y = cross( viewDir, x );\n\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\n\t#ifdef USE_MATCAP\n\t\tvec4 matcapColor = texture2D( matcap, uv );\n\t#else\n\t\tvec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );\n\t#endif\n\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshnormal_vert:"#define NORMAL\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvViewPosition = - mvPosition.xyz;\n#endif\n}",meshnormal_frag:"#define NORMAL\nuniform float opacity;\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )\n\tvarying vec3 vViewPosition;\n#endif\n#include <packing>\n#include <uv_pars_fragment>\n#include <normal_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\t#include <logdepthbuf_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\n\t#ifdef OPAQUE\n\t\tgl_FragColor.a = 1.0;\n\t#endif\n}",meshphong_vert:"#define PHONG\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshphong_frag:"#define PHONG\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform vec3 specular;\nuniform float shininess;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_phong_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <specularmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <specularmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_phong_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\n\t#include <envmap_fragment>\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshphysical_vert:"#define STANDARD\nvarying vec3 vViewPosition;\n#ifdef USE_TRANSMISSION\n\tvarying vec3 vWorldPosition;\n#endif\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n#ifdef USE_TRANSMISSION\n\tvWorldPosition = worldPosition.xyz;\n#endif\n}",meshphysical_frag:"#define STANDARD\n#ifdef PHYSICAL\n\t#define IOR\n\t#define USE_SPECULAR\n#endif\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float roughness;\nuniform float metalness;\nuniform float opacity;\n#ifdef IOR\n\tuniform float ior;\n#endif\n#ifdef USE_SPECULAR\n\tuniform float specularIntensity;\n\tuniform vec3 specularColor;\n\t#ifdef USE_SPECULAR_COLORMAP\n\t\tuniform sampler2D specularColorMap;\n\t#endif\n\t#ifdef USE_SPECULAR_INTENSITYMAP\n\t\tuniform sampler2D specularIntensityMap;\n\t#endif\n#endif\n#ifdef USE_CLEARCOAT\n\tuniform float clearcoat;\n\tuniform float clearcoatRoughness;\n#endif\n#ifdef USE_IRIDESCENCE\n\tuniform float iridescence;\n\tuniform float iridescenceIOR;\n\tuniform float iridescenceThicknessMinimum;\n\tuniform float iridescenceThicknessMaximum;\n#endif\n#ifdef USE_SHEEN\n\tuniform vec3 sheenColor;\n\tuniform float sheenRoughness;\n\t#ifdef USE_SHEEN_COLORMAP\n\t\tuniform sampler2D sheenColorMap;\n\t#endif\n\t#ifdef USE_SHEEN_ROUGHNESSMAP\n\t\tuniform sampler2D sheenRoughnessMap;\n\t#endif\n#endif\nvarying vec3 vViewPosition;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <iridescence_fragment>\n#include <cube_uv_reflection_fragment>\n#include <envmap_common_pars_fragment>\n#include <envmap_physical_pars_fragment>\n#include <fog_pars_fragment>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_physical_pars_fragment>\n#include <transmission_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <clearcoat_pars_fragment>\n#include <iridescence_pars_fragment>\n#include <roughnessmap_pars_fragment>\n#include <metalnessmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <roughnessmap_fragment>\n\t#include <metalnessmap_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <clearcoat_normal_fragment_begin>\n\t#include <clearcoat_normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_physical_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;\n\tvec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;\n\t#include <transmission_fragment>\n\tvec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;\n\t#ifdef USE_SHEEN\n\t\tfloat sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );\n\t\toutgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;\n\t#endif\n\t#ifdef USE_CLEARCOAT\n\t\tfloat dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\n\t\tvec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );\n\t\toutgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;\n\t#endif\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",meshtoon_vert:"#define TOON\nvarying vec3 vViewPosition;\n#include <common>\n#include <uv_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\tvViewPosition = - mvPosition.xyz;\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",meshtoon_frag:"#define TOON\nuniform vec3 diffuse;\nuniform vec3 emissive;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <dithering_pars_fragment>\n#include <color_pars_fragment>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <aomap_pars_fragment>\n#include <lightmap_pars_fragment>\n#include <emissivemap_pars_fragment>\n#include <gradientmap_pars_fragment>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <normal_pars_fragment>\n#include <lights_toon_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <bumpmap_pars_fragment>\n#include <normalmap_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\n\tvec3 totalEmissiveRadiance = emissive;\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <color_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\t#include <normal_fragment_begin>\n\t#include <normal_fragment_maps>\n\t#include <emissivemap_fragment>\n\t#include <lights_toon_fragment>\n\t#include <lights_fragment_begin>\n\t#include <lights_fragment_maps>\n\t#include <lights_fragment_end>\n\t#include <aomap_fragment>\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n\t#include <dithering_fragment>\n}",points_vert:"uniform float size;\nuniform float scale;\n#include <common>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n#ifdef USE_POINTS_UV\n\tvarying vec2 vUv;\n\tuniform mat3 uvTransform;\n#endif\nvoid main() {\n\t#ifdef USE_POINTS_UV\n\t\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\n\t#endif\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <project_vertex>\n\tgl_PointSize = size;\n\t#ifdef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\n\t#endif\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <worldpos_vertex>\n\t#include <fog_vertex>\n}",points_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <color_pars_fragment>\n#include <map_particle_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_particle_fragment>\n\t#include <color_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n\t#include <premultiplied_alpha_fragment>\n}",shadow_vert:"#include <common>\n#include <fog_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <shadowmap_pars_vertex>\nvoid main() {\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <worldpos_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n}",shadow_frag:"uniform vec3 color;\nuniform float opacity;\n#include <common>\n#include <packing>\n#include <fog_pars_fragment>\n#include <bsdfs>\n#include <lights_pars_begin>\n#include <logdepthbuf_pars_fragment>\n#include <shadowmap_pars_fragment>\n#include <shadowmask_pars_fragment>\nvoid main() {\n\t#include <logdepthbuf_fragment>\n\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}",sprite_vert:"uniform float rotation;\nuniform vec2 center;\n#include <common>\n#include <uv_pars_vertex>\n#include <fog_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\nvoid main() {\n\t#include <uv_vertex>\n\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\n\tvec2 scale;\n\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\n\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\n\t#ifndef USE_SIZEATTENUATION\n\t\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\n\t\tif ( isPerspective ) scale *= - mvPosition.z;\n\t#endif\n\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\n\tvec2 rotatedPosition;\n\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\n\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\n\tmvPosition.xy += rotatedPosition;\n\tgl_Position = projectionMatrix * mvPosition;\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\t#include <fog_vertex>\n}",sprite_frag:"uniform vec3 diffuse;\nuniform float opacity;\n#include <common>\n#include <uv_pars_fragment>\n#include <map_pars_fragment>\n#include <alphamap_pars_fragment>\n#include <alphatest_pars_fragment>\n#include <fog_pars_fragment>\n#include <logdepthbuf_pars_fragment>\n#include <clipping_planes_pars_fragment>\nvoid main() {\n\t#include <clipping_planes_fragment>\n\tvec3 outgoingLight = vec3( 0.0 );\n\tvec4 diffuseColor = vec4( diffuse, opacity );\n\t#include <logdepthbuf_fragment>\n\t#include <map_fragment>\n\t#include <alphamap_fragment>\n\t#include <alphatest_fragment>\n\toutgoingLight = diffuseColor.rgb;\n\t#include <output_fragment>\n\t#include <tonemapping_fragment>\n\t#include <encodings_fragment>\n\t#include <fog_fragment>\n}"},mi={common:{diffuse:{value:new dn(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new xe},alphaMap:{value:null},alphaMapTransform:{value:new xe},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new xe}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new xe}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new xe}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new xe},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new xe},normalScale:{value:new ve(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new xe},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new xe}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new xe}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new xe}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new dn(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new dn(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new xe}},sprite:{diffuse:{value:new dn(16777215)},opacity:{value:1},center:{value:new ve(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new xe},alphaMap:{value:null},alphaTest:{value:0}}},gi={basic:{uniforms:Kn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.fog]),vertexShader:_i.meshbasic_vert,fragmentShader:_i.meshbasic_frag},lambert:{uniforms:Kn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,mi.lights,{emissive:{value:new dn(0)}}]),vertexShader:_i.meshlambert_vert,fragmentShader:_i.meshlambert_frag},phong:{uniforms:Kn([mi.common,mi.specularmap,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,mi.lights,{emissive:{value:new dn(0)},specular:{value:new dn(1118481)},shininess:{value:30}}]),vertexShader:_i.meshphong_vert,fragmentShader:_i.meshphong_frag},standard:{uniforms:Kn([mi.common,mi.envmap,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.roughnessmap,mi.metalnessmap,mi.fog,mi.lights,{emissive:{value:new dn(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:_i.meshphysical_vert,fragmentShader:_i.meshphysical_frag},toon:{uniforms:Kn([mi.common,mi.aomap,mi.lightmap,mi.emissivemap,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.gradientmap,mi.fog,mi.lights,{emissive:{value:new dn(0)}}]),vertexShader:_i.meshtoon_vert,fragmentShader:_i.meshtoon_frag},matcap:{uniforms:Kn([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,mi.fog,{matcap:{value:null}}]),vertexShader:_i.meshmatcap_vert,fragmentShader:_i.meshmatcap_frag},points:{uniforms:Kn([mi.points,mi.fog]),vertexShader:_i.points_vert,fragmentShader:_i.points_frag},dashed:{uniforms:Kn([mi.common,mi.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:_i.linedashed_vert,fragmentShader:_i.linedashed_frag},depth:{uniforms:Kn([mi.common,mi.displacementmap]),vertexShader:_i.depth_vert,fragmentShader:_i.depth_frag},normal:{uniforms:Kn([mi.common,mi.bumpmap,mi.normalmap,mi.displacementmap,{opacity:{value:1}}]),vertexShader:_i.meshnormal_vert,fragmentShader:_i.meshnormal_frag},sprite:{uniforms:Kn([mi.sprite,mi.fog]),vertexShader:_i.sprite_vert,fragmentShader:_i.sprite_frag},background:{uniforms:{uvTransform:{value:new xe},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:_i.background_vert,fragmentShader:_i.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1}},vertexShader:_i.backgroundCube_vert,fragmentShader:_i.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:_i.cube_vert,fragmentShader:_i.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:_i.equirect_vert,fragmentShader:_i.equirect_frag},distanceRGBA:{uniforms:Kn([mi.common,mi.displacementmap,{referencePosition:{value:new We},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:_i.distanceRGBA_vert,fragmentShader:_i.distanceRGBA_frag},shadow:{uniforms:Kn([mi.lights,mi.fog,{color:{value:new dn(0)},opacity:{value:1}}]),vertexShader:_i.shadow_vert,fragmentShader:_i.shadow_frag}};gi.physical={uniforms:Kn([gi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new xe},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new xe},clearcoatNormalScale:{value:new ve(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new xe},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new xe},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new xe},sheen:{value:0},sheenColor:{value:new dn(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new xe},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new xe},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new xe},transmissionSamplerSize:{value:new ve},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new xe},attenuationDistance:{value:0},attenuationColor:{value:new dn(0)},specularColor:{value:new dn(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new xe},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new xe}}]),vertexShader:_i.meshphysical_vert,fragmentShader:_i.meshphysical_frag};const bi={r:0,b:0,g:0};function vi(e,t,n,i,r,a,s){const o=new dn(0);let c,l,u=!0===a?0:1,d=null,h=0,f=null;function p(t,n){t.getRGB(bi,Zn(e)),i.buffers.color.setClear(bi.r,bi.g,bi.b,n,s)}return{getClearColor:function(){return o},setClearColor:function(e,t=1){o.set(e),u=t,p(o,u)},getClearAlpha:function(){return u},setClearAlpha:function(e){u=e,p(o,u)},render:function(a,_){let m=!1,g=!0===_.isScene?_.background:null;switch(g&&g.isTexture&&(g=(_.backgroundBlurriness>0?n:t).get(g)),null===g?p(o,u):g&&g.isColor&&(p(g,1),m=!0),e.xr.getEnvironmentBlendMode()){case"opaque":m=!0;break;case"additive":i.buffers.color.setClear(0,0,0,1,s),m=!0;break;case"alpha-blend":i.buffers.color.setClear(0,0,0,0,s),m=!0}(e.autoClear||m)&&e.clear(e.autoClearColor,e.autoClearDepth,e.autoClearStencil),g&&(g.isCubeTexture||g.mapping===E)?(void 0===l&&(l=new Xn(new qn(1,1,1),new $n({name:"BackgroundCubeMaterial",uniforms:Yn(gi.backgroundCube.uniforms),vertexShader:gi.backgroundCube.vertexShader,fragmentShader:gi.backgroundCube.fragmentShader,side:1,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),l.geometry.deleteAttribute("uv"),l.onBeforeRender=function(e,t,n){this.matrixWorld.copyPosition(n.matrixWorld)},Object.defineProperty(l.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),r.update(l)),l.material.uniforms.envMap.value=g,l.material.uniforms.flipEnvMap.value=g.isCubeTexture&&!1===g.isRenderTargetTexture?-1:1,l.material.uniforms.backgroundBlurriness.value=_.backgroundBlurriness,l.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,l.material.toneMapped=g.colorSpace!==$,d===g&&h===g.version&&f===e.toneMapping||(l.material.needsUpdate=!0,d=g,h=g.version,f=e.toneMapping),l.layers.enableAll(),a.unshift(l,l.geometry,l.material,0,0,null)):g&&g.isTexture&&(void 0===c&&(c=new Xn(new pi(2,2),new $n({name:"BackgroundMaterial",uniforms:Yn(gi.background.uniforms),vertexShader:gi.background.vertexShader,fragmentShader:gi.background.fragmentShader,side:0,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),r.update(c)),c.material.uniforms.t2D.value=g,c.material.uniforms.backgroundIntensity.value=_.backgroundIntensity,c.material.toneMapped=g.colorSpace!==$,!0===g.matrixAutoUpdate&&g.updateMatrix(),c.material.uniforms.uvTransform.value.copy(g.matrix),d===g&&h===g.version&&f===e.toneMapping||(c.material.needsUpdate=!0,d=g,h=g.version,f=e.toneMapping),c.layers.enableAll(),a.unshift(c,c.geometry,c.material,0,0,null))}}}function xi(e,t,n,i){const r=e.getParameter(e.MAX_VERTEX_ATTRIBS),a=i.isWebGL2?null:t.get("OES_vertex_array_object"),s=i.isWebGL2||null!==a,o={},c=f(null);let l=c,u=!1;function d(t){return i.isWebGL2?e.bindVertexArray(t):a.bindVertexArrayOES(t)}function h(t){return i.isWebGL2?e.deleteVertexArray(t):a.deleteVertexArrayOES(t)}function f(e){const t=[],n=[],i=[];for(let e=0;e<r;e++)t[e]=0,n[e]=0,i[e]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:t,enabledAttributes:n,attributeDivisors:i,object:e,attributes:{},index:null}}function p(){const e=l.newAttributes;for(let t=0,n=e.length;t<n;t++)e[t]=0}function _(e){m(e,0)}function m(n,r){const a=l.newAttributes,s=l.enabledAttributes,o=l.attributeDivisors;a[n]=1,0===s[n]&&(e.enableVertexAttribArray(n),s[n]=1),o[n]!==r&&((i.isWebGL2?e:t.get("ANGLE_instanced_arrays"))[i.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](n,r),o[n]=r)}function g(){const t=l.newAttributes,n=l.enabledAttributes;for(let i=0,r=n.length;i<r;i++)n[i]!==t[i]&&(e.disableVertexAttribArray(i),n[i]=0)}function b(t,n,r,a,s,o){!0!==i.isWebGL2||r!==e.INT&&r!==e.UNSIGNED_INT?e.vertexAttribPointer(t,n,r,a,s,o):e.vertexAttribIPointer(t,n,r,s,o)}function v(){x(),u=!0,l!==c&&(l=c,d(l.object))}function x(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:function(r,c,h,v,x){let w=!1;if(s){const t=function(t,n,r){const s=!0===r.wireframe;let c=o[t.id];void 0===c&&(c={},o[t.id]=c);let l=c[n.id];void 0===l&&(l={},c[n.id]=l);let u=l[s];return void 0===u&&(u=f(i.isWebGL2?e.createVertexArray():a.createVertexArrayOES()),l[s]=u),u}(v,h,c);l!==t&&(l=t,d(l.object)),w=function(e,t,n,i){const r=l.attributes,a=t.attributes;let s=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){const n=r[t];let i=a[t];if(void 0===i&&("instanceMatrix"===t&&e.instanceMatrix&&(i=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(i=e.instanceColor)),void 0===n)return!0;if(n.attribute!==i)return!0;if(i&&n.data!==i.data)return!0;s++}return l.attributesNum!==s||l.index!==i}(r,v,h,x),w&&function(e,t,n,i){const r={},a=t.attributes;let s=0;const o=n.getAttributes();for(const t in o)if(o[t].location>=0){let n=a[t];void 0===n&&("instanceMatrix"===t&&e.instanceMatrix&&(n=e.instanceMatrix),"instanceColor"===t&&e.instanceColor&&(n=e.instanceColor));const i={};i.attribute=n,n&&n.data&&(i.data=n.data),r[t]=i,s++}l.attributes=r,l.attributesNum=s,l.index=i}(r,v,h,x)}else{const e=!0===c.wireframe;l.geometry===v.id&&l.program===h.id&&l.wireframe===e||(l.geometry=v.id,l.program=h.id,l.wireframe=e,w=!0)}null!==x&&n.update(x,e.ELEMENT_ARRAY_BUFFER),(w||u)&&(u=!1,function(r,a,s,o){if(!1===i.isWebGL2&&(r.isInstancedMesh||o.isInstancedBufferGeometry)&&null===t.get("ANGLE_instanced_arrays"))return;p();const c=o.attributes,l=s.getAttributes(),u=a.defaultAttributeValues;for(const t in l){const i=l[t];if(i.location>=0){let a=c[t];if(void 0===a&&("instanceMatrix"===t&&r.instanceMatrix&&(a=r.instanceMatrix),"instanceColor"===t&&r.instanceColor&&(a=r.instanceColor)),void 0!==a){const t=a.normalized,s=a.itemSize,c=n.get(a);if(void 0===c)continue;const l=c.buffer,u=c.type,d=c.bytesPerElement;if(a.isInterleavedBufferAttribute){const n=a.data,c=n.stride,h=a.offset;if(n.isInstancedInterleavedBuffer){for(let e=0;e<i.locationSize;e++)m(i.location+e,n.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=n.meshPerAttribute*n.count)}else for(let e=0;e<i.locationSize;e++)_(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,l);for(let e=0;e<i.locationSize;e++)b(i.location+e,s/i.locationSize,u,t,c*d,(h+s/i.locationSize*e)*d)}else{if(a.isInstancedBufferAttribute){for(let e=0;e<i.locationSize;e++)m(i.location+e,a.meshPerAttribute);!0!==r.isInstancedMesh&&void 0===o._maxInstanceCount&&(o._maxInstanceCount=a.meshPerAttribute*a.count)}else for(let e=0;e<i.locationSize;e++)_(i.location+e);e.bindBuffer(e.ARRAY_BUFFER,l);for(let e=0;e<i.locationSize;e++)b(i.location+e,s/i.locationSize,u,t,s*d,s/i.locationSize*e*d)}}else if(void 0!==u){const n=u[t];if(void 0!==n)switch(n.length){case 2:e.vertexAttrib2fv(i.location,n);break;case 3:e.vertexAttrib3fv(i.location,n);break;case 4:e.vertexAttrib4fv(i.location,n);break;default:e.vertexAttrib1fv(i.location,n)}}}}g()}(r,c,h,v),null!==x&&e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n.get(x).buffer))},reset:v,resetDefaultState:x,dispose:function(){v();for(const e in o){const t=o[e];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e]}},releaseStatesOfGeometry:function(e){if(void 0===o[e.id])return;const t=o[e.id];for(const e in t){const n=t[e];for(const e in n)h(n[e].object),delete n[e];delete t[e]}delete o[e.id]},releaseStatesOfProgram:function(e){for(const t in o){const n=o[t];if(void 0===n[e.id])continue;const i=n[e.id];for(const e in i)h(i[e].object),delete i[e];delete n[e.id]}},initAttributes:p,enableAttribute:_,disableUnusedAttributes:g}}function wi(e,t,n,i){const r=i.isWebGL2;let a;this.setMode=function(e){a=e},this.render=function(t,i){e.drawArrays(a,t,i),n.update(i,a,1)},this.renderInstances=function(i,s,o){if(0===o)return;let c,l;if(r)c=e,l="drawArraysInstanced";else if(c=t.get("ANGLE_instanced_arrays"),l="drawArraysInstancedANGLE",null===c)return void console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");c[l](a,i,s,o),n.update(s,a,o)}}function yi(e,t,n){let i;function r(t){if("highp"===t){if(e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.HIGH_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.HIGH_FLOAT).precision>0)return"highp";t="mediump"}return"mediump"===t&&e.getShaderPrecisionFormat(e.VERTEX_SHADER,e.MEDIUM_FLOAT).precision>0&&e.getShaderPrecisionFormat(e.FRAGMENT_SHADER,e.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const a="undefined"!=typeof WebGL2RenderingContext&&"WebGL2RenderingContext"===e.constructor.name;let s=void 0!==n.precision?n.precision:"highp";const o=r(s);o!==s&&(console.warn("THREE.WebGLRenderer:",s,"not supported, using",o,"instead."),s=o);const c=a||t.has("WEBGL_draw_buffers"),l=!0===n.logarithmicDepthBuffer,u=e.getParameter(e.MAX_TEXTURE_IMAGE_UNITS),d=e.getParameter(e.MAX_VERTEX_TEXTURE_IMAGE_UNITS),h=e.getParameter(e.MAX_TEXTURE_SIZE),f=e.getParameter(e.MAX_CUBE_MAP_TEXTURE_SIZE),p=e.getParameter(e.MAX_VERTEX_ATTRIBS),_=e.getParameter(e.MAX_VERTEX_UNIFORM_VECTORS),m=e.getParameter(e.MAX_VARYING_VECTORS),g=e.getParameter(e.MAX_FRAGMENT_UNIFORM_VECTORS),b=d>0,v=a||t.has("OES_texture_float");return{isWebGL2:a,drawBuffers:c,getMaxAnisotropy:function(){if(void 0!==i)return i;if(!0===t.has("EXT_texture_filter_anisotropic")){const n=t.get("EXT_texture_filter_anisotropic");i=e.getParameter(n.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else i=0;return i},getMaxPrecision:r,precision:s,logarithmicDepthBuffer:l,maxTextures:u,maxVertexTextures:d,maxTextureSize:h,maxCubemapSize:f,maxAttributes:p,maxVertexUniforms:_,maxVaryings:m,maxFragmentUniforms:g,vertexTextures:b,floatFragmentTextures:v,floatVertexTextures:b&&v,maxSamples:a?e.getParameter(e.MAX_SAMPLES):0}}function Mi(e){const t=this;let n=null,i=0,r=!1,a=!1;const s=new ci,o=new xe,c={value:null,needsUpdate:!1};function l(e,n,i,r){const a=null!==e?e.length:0;let l=null;if(0!==a){if(l=c.value,!0!==r||null===l){const t=i+4*a,r=n.matrixWorldInverse;o.getNormalMatrix(r),(null===l||l.length<t)&&(l=new Float32Array(t));for(let t=0,n=i;t!==a;++t,n+=4)s.copy(e[t]).applyMatrix4(r,o),s.normal.toArray(l,n),l[n+3]=s.constant}c.value=l,c.needsUpdate=!0}return t.numPlanes=a,t.numIntersection=0,l}this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(e,t){const n=0!==e.length||t||0!==i||r;return r=t,i=e.length,n},this.beginShadows=function(){a=!0,l(null)},this.endShadows=function(){a=!1},this.setGlobalState=function(e,t){n=l(e,t,0)},this.setState=function(s,o,u){const d=s.clippingPlanes,h=s.clipIntersection,f=s.clipShadows,p=e.get(s);if(!r||null===d||0===d.length||a&&!f)a?l(null):(c.value!==n&&(c.value=n,c.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0);else{const e=a?0:i,t=4*e;let r=p.clippingState||null;c.value=r,r=l(d,o,t,u);for(let e=0;e!==t;++e)r[e]=n[e];p.clippingState=r,this.numIntersection=h?this.numPlanes:0,this.numPlanes+=e}}}function Si(e){let t=new WeakMap;function n(e,t){return 303===t?e.mapping=M:304===t&&(e.mapping=S),e}function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture&&!1===r.isRenderTargetTexture){const a=r.mapping;if(303===a||304===a){if(t.has(r))return n(t.get(r).texture,r.mapping);{const a=r.image;if(a&&a.height>0){const s=new ri(a.height/2);return s.fromEquirectangularTexture(e,r),t.set(r,s),r.addEventListener("dispose",i),n(s.texture,r.mapping)}return null}}}return r},dispose:function(){t=new WeakMap}}}class Ei extends Qn{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=null===e.view?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){null===this.view&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){null!==this.view&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,s=i+t,o=i-t;if(null!==this.view&&this.view.enabled){const e=(this.right-this.left)/this.view.fullWidth/this.zoom,t=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=e*this.view.offsetX,a=r+e*this.view.width,s-=t*this.view.offsetY,o=s-t*this.view.height}this.projectionMatrix.makeOrthographic(r,a,s,o,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,null!==this.view&&(t.object.view=Object.assign({},this.view)),t}}const Ti=[.125,.215,.35,.446,.526,.582],Ai=new Ei,Ri=new dn;let Pi=null;const Ci=(1+Math.sqrt(5))/2,Li=1/Ci,Di=[new We(1,1,1),new We(-1,1,1),new We(1,1,-1),new We(-1,1,-1),new We(0,Ci,Li),new We(0,Ci,-Li),new We(Li,0,Ci),new We(-Li,0,Ci),new We(Ci,Li,0),new We(-Ci,Li,0)];class Ui{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Pi=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){null===this._cubemapMaterial&&(this._cubemapMaterial=Fi(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){null===this._equirectMaterial&&(this._equirectMaterial=Oi(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),null!==this._cubemapMaterial&&this._cubemapMaterial.dispose(),null!==this._equirectMaterial&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){null!==this._blurMaterial&&this._blurMaterial.dispose(),null!==this._pingPongRenderTarget&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Pi),e.scissorTest=!1,Ni(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===M||e.mapping===S?this._setSize(0===e.image.length?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Pi=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:D,minFilter:D,generateMipmaps:!1,type:B,format:H,colorSpace:Q,depthBuffer:!1},i=Ii(e,t,n);if(null===this._pingPongRenderTarget||this._pingPongRenderTarget.width!==e||this._pingPongRenderTarget.height!==t){null!==this._pingPongRenderTarget&&this._dispose(),this._pingPongRenderTarget=Ii(e,t,n);const{_lodMax:i}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=function(e){const t=[],n=[],i=[];let r=e;const a=e-4+1+Ti.length;for(let s=0;s<a;s++){const a=Math.pow(2,r);n.push(a);let o=1/a;s>e-4?o=Ti[s-e+4-1]:0===s&&(o=0),i.push(o);const c=1/(a-2),l=-c,u=1+c,d=[l,l,u,l,u,u,l,l,u,u,l,u],h=6,f=6,p=3,_=2,m=1,g=new Float32Array(p*f*h),b=new Float32Array(_*f*h),v=new Float32Array(m*f*h);for(let e=0;e<h;e++){const t=e%3*2/3-1,n=e>2?0:-1,i=[t,n,0,t+2/3,n,0,t+2/3,n+1,0,t,n,0,t+2/3,n+1,0,t,n+1,0];g.set(i,p*f*e),b.set(d,_*f*e);const r=[e,e,e,e,e,e];v.set(r,m*f*e)}const x=new An;x.setAttribute("position",new mn(g,p)),x.setAttribute("uv",new mn(b,_)),x.setAttribute("faceIndex",new mn(v,m)),t.push(x),r>4&&r--}return{lodPlanes:t,sizeLods:n,sigmas:i}}(i)),this._blurMaterial=function(e,t,n){const i=new Float32Array(20),r=new We(0,1,0);return new $n({name:"SphericalGaussianBlur",defines:{n:20,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/n,CUBEUV_MAX_MIP:`${e}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:r}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}(i,e,t)}return i}_compileMaterial(e){const t=new Xn(this._lodPlanes[0],e);this._renderer.compile(t,Ai)}_sceneToCubeUV(e,t,n,i){const r=new ei(90,1,t,n),a=[1,-1,1,1,1,1],s=[1,1,1,-1,-1,-1],o=this._renderer,c=o.autoClear,l=o.toneMapping;o.getClearColor(Ri),o.toneMapping=0,o.autoClear=!1;const u=new fn({name:"PMREM.Background",side:1,depthWrite:!1,depthTest:!1}),d=new Xn(new qn,u);let h=!1;const f=e.background;f?f.isColor&&(u.color.copy(f),e.background=null,h=!0):(u.color.copy(Ri),h=!0);for(let t=0;t<6;t++){const n=t%3;0===n?(r.up.set(0,a[t],0),r.lookAt(s[t],0,0)):1===n?(r.up.set(0,0,a[t]),r.lookAt(0,s[t],0)):(r.up.set(0,a[t],0),r.lookAt(0,0,s[t]));const c=this._cubeSize;Ni(i,n*c,t>2?c:0,c,c),o.setRenderTarget(i),h&&o.render(d,r),o.render(e,r)}d.geometry.dispose(),d.material.dispose(),o.toneMapping=l,o.autoClear=c,e.background=f}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===M||e.mapping===S;i?(null===this._cubemapMaterial&&(this._cubemapMaterial=Fi()),this._cubemapMaterial.uniforms.flipEnvMap.value=!1===e.isRenderTargetTexture?-1:1):null===this._equirectMaterial&&(this._equirectMaterial=Oi());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new Xn(this._lodPlanes[0],r);r.uniforms.envMap.value=e;const s=this._cubeSize;Ni(t,0,0,3*s,2*s),n.setRenderTarget(t),n.render(a,Ai)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let t=1;t<this._lodPlanes.length;t++){const n=Math.sqrt(this._sigmas[t]*this._sigmas[t]-this._sigmas[t-1]*this._sigmas[t-1]),i=Di[(t-1)%Di.length];this._blur(e,t-1,t,n,i)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,s){const o=this._renderer,c=this._blurMaterial;"latitudinal"!==a&&"longitudinal"!==a&&console.error("blur direction must be either latitudinal or longitudinal!");const l=new Xn(this._lodPlanes[i],c),u=c.uniforms,d=this._sizeLods[n]-1,h=isFinite(r)?Math.PI/(2*d):2*Math.PI/39,f=r/h,p=isFinite(r)?1+Math.floor(3*f):20;p>20&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${p} samples when the maximum is set to 20`);const _=[];let m=0;for(let e=0;e<20;++e){const t=e/f,n=Math.exp(-t*t/2);_.push(n),0===e?m+=n:e<p&&(m+=2*n)}for(let e=0;e<_.length;e++)_[e]=_[e]/m;u.envMap.value=e.texture,u.samples.value=p,u.weights.value=_,u.latitudinal.value="latitudinal"===a,s&&(u.poleAxis.value=s);const{_lodMax:g}=this;u.dTheta.value=h,u.mipInt.value=g-n;const b=this._sizeLods[i];Ni(t,3*b*(i>g-4?i-g+4:0),4*(this._cubeSize-b),3*b,2*b),o.setRenderTarget(t),o.render(l,Ai)}}function Ii(e,t,n){const i=new He(e,t,n);return i.texture.mapping=E,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Ni(e,t,n,i,r){e.viewport.set(t,n,i,r),e.scissor.set(t,n,i,r)}function Oi(){return new $n({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tgl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Fi(){return new $n({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:"\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t",fragmentShader:"\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tuniform float flipEnvMap;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );\n\n\t\t\t}\n\t\t",blending:0,depthTest:!1,depthWrite:!1})}function Bi(e){let t=new WeakMap,n=null;function i(e){const n=e.target;n.removeEventListener("dispose",i);const r=t.get(n);void 0!==r&&(t.delete(n),r.dispose())}return{get:function(r){if(r&&r.isTexture){const a=r.mapping,s=303===a||304===a,o=a===M||a===S;if(s||o){if(r.isRenderTargetTexture&&!0===r.needsPMREMUpdate){r.needsPMREMUpdate=!1;let i=t.get(r);return null===n&&(n=new Ui(e)),i=s?n.fromEquirectangular(r,i):n.fromCubemap(r,i),t.set(r,i),i.texture}if(t.has(r))return t.get(r).texture;{const a=r.image;if(s&&a&&a.height>0||o&&a&&function(e){let t=0;for(let n=0;n<6;n++)void 0!==e[n]&&t++;return 6===t}(a)){null===n&&(n=new Ui(e));const a=s?n.fromEquirectangular(r):n.fromCubemap(r);return t.set(r,a),r.addEventListener("dispose",i),a.texture}return null}}}return r},dispose:function(){t=new WeakMap,null!==n&&(n.dispose(),n=null)}}}function zi(e){const t={};function n(n){if(void 0!==t[n])return t[n];let i;switch(n){case"WEBGL_depth_texture":i=e.getExtension("WEBGL_depth_texture")||e.getExtension("MOZ_WEBGL_depth_texture")||e.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=e.getExtension("EXT_texture_filter_anisotropic")||e.getExtension("MOZ_EXT_texture_filter_anisotropic")||e.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=e.getExtension("WEBGL_compressed_texture_s3tc")||e.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=e.getExtension("WEBGL_compressed_texture_pvrtc")||e.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=e.getExtension(n)}return t[n]=i,i}return{has:function(e){return null!==n(e)},init:function(e){e.isWebGL2?n("EXT_color_buffer_float"):(n("WEBGL_depth_texture"),n("OES_texture_float"),n("OES_texture_half_float"),n("OES_texture_half_float_linear"),n("OES_standard_derivatives"),n("OES_element_index_uint"),n("OES_vertex_array_object"),n("ANGLE_instanced_arrays")),n("OES_texture_float_linear"),n("EXT_color_buffer_half_float"),n("WEBGL_multisampled_render_to_texture")},get:function(e){const t=n(e);return null===t&&console.warn("THREE.WebGLRenderer: "+e+" extension not supported."),t}}}function Hi(e,t,n,i){const r={},a=new WeakMap;function s(e){const o=e.target;null!==o.index&&t.remove(o.index);for(const e in o.attributes)t.remove(o.attributes[e]);o.removeEventListener("dispose",s),delete r[o.id];const c=a.get(o);c&&(t.remove(c),a.delete(o)),i.releaseStatesOfGeometry(o),!0===o.isInstancedBufferGeometry&&delete o._maxInstanceCount,n.memory.geometries--}function o(e){const n=[],i=e.index,r=e.attributes.position;let s=0;if(null!==i){const e=i.array;s=i.version;for(let t=0,i=e.length;t<i;t+=3){const i=e[t+0],r=e[t+1],a=e[t+2];n.push(i,r,r,a,a,i)}}else{const e=r.array;s=r.version;for(let t=0,i=e.length/3-1;t<i;t+=3){const e=t+0,i=t+1,r=t+2;n.push(e,i,i,r,r,e)}}const o=new(ye(n)?bn:gn)(n,1);o.version=s;const c=a.get(e);c&&t.remove(c),a.set(e,o)}return{get:function(e,t){return!0===r[t.id]||(t.addEventListener("dispose",s),r[t.id]=!0,n.memory.geometries++),t},update:function(n){const i=n.attributes;for(const n in i)t.update(i[n],e.ARRAY_BUFFER);const r=n.morphAttributes;for(const n in r){const i=r[n];for(let n=0,r=i.length;n<r;n++)t.update(i[n],e.ARRAY_BUFFER)}},getWireframeAttribute:function(e){const t=a.get(e);if(t){const n=e.index;null!==n&&t.version<n.version&&o(e)}else o(e);return a.get(e)}}}function Gi(e,t,n,i){const r=i.isWebGL2;let a,s,o;this.setMode=function(e){a=e},this.setIndex=function(e){s=e.type,o=e.bytesPerElement},this.render=function(t,i){e.drawElements(a,i,s,t*o),n.update(i,a,1)},this.renderInstances=function(i,c,l){if(0===l)return;let u,d;if(r)u=e,d="drawElementsInstanced";else if(u=t.get("ANGLE_instanced_arrays"),d="drawElementsInstancedANGLE",null===u)return void console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");u[d](a,c,s,i*o,l),n.update(c,a,l)}}function ki(e){const t={frame:0,calls:0,triangles:0,points:0,lines:0};return{memory:{geometries:0,textures:0},render:t,programs:null,autoReset:!0,reset:function(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0},update:function(n,i,r){switch(t.calls++,i){case e.TRIANGLES:t.triangles+=r*(n/3);break;case e.LINES:t.lines+=r*(n/2);break;case e.LINE_STRIP:t.lines+=r*(n-1);break;case e.LINE_LOOP:t.lines+=r*n;break;case e.POINTS:t.points+=r*n;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",i)}}}}function Vi(e,t){return e[0]-t[0]}function Wi(e,t){return Math.abs(t[1])-Math.abs(e[1])}function Xi(e,t,n){const i={},r=new Float32Array(8),a=new WeakMap,s=new ze,o=[];for(let e=0;e<8;e++)o[e]=[e,0];return{update:function(c,l,u){const d=c.morphTargetInfluences;if(!0===t.isWebGL2){const h=l.morphAttributes.position||l.morphAttributes.normal||l.morphAttributes.color,f=void 0!==h?h.length:0;let p=a.get(l);if(void 0===p||p.count!==f){void 0!==p&&p.texture.dispose();const g=void 0!==l.morphAttributes.position,b=void 0!==l.morphAttributes.normal,v=void 0!==l.morphAttributes.color,x=l.morphAttributes.position||[],w=l.morphAttributes.normal||[],y=l.morphAttributes.color||[];let M=0;!0===g&&(M=1),!0===b&&(M=2),!0===v&&(M=3);let S=l.attributes.position.count*M,E=1;S>t.maxTextureSize&&(E=Math.ceil(S/t.maxTextureSize),S=t.maxTextureSize);const T=new Float32Array(S*E*4*f),A=new Ge(T,S,E,f);A.type=F,A.needsUpdate=!0;const R=4*M;for(let C=0;C<f;C++){const L=x[C],D=w[C],U=y[C],I=S*E*4*C;for(let N=0;N<L.count;N++){const O=N*R;!0===g&&(s.fromBufferAttribute(L,N),T[I+O+0]=s.x,T[I+O+1]=s.y,T[I+O+2]=s.z,T[I+O+3]=0),!0===b&&(s.fromBufferAttribute(D,N),T[I+O+4]=s.x,T[I+O+5]=s.y,T[I+O+6]=s.z,T[I+O+7]=0),!0===v&&(s.fromBufferAttribute(U,N),T[I+O+8]=s.x,T[I+O+9]=s.y,T[I+O+10]=s.z,T[I+O+11]=4===U.itemSize?s.w:1)}}function P(){A.dispose(),a.delete(l),l.removeEventListener("dispose",P)}p={count:f,texture:A,size:new ve(S,E)},a.set(l,p),l.addEventListener("dispose",P)}let _=0;for(let B=0;B<d.length;B++)_+=d[B];const m=l.morphTargetsRelative?1:1-_;u.getUniforms().setValue(e,"morphTargetBaseInfluence",m),u.getUniforms().setValue(e,"morphTargetInfluences",d),u.getUniforms().setValue(e,"morphTargetsTexture",p.texture,n),u.getUniforms().setValue(e,"morphTargetsTextureSize",p.size)}else{const z=void 0===d?0:d.length;let H=i[l.id];if(void 0===H||H.length!==z){H=[];for(let X=0;X<z;X++)H[X]=[X,0];i[l.id]=H}for(let j=0;j<z;j++){const q=H[j];q[0]=j,q[1]=d[j]}H.sort(Wi);for(let Y=0;Y<8;Y++)Y<z&&H[Y][1]?(o[Y][0]=H[Y][0],o[Y][1]=H[Y][1]):(o[Y][0]=Number.MAX_SAFE_INTEGER,o[Y][1]=0);o.sort(Vi);const G=l.morphAttributes.position,k=l.morphAttributes.normal;let V=0;for(let K=0;K<8;K++){const Z=o[K],J=Z[0],$=Z[1];J!==Number.MAX_SAFE_INTEGER&&$?(G&&l.getAttribute("morphTarget"+K)!==G[J]&&l.setAttribute("morphTarget"+K,G[J]),k&&l.getAttribute("morphNormal"+K)!==k[J]&&l.setAttribute("morphNormal"+K,k[J]),r[K]=$,V+=$):(G&&!0===l.hasAttribute("morphTarget"+K)&&l.deleteAttribute("morphTarget"+K),k&&!0===l.hasAttribute("morphNormal"+K)&&l.deleteAttribute("morphNormal"+K),r[K]=0)}const W=l.morphTargetsRelative?1:1-V;u.getUniforms().setValue(e,"morphTargetBaseInfluence",W),u.getUniforms().setValue(e,"morphTargetInfluences",r)}}}}function ji(e,t,n,i){let r=new WeakMap;function a(e){const t=e.target;t.removeEventListener("dispose",a),n.remove(t.instanceMatrix),null!==t.instanceColor&&n.remove(t.instanceColor)}return{update:function(s){const o=i.render.frame,c=s.geometry,l=t.get(s,c);return r.get(l)!==o&&(t.update(l),r.set(l,o)),s.isInstancedMesh&&(!1===s.hasEventListener("dispose",a)&&s.addEventListener("dispose",a),n.update(s.instanceMatrix,e.ARRAY_BUFFER),null!==s.instanceColor&&n.update(s.instanceColor,e.ARRAY_BUFFER)),l},dispose:function(){r=new WeakMap}}}const qi=new Be,Yi=new Ge,Ki=new ke,Zi=new ii,Ji=[],$i=[],Qi=new Float32Array(16),er=new Float32Array(9),tr=new Float32Array(4);function nr(e,t,n){const i=e[0];if(i<=0||i>0)return e;const r=t*n;let a=Ji[r];if(void 0===a&&(a=new Float32Array(r),Ji[r]=a),0!==t){i.toArray(a,0);for(let i=1,r=0;i!==t;++i)r+=n,e[i].toArray(a,r)}return a}function ir(e,t){if(e.length!==t.length)return!1;for(let n=0,i=e.length;n<i;n++)if(e[n]!==t[n])return!1;return!0}function rr(e,t){for(let n=0,i=t.length;n<i;n++)e[n]=t[n]}function ar(e,t){let n=$i[t];void 0===n&&(n=new Int32Array(t),$i[t]=n);for(let i=0;i!==t;++i)n[i]=e.allocateTextureUnit();return n}function sr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1f(this.addr,t),n[0]=t)}function or(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2f(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(ir(n,t))return;e.uniform2fv(this.addr,t),rr(n,t)}}function cr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3f(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else if(void 0!==t.r)n[0]===t.r&&n[1]===t.g&&n[2]===t.b||(e.uniform3f(this.addr,t.r,t.g,t.b),n[0]=t.r,n[1]=t.g,n[2]=t.b);else{if(ir(n,t))return;e.uniform3fv(this.addr,t),rr(n,t)}}function lr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4f(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(ir(n,t))return;e.uniform4fv(this.addr,t),rr(n,t)}}function ur(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(ir(n,t))return;e.uniformMatrix2fv(this.addr,!1,t),rr(n,t)}else{if(ir(n,i))return;tr.set(i),e.uniformMatrix2fv(this.addr,!1,tr),rr(n,i)}}function dr(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(ir(n,t))return;e.uniformMatrix3fv(this.addr,!1,t),rr(n,t)}else{if(ir(n,i))return;er.set(i),e.uniformMatrix3fv(this.addr,!1,er),rr(n,i)}}function hr(e,t){const n=this.cache,i=t.elements;if(void 0===i){if(ir(n,t))return;e.uniformMatrix4fv(this.addr,!1,t),rr(n,t)}else{if(ir(n,i))return;Qi.set(i),e.uniformMatrix4fv(this.addr,!1,Qi),rr(n,i)}}function fr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1i(this.addr,t),n[0]=t)}function pr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2i(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(ir(n,t))return;e.uniform2iv(this.addr,t),rr(n,t)}}function _r(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3i(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(ir(n,t))return;e.uniform3iv(this.addr,t),rr(n,t)}}function mr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4i(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(ir(n,t))return;e.uniform4iv(this.addr,t),rr(n,t)}}function gr(e,t){const n=this.cache;n[0]!==t&&(e.uniform1ui(this.addr,t),n[0]=t)}function br(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y||(e.uniform2ui(this.addr,t.x,t.y),n[0]=t.x,n[1]=t.y);else{if(ir(n,t))return;e.uniform2uiv(this.addr,t),rr(n,t)}}function vr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z||(e.uniform3ui(this.addr,t.x,t.y,t.z),n[0]=t.x,n[1]=t.y,n[2]=t.z);else{if(ir(n,t))return;e.uniform3uiv(this.addr,t),rr(n,t)}}function xr(e,t){const n=this.cache;if(void 0!==t.x)n[0]===t.x&&n[1]===t.y&&n[2]===t.z&&n[3]===t.w||(e.uniform4ui(this.addr,t.x,t.y,t.z,t.w),n[0]=t.x,n[1]=t.y,n[2]=t.z,n[3]=t.w);else{if(ir(n,t))return;e.uniform4uiv(this.addr,t),rr(n,t)}}function wr(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2D(t||qi,r)}function yr(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture3D(t||Ki,r)}function Mr(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTextureCube(t||Zi,r)}function Sr(e,t,n){const i=this.cache,r=n.allocateTextureUnit();i[0]!==r&&(e.uniform1i(this.addr,r),i[0]=r),n.setTexture2DArray(t||Yi,r)}function Er(e,t){e.uniform1fv(this.addr,t)}function Tr(e,t){const n=nr(t,this.size,2);e.uniform2fv(this.addr,n)}function Ar(e,t){const n=nr(t,this.size,3);e.uniform3fv(this.addr,n)}function Rr(e,t){const n=nr(t,this.size,4);e.uniform4fv(this.addr,n)}function Pr(e,t){const n=nr(t,this.size,4);e.uniformMatrix2fv(this.addr,!1,n)}function Cr(e,t){const n=nr(t,this.size,9);e.uniformMatrix3fv(this.addr,!1,n)}function Lr(e,t){const n=nr(t,this.size,16);e.uniformMatrix4fv(this.addr,!1,n)}function Dr(e,t){e.uniform1iv(this.addr,t)}function Ur(e,t){e.uniform2iv(this.addr,t)}function Ir(e,t){e.uniform3iv(this.addr,t)}function Nr(e,t){e.uniform4iv(this.addr,t)}function Or(e,t){e.uniform1uiv(this.addr,t)}function Fr(e,t){e.uniform2uiv(this.addr,t)}function Br(e,t){e.uniform3uiv(this.addr,t)}function zr(e,t){e.uniform4uiv(this.addr,t)}function Hr(e,t,n){const i=this.cache,r=t.length,a=ar(n,r);ir(i,a)||(e.uniform1iv(this.addr,a),rr(i,a));for(let e=0;e!==r;++e)n.setTexture2D(t[e]||qi,a[e])}function Gr(e,t,n){const i=this.cache,r=t.length,a=ar(n,r);ir(i,a)||(e.uniform1iv(this.addr,a),rr(i,a));for(let e=0;e!==r;++e)n.setTexture3D(t[e]||Ki,a[e])}function kr(e,t,n){const i=this.cache,r=t.length,a=ar(n,r);ir(i,a)||(e.uniform1iv(this.addr,a),rr(i,a));for(let e=0;e!==r;++e)n.setTextureCube(t[e]||Zi,a[e])}function Vr(e,t,n){const i=this.cache,r=t.length,a=ar(n,r);ir(i,a)||(e.uniform1iv(this.addr,a),rr(i,a));for(let e=0;e!==r;++e)n.setTexture2DArray(t[e]||Yi,a[e])}class Wr{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=function(e){switch(e){case 5126:return sr;case 35664:return or;case 35665:return cr;case 35666:return lr;case 35674:return ur;case 35675:return dr;case 35676:return hr;case 5124:case 35670:return fr;case 35667:case 35671:return pr;case 35668:case 35672:return _r;case 35669:case 35673:return mr;case 5125:return gr;case 36294:return br;case 36295:return vr;case 36296:return xr;case 35678:case 36198:case 36298:case 36306:case 35682:return wr;case 35679:case 36299:case 36307:return yr;case 35680:case 36300:case 36308:case 36293:return Mr;case 36289:case 36303:case 36311:case 36292:return Sr}}(t.type)}}class Xr{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=function(e){switch(e){case 5126:return Er;case 35664:return Tr;case 35665:return Ar;case 35666:return Rr;case 35674:return Pr;case 35675:return Cr;case 35676:return Lr;case 5124:case 35670:return Dr;case 35667:case 35671:return Ur;case 35668:case 35672:return Ir;case 35669:case 35673:return Nr;case 5125:return Or;case 36294:return Fr;case 36295:return Br;case 36296:return zr;case 35678:case 36198:case 36298:case 36306:case 35682:return Hr;case 35679:case 36299:case 36307:return Gr;case 35680:case 36300:case 36308:case 36293:return kr;case 36289:case 36303:case 36311:case 36292:return Vr}}(t.type)}}class jr{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const a=i[r];a.setValue(e,t[a.id],n)}}}const qr=/(\w+)(\])?(\[|\.)?/g;function Yr(e,t){e.seq.push(t),e.map[t.id]=t}function Kr(e,t,n){const i=e.name,r=i.length;for(qr.lastIndex=0;;){const a=qr.exec(i),s=qr.lastIndex;let o=a[1];const c="]"===a[2],l=a[3];if(c&&(o|=0),void 0===l||"["===l&&s+2===r){Yr(n,void 0===l?new Wr(o,e,t):new Xr(o,e,t));break}{let e=n.map[o];void 0===e&&(e=new jr(o),Yr(n,e)),n=e}}}class Zr{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,e.ACTIVE_UNIFORMS);for(let i=0;i<n;++i){const n=e.getActiveUniform(t,i);Kr(n,e.getUniformLocation(t,n.name),this)}}setValue(e,t,n,i){const r=this.map[t];void 0!==r&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];void 0!==i&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const a=t[r],s=n[a.id];!1!==s.needsUpdate&&a.setValue(e,s.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const r=e[i];r.id in t&&n.push(r)}return n}}function Jr(e,t,n){const i=e.createShader(t);return e.shaderSource(i,n),e.compileShader(i),i}let $r=0;function Qr(e,t,n){const i=e.getShaderParameter(t,e.COMPILE_STATUS),r=e.getShaderInfoLog(t).trim();if(i&&""===r)return"";const a=/ERROR: 0:(\d+)/.exec(r);if(a){const i=parseInt(a[1]);return n.toUpperCase()+"\n\n"+r+"\n\n"+function(e,t){const n=e.split("\n"),i=[],r=Math.max(t-6,0),a=Math.min(t+6,n.length);for(let e=r;e<a;e++){const r=e+1;i.push(`${r===t?">":" "} ${r}: ${n[e]}`)}return i.join("\n")}(e.getShaderSource(t),i)}return r}function ea(e,t){const n=function(e){switch(e){case Q:return["Linear","( value )"];case $:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",e),["Linear","( value )"]}}(t);return"vec4 "+e+"( vec4 value ) { return LinearTo"+n[0]+n[1]+"; }"}function ta(e,t){let n;switch(t){case 1:n="Linear";break;case 2:n="Reinhard";break;case 3:n="OptimizedCineon";break;case 4:n="ACESFilmic";break;case 5:n="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),n="Linear"}return"vec3 "+e+"( vec3 color ) { return "+n+"ToneMapping( color ); }"}function na(e){return""!==e}function ia(e,t){const n=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return e.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,n).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function ra(e,t){return e.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const aa=/^[ \t]*#include +<([\w\d./]+)>/gm;function sa(e){return e.replace(aa,oa)}function oa(e,t){const n=_i[t];if(void 0===n)throw new Error("Can not resolve #include <"+t+">");return sa(n)}const ca=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function la(e){return e.replace(ca,ua)}function ua(e,t,n,i){let r="";for(let e=parseInt(t);e<parseInt(n);e++)r+=i.replace(/\[\s*i\s*\]/g,"[ "+e+" ]").replace(/UNROLLED_LOOP_INDEX/g,e);return r}function da(e){let t="precision "+e.precision+" float;\nprecision "+e.precision+" int;";return"highp"===e.precision?t+="\n#define HIGH_PRECISION":"mediump"===e.precision?t+="\n#define MEDIUM_PRECISION":"lowp"===e.precision&&(t+="\n#define LOW_PRECISION"),t}function ha(e,t,n,i){const r=e.getContext(),a=n.defines;let s=n.vertexShader,o=n.fragmentShader;const c=function(e){let t="SHADOWMAP_TYPE_BASIC";return 1===e.shadowMapType?t="SHADOWMAP_TYPE_PCF":2===e.shadowMapType?t="SHADOWMAP_TYPE_PCF_SOFT":3===e.shadowMapType&&(t="SHADOWMAP_TYPE_VSM"),t}(n),l=function(e){let t="ENVMAP_TYPE_CUBE";if(e.envMap)switch(e.envMapMode){case M:case S:t="ENVMAP_TYPE_CUBE";break;case E:t="ENVMAP_TYPE_CUBE_UV"}return t}(n),u=function(e){let t="ENVMAP_MODE_REFLECTION";return e.envMap&&e.envMapMode===S&&(t="ENVMAP_MODE_REFRACTION"),t}(n),d=function(e){let t="ENVMAP_BLENDING_NONE";if(e.envMap)switch(e.combine){case 0:t="ENVMAP_BLENDING_MULTIPLY";break;case 1:t="ENVMAP_BLENDING_MIX";break;case 2:t="ENVMAP_BLENDING_ADD"}return t}(n),h=function(e){const t=e.envMapCubeUVHeight;if(null===t)return null;const n=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,n),112)),texelHeight:i,maxMip:n}}(n),f=n.isWebGL2?"":function(e){return[e.extensionDerivatives||e.envMapCubeUVHeight||e.bumpMap||e.normalMapTangentSpace||e.clearcoatNormalMap||e.flatShading||"physical"===e.shaderID?"#extension GL_OES_standard_derivatives : enable":"",(e.extensionFragDepth||e.logarithmicDepthBuffer)&&e.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",e.extensionDrawBuffers&&e.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(e.extensionShaderTextureLOD||e.envMap||e.transmission)&&e.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(na).join("\n")}(n),p=function(e){const t=[];for(const n in e){const i=e[n];!1!==i&&t.push("#define "+n+" "+i)}return t.join("\n")}(a),_=r.createProgram();let m,g,b=n.glslVersion?"#version "+n.glslVersion+"\n":"";n.isRawShaderMaterial?(m=[p].filter(na).join("\n"),m.length>0&&(m+="\n"),g=[f,p].filter(na).join("\n"),g.length>0&&(g+="\n")):(m=[da(n),"#define SHADER_NAME "+n.shaderName,p,n.instancing?"#define USE_INSTANCING":"",n.instancingColor?"#define USE_INSTANCING_COLOR":"",n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+u:"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.displacementMap?"#define USE_DISPLACEMENTMAP":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.mapUv?"#define MAP_UV "+n.mapUv:"",n.alphaMapUv?"#define ALPHAMAP_UV "+n.alphaMapUv:"",n.lightMapUv?"#define LIGHTMAP_UV "+n.lightMapUv:"",n.aoMapUv?"#define AOMAP_UV "+n.aoMapUv:"",n.emissiveMapUv?"#define EMISSIVEMAP_UV "+n.emissiveMapUv:"",n.bumpMapUv?"#define BUMPMAP_UV "+n.bumpMapUv:"",n.normalMapUv?"#define NORMALMAP_UV "+n.normalMapUv:"",n.displacementMapUv?"#define DISPLACEMENTMAP_UV "+n.displacementMapUv:"",n.metalnessMapUv?"#define METALNESSMAP_UV "+n.metalnessMapUv:"",n.roughnessMapUv?"#define ROUGHNESSMAP_UV "+n.roughnessMapUv:"",n.clearcoatMapUv?"#define CLEARCOATMAP_UV "+n.clearcoatMapUv:"",n.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+n.clearcoatNormalMapUv:"",n.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+n.clearcoatRoughnessMapUv:"",n.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+n.iridescenceMapUv:"",n.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+n.iridescenceThicknessMapUv:"",n.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+n.sheenColorMapUv:"",n.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+n.sheenRoughnessMapUv:"",n.specularMapUv?"#define SPECULARMAP_UV "+n.specularMapUv:"",n.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+n.specularColorMapUv:"",n.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+n.specularIntensityMapUv:"",n.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+n.transmissionMapUv:"",n.thicknessMapUv?"#define THICKNESSMAP_UV "+n.thicknessMapUv:"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.flatShading?"#define FLAT_SHADED":"",n.skinning?"#define USE_SKINNING":"",n.morphTargets?"#define USE_MORPHTARGETS":"",n.morphNormals&&!1===n.flatShading?"#define USE_MORPHNORMALS":"",n.morphColors&&n.isWebGL2?"#define USE_MORPHCOLORS":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+n.morphTextureStride:"",n.morphTargetsCount>0&&n.isWebGL2?"#define MORPHTARGETS_COUNT "+n.morphTargetsCount:"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.sizeAttenuation?"#define USE_SIZEATTENUATION":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","\tattribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","\tattribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","\tattribute vec2 uv1;","#endif","#ifdef USE_UV2","\tattribute vec2 uv2;","#endif","#ifdef USE_UV3","\tattribute vec2 uv3;","#endif","#ifdef USE_TANGENT","\tattribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","\tattribute vec4 color;","#elif defined( USE_COLOR )","\tattribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","\tattribute vec3 morphTarget0;","\tattribute vec3 morphTarget1;","\tattribute vec3 morphTarget2;","\tattribute vec3 morphTarget3;","\t#ifdef USE_MORPHNORMALS","\t\tattribute vec3 morphNormal0;","\t\tattribute vec3 morphNormal1;","\t\tattribute vec3 morphNormal2;","\t\tattribute vec3 morphNormal3;","\t#else","\t\tattribute vec3 morphTarget4;","\t\tattribute vec3 morphTarget5;","\t\tattribute vec3 morphTarget6;","\t\tattribute vec3 morphTarget7;","\t#endif","#endif","#ifdef USE_SKINNING","\tattribute vec4 skinIndex;","\tattribute vec4 skinWeight;","#endif","\n"].filter(na).join("\n"),g=[f,da(n),"#define SHADER_NAME "+n.shaderName,p,n.useFog&&n.fog?"#define USE_FOG":"",n.useFog&&n.fogExp2?"#define FOG_EXP2":"",n.map?"#define USE_MAP":"",n.matcap?"#define USE_MATCAP":"",n.envMap?"#define USE_ENVMAP":"",n.envMap?"#define "+l:"",n.envMap?"#define "+u:"",n.envMap?"#define "+d:"",h?"#define CUBEUV_TEXEL_WIDTH "+h.texelWidth:"",h?"#define CUBEUV_TEXEL_HEIGHT "+h.texelHeight:"",h?"#define CUBEUV_MAX_MIP "+h.maxMip+".0":"",n.lightMap?"#define USE_LIGHTMAP":"",n.aoMap?"#define USE_AOMAP":"",n.bumpMap?"#define USE_BUMPMAP":"",n.normalMap?"#define USE_NORMALMAP":"",n.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",n.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",n.emissiveMap?"#define USE_EMISSIVEMAP":"",n.clearcoat?"#define USE_CLEARCOAT":"",n.clearcoatMap?"#define USE_CLEARCOATMAP":"",n.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",n.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",n.iridescence?"#define USE_IRIDESCENCE":"",n.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",n.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",n.specularMap?"#define USE_SPECULARMAP":"",n.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",n.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",n.roughnessMap?"#define USE_ROUGHNESSMAP":"",n.metalnessMap?"#define USE_METALNESSMAP":"",n.alphaMap?"#define USE_ALPHAMAP":"",n.alphaTest?"#define USE_ALPHATEST":"",n.sheen?"#define USE_SHEEN":"",n.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",n.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",n.transmission?"#define USE_TRANSMISSION":"",n.transmissionMap?"#define USE_TRANSMISSIONMAP":"",n.thicknessMap?"#define USE_THICKNESSMAP":"",n.vertexTangents?"#define USE_TANGENT":"",n.vertexColors||n.instancingColor?"#define USE_COLOR":"",n.vertexAlphas?"#define USE_COLOR_ALPHA":"",n.vertexUv1s?"#define USE_UV1":"",n.vertexUv2s?"#define USE_UV2":"",n.vertexUv3s?"#define USE_UV3":"",n.pointsUvs?"#define USE_POINTS_UV":"",n.gradientMap?"#define USE_GRADIENTMAP":"",n.flatShading?"#define FLAT_SHADED":"",n.doubleSided?"#define DOUBLE_SIDED":"",n.flipSided?"#define FLIP_SIDED":"",n.shadowMapEnabled?"#define USE_SHADOWMAP":"",n.shadowMapEnabled?"#define "+c:"",n.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",n.useLegacyLights?"#define LEGACY_LIGHTS":"",n.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",n.logarithmicDepthBuffer&&n.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",0!==n.toneMapping?"#define TONE_MAPPING":"",0!==n.toneMapping?_i.tonemapping_pars_fragment:"",0!==n.toneMapping?ta("toneMapping",n.toneMapping):"",n.dithering?"#define DITHERING":"",n.opaque?"#define OPAQUE":"",_i.encodings_pars_fragment,ea("linearToOutputTexel",n.outputColorSpace),n.useDepthPacking?"#define DEPTH_PACKING "+n.depthPacking:"","\n"].filter(na).join("\n")),s=sa(s),s=ia(s,n),s=ra(s,n),o=sa(o),o=ia(o,n),o=ra(o,n),s=la(s),o=la(o),n.isWebGL2&&!0!==n.isRawShaderMaterial&&(b="#version 300 es\n",m=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join("\n")+"\n"+m,g=["#define varying in",n.glslVersion===ie?"":"layout(location = 0) out highp vec4 pc_fragColor;",n.glslVersion===ie?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join("\n")+"\n"+g);const v=b+m+s,x=b+g+o,w=Jr(r,r.VERTEX_SHADER,v),y=Jr(r,r.FRAGMENT_SHADER,x);if(r.attachShader(_,w),r.attachShader(_,y),void 0!==n.index0AttributeName?r.bindAttribLocation(_,0,n.index0AttributeName):!0===n.morphTargets&&r.bindAttribLocation(_,0,"position"),r.linkProgram(_),e.debug.checkShaderErrors){const t=r.getProgramInfoLog(_).trim(),n=r.getShaderInfoLog(w).trim(),i=r.getShaderInfoLog(y).trim();let a=!0,s=!0;if(!1===r.getProgramParameter(_,r.LINK_STATUS))if(a=!1,"function"==typeof e.debug.onShaderError)e.debug.onShaderError(r,_,w,y);else{const e=Qr(r,w,"vertex"),n=Qr(r,y,"fragment");console.error("THREE.WebGLProgram: Shader Error "+r.getError()+" - VALIDATE_STATUS "+r.getProgramParameter(_,r.VALIDATE_STATUS)+"\n\nProgram Info Log: "+t+"\n"+e+"\n"+n)}else""!==t?console.warn("THREE.WebGLProgram: Program Info Log:",t):""!==n&&""!==i||(s=!1);s&&(this.diagnostics={runnable:a,programLog:t,vertexShader:{log:n,prefix:m},fragmentShader:{log:i,prefix:g}})}let T,A;return r.deleteShader(w),r.deleteShader(y),this.getUniforms=function(){return void 0===T&&(T=new Zr(r,_)),T},this.getAttributes=function(){return void 0===A&&(A=function(e,t){const n={},i=e.getProgramParameter(t,e.ACTIVE_ATTRIBUTES);for(let r=0;r<i;r++){const i=e.getActiveAttrib(t,r),a=i.name;let s=1;i.type===e.FLOAT_MAT2&&(s=2),i.type===e.FLOAT_MAT3&&(s=3),i.type===e.FLOAT_MAT4&&(s=4),n[a]={type:i.type,location:e.getAttribLocation(t,a),locationSize:s}}return n}(r,_)),A},this.destroy=function(){i.releaseStatesOfProgram(this),r.deleteProgram(_),this.program=void 0},this.name=n.shaderName,this.id=$r++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=w,this.fragmentShader=y,this}let fa=0;class pa{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return!1===a.has(i)&&(a.add(i),i.usedTimes++),!1===a.has(r)&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const e of t)e.usedTimes--,0===e.usedTimes&&this.shaderCache.delete(e.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return void 0===n&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return void 0===n&&(n=new _a(e),t.set(e,n)),n}}class _a{constructor(e){this.id=fa++,this.code=e,this.usedTimes=0}}function ma(e,t,n,i,r,a,s){const o=new Lt,l=new pa,u=[],d=r.isWebGL2,h=r.logarithmicDepthBuffer,f=r.vertexTextures;let p=r.precision;const _={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function m(e){return 1===e?"uv1":2===e?"uv2":3===e?"uv3":"uv"}return{getParameters:function(a,o,u,g,b){const v=g.fog,x=b.geometry,w=a.isMeshStandardMaterial?g.environment:null,y=(a.isMeshStandardMaterial?n:t).get(a.envMap||w),M=y&&y.mapping===E?y.image.height:null,S=_[a.type];null!==a.precision&&(p=r.getMaxPrecision(a.precision),p!==a.precision&&console.warn("THREE.WebGLProgram.getParameters:",a.precision,"not supported, using",p,"instead."));const T=x.morphAttributes.position||x.morphAttributes.normal||x.morphAttributes.color,A=void 0!==T?T.length:0;let R,P,C,L,D=0;if(void 0!==x.morphAttributes.position&&(D=1),void 0!==x.morphAttributes.normal&&(D=2),void 0!==x.morphAttributes.color&&(D=3),S){const e=gi[S];R=e.vertexShader,P=e.fragmentShader}else R=a.vertexShader,P=a.fragmentShader,l.update(a),C=l.getVertexShaderID(a),L=l.getFragmentShaderID(a);const U=e.getRenderTarget(),I=!0===b.isInstancedMesh,N=!!a.map,O=!!a.matcap,F=!!y,B=!!a.aoMap,z=!!a.lightMap,H=!!a.bumpMap,G=!!a.normalMap,k=!!a.displacementMap,V=!!a.emissiveMap,W=!!a.metalnessMap,X=!!a.roughnessMap,j=a.clearcoat>0,q=a.iridescence>0,Y=a.sheen>0,K=a.transmission>0,Z=j&&!!a.clearcoatMap,J=j&&!!a.clearcoatNormalMap,$=j&&!!a.clearcoatRoughnessMap,ee=q&&!!a.iridescenceMap,te=q&&!!a.iridescenceThicknessMap,ne=Y&&!!a.sheenColorMap,ie=Y&&!!a.sheenRoughnessMap,re=!!a.specularMap,ae=!!a.specularColorMap,se=!!a.specularIntensityMap,oe=K&&!!a.transmissionMap,ce=K&&!!a.thicknessMap,le=!!a.gradientMap,ue=!!a.alphaMap,de=a.alphaTest>0,he=!!a.extensions,fe=!!x.attributes.uv1,pe=!!x.attributes.uv2,_e=!!x.attributes.uv3;return{isWebGL2:d,shaderID:S,shaderName:a.type,vertexShader:R,fragmentShader:P,defines:a.defines,customVertexShaderID:C,customFragmentShaderID:L,isRawShaderMaterial:!0===a.isRawShaderMaterial,glslVersion:a.glslVersion,precision:p,instancing:I,instancingColor:I&&null!==b.instanceColor,supportsVertexTextures:f,outputColorSpace:null===U?e.outputColorSpace:!0===U.isXRRenderTarget?U.texture.colorSpace:Q,map:N,matcap:O,envMap:F,envMapMode:F&&y.mapping,envMapCubeUVHeight:M,aoMap:B,lightMap:z,bumpMap:H,normalMap:G,displacementMap:f&&k,emissiveMap:V,normalMapObjectSpace:G&&1===a.normalMapType,normalMapTangentSpace:G&&0===a.normalMapType,metalnessMap:W,roughnessMap:X,clearcoat:j,clearcoatMap:Z,clearcoatNormalMap:J,clearcoatRoughnessMap:$,iridescence:q,iridescenceMap:ee,iridescenceThicknessMap:te,sheen:Y,sheenColorMap:ne,sheenRoughnessMap:ie,specularMap:re,specularColorMap:ae,specularIntensityMap:se,transmission:K,transmissionMap:oe,thicknessMap:ce,gradientMap:le,opaque:!1===a.transparent&&1===a.blending,alphaMap:ue,alphaTest:de,combine:a.combine,mapUv:N&&m(a.map.channel),aoMapUv:B&&m(a.aoMap.channel),lightMapUv:z&&m(a.lightMap.channel),bumpMapUv:H&&m(a.bumpMap.channel),normalMapUv:G&&m(a.normalMap.channel),displacementMapUv:k&&m(a.displacementMap.channel),emissiveMapUv:V&&m(a.emissiveMap.channel),metalnessMapUv:W&&m(a.metalnessMap.channel),roughnessMapUv:X&&m(a.roughnessMap.channel),clearcoatMapUv:Z&&m(a.clearcoatMap.channel),clearcoatNormalMapUv:J&&m(a.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:$&&m(a.clearcoatRoughnessMap.channel),iridescenceMapUv:ee&&m(a.iridescenceMap.channel),iridescenceThicknessMapUv:te&&m(a.iridescenceThicknessMap.channel),sheenColorMapUv:ne&&m(a.sheenColorMap.channel),sheenRoughnessMapUv:ie&&m(a.sheenRoughnessMap.channel),specularMapUv:re&&m(a.specularMap.channel),specularColorMapUv:ae&&m(a.specularColorMap.channel),specularIntensityMapUv:se&&m(a.specularIntensityMap.channel),transmissionMapUv:oe&&m(a.transmissionMap.channel),thicknessMapUv:ce&&m(a.thicknessMap.channel),alphaMapUv:ue&&m(a.alphaMap.channel),vertexTangents:G&&!!x.attributes.tangent,vertexColors:a.vertexColors,vertexAlphas:!0===a.vertexColors&&!!x.attributes.color&&4===x.attributes.color.itemSize,vertexUv1s:fe,vertexUv2s:pe,vertexUv3s:_e,pointsUvs:!0===b.isPoints&&!!x.attributes.uv&&(N||ue),fog:!!v,useFog:!0===a.fog,fogExp2:v&&v.isFogExp2,flatShading:!0===a.flatShading,sizeAttenuation:!0===a.sizeAttenuation,logarithmicDepthBuffer:h,skinning:!0===b.isSkinnedMesh,morphTargets:void 0!==x.morphAttributes.position,morphNormals:void 0!==x.morphAttributes.normal,morphColors:void 0!==x.morphAttributes.color,morphTargetsCount:A,morphTextureStride:D,numDirLights:o.directional.length,numPointLights:o.point.length,numSpotLights:o.spot.length,numSpotLightMaps:o.spotLightMap.length,numRectAreaLights:o.rectArea.length,numHemiLights:o.hemi.length,numDirLightShadows:o.directionalShadowMap.length,numPointLightShadows:o.pointShadowMap.length,numSpotLightShadows:o.spotShadowMap.length,numSpotLightShadowsWithMaps:o.numSpotLightShadowsWithMaps,numClippingPlanes:s.numPlanes,numClipIntersection:s.numIntersection,dithering:a.dithering,shadowMapEnabled:e.shadowMap.enabled&&u.length>0,shadowMapType:e.shadowMap.type,toneMapping:a.toneMapped?e.toneMapping:0,useLegacyLights:e.useLegacyLights,premultipliedAlpha:a.premultipliedAlpha,doubleSided:a.side===c,flipSided:1===a.side,useDepthPacking:a.depthPacking>=0,depthPacking:a.depthPacking||0,index0AttributeName:a.index0AttributeName,extensionDerivatives:he&&!0===a.extensions.derivatives,extensionFragDepth:he&&!0===a.extensions.fragDepth,extensionDrawBuffers:he&&!0===a.extensions.drawBuffers,extensionShaderTextureLOD:he&&!0===a.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||i.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||i.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||i.has("EXT_shader_texture_lod"),customProgramCacheKey:a.customProgramCacheKey()}},getProgramCacheKey:function(t){const n=[];if(t.shaderID?n.push(t.shaderID):(n.push(t.customVertexShaderID),n.push(t.customFragmentShaderID)),void 0!==t.defines)for(const e in t.defines)n.push(e),n.push(t.defines[e]);return!1===t.isRawShaderMaterial&&(function(e,t){e.push(t.precision),e.push(t.outputColorSpace),e.push(t.envMapMode),e.push(t.envMapCubeUVHeight),e.push(t.mapUv),e.push(t.alphaMapUv),e.push(t.lightMapUv),e.push(t.aoMapUv),e.push(t.bumpMapUv),e.push(t.normalMapUv),e.push(t.displacementMapUv),e.push(t.emissiveMapUv),e.push(t.metalnessMapUv),e.push(t.roughnessMapUv),e.push(t.clearcoatMapUv),e.push(t.clearcoatNormalMapUv),e.push(t.clearcoatRoughnessMapUv),e.push(t.iridescenceMapUv),e.push(t.iridescenceThicknessMapUv),e.push(t.sheenColorMapUv),e.push(t.sheenRoughnessMapUv),e.push(t.specularMapUv),e.push(t.specularColorMapUv),e.push(t.specularIntensityMapUv),e.push(t.transmissionMapUv),e.push(t.thicknessMapUv),e.push(t.combine),e.push(t.fogExp2),e.push(t.sizeAttenuation),e.push(t.morphTargetsCount),e.push(t.morphAttributeCount),e.push(t.numDirLights),e.push(t.numPointLights),e.push(t.numSpotLights),e.push(t.numSpotLightMaps),e.push(t.numHemiLights),e.push(t.numRectAreaLights),e.push(t.numDirLightShadows),e.push(t.numPointLightShadows),e.push(t.numSpotLightShadows),e.push(t.numSpotLightShadowsWithMaps),e.push(t.shadowMapType),e.push(t.toneMapping),e.push(t.numClippingPlanes),e.push(t.numClipIntersection),e.push(t.depthPacking)}(n,t),function(e,t){o.disableAll(),t.isWebGL2&&o.enable(0),t.supportsVertexTextures&&o.enable(1),t.instancing&&o.enable(2),t.instancingColor&&o.enable(3),t.matcap&&o.enable(4),t.envMap&&o.enable(5),t.normalMapObjectSpace&&o.enable(6),t.normalMapTangentSpace&&o.enable(7),t.clearcoat&&o.enable(8),t.iridescence&&o.enable(9),t.alphaTest&&o.enable(10),t.vertexColors&&o.enable(11),t.vertexAlphas&&o.enable(12),t.vertexUv1s&&o.enable(13),t.vertexUv2s&&o.enable(14),t.vertexUv3s&&o.enable(15),t.vertexTangents&&o.enable(16),e.push(o.mask),o.disableAll(),t.fog&&o.enable(0),t.useFog&&o.enable(1),t.flatShading&&o.enable(2),t.logarithmicDepthBuffer&&o.enable(3),t.skinning&&o.enable(4),t.morphTargets&&o.enable(5),t.morphNormals&&o.enable(6),t.morphColors&&o.enable(7),t.premultipliedAlpha&&o.enable(8),t.shadowMapEnabled&&o.enable(9),t.useLegacyLights&&o.enable(10),t.doubleSided&&o.enable(11),t.flipSided&&o.enable(12),t.useDepthPacking&&o.enable(13),t.dithering&&o.enable(14),t.transmission&&o.enable(15),t.sheen&&o.enable(16),t.opaque&&o.enable(17),t.pointsUvs&&o.enable(18),e.push(o.mask)}(n,t),n.push(e.outputColorSpace)),n.push(t.customProgramCacheKey),n.join()},getUniforms:function(e){const t=_[e.type];let n;if(t){const e=gi[t];n=Jn.clone(e.uniforms)}else n=e.uniforms;return n},acquireProgram:function(t,n){let i;for(let e=0,t=u.length;e<t;e++){const t=u[e];if(t.cacheKey===n){i=t,++i.usedTimes;break}}return void 0===i&&(i=new ha(e,n,t,a),u.push(i)),i},releaseProgram:function(e){if(0==--e.usedTimes){const t=u.indexOf(e);u[t]=u[u.length-1],u.pop(),e.destroy()}},releaseShaderCache:function(e){l.remove(e)},programs:u,dispose:function(){l.dispose()}}}function ga(){let e=new WeakMap;return{get:function(t){let n=e.get(t);return void 0===n&&(n={},e.set(t,n)),n},remove:function(t){e.delete(t)},update:function(t,n,i){e.get(t)[n]=i},dispose:function(){e=new WeakMap}}}function ba(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.material.id!==t.material.id?e.material.id-t.material.id:e.z!==t.z?e.z-t.z:e.id-t.id}function va(e,t){return e.groupOrder!==t.groupOrder?e.groupOrder-t.groupOrder:e.renderOrder!==t.renderOrder?e.renderOrder-t.renderOrder:e.z!==t.z?t.z-e.z:e.id-t.id}function xa(){const e=[];let t=0;const n=[],i=[],r=[];function a(n,i,r,a,s,o){let c=e[t];return void 0===c?(c={id:n.id,object:n,geometry:i,material:r,groupOrder:a,renderOrder:n.renderOrder,z:s,group:o},e[t]=c):(c.id=n.id,c.object=n,c.geometry=i,c.material=r,c.groupOrder=a,c.renderOrder=n.renderOrder,c.z=s,c.group=o),t++,c}return{opaque:n,transmissive:i,transparent:r,init:function(){t=0,n.length=0,i.length=0,r.length=0},push:function(e,t,s,o,c,l){const u=a(e,t,s,o,c,l);s.transmission>0?i.push(u):!0===s.transparent?r.push(u):n.push(u)},unshift:function(e,t,s,o,c,l){const u=a(e,t,s,o,c,l);s.transmission>0?i.unshift(u):!0===s.transparent?r.unshift(u):n.unshift(u)},finish:function(){for(let n=t,i=e.length;n<i;n++){const t=e[n];if(null===t.id)break;t.id=null,t.object=null,t.geometry=null,t.material=null,t.group=null}},sort:function(e,t){n.length>1&&n.sort(e||ba),i.length>1&&i.sort(t||va),r.length>1&&r.sort(t||va)}}}function wa(){let e=new WeakMap;return{get:function(t,n){const i=e.get(t);let r;return void 0===i?(r=new xa,e.set(t,[r])):n>=i.length?(r=new xa,i.push(r)):r=i[n],r},dispose:function(){e=new WeakMap}}}function ya(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":n={direction:new We,color:new dn};break;case"SpotLight":n={position:new We,direction:new We,color:new dn,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":n={position:new We,color:new dn,distance:0,decay:0};break;case"HemisphereLight":n={direction:new We,skyColor:new dn,groundColor:new dn};break;case"RectAreaLight":n={color:new dn,position:new We,halfWidth:new We,halfHeight:new We}}return e[t.id]=n,n}}}let Ma=0;function Sa(e,t){return(t.castShadow?2:0)-(e.castShadow?2:0)+(t.map?1:0)-(e.map?1:0)}function Ea(e,t){const n=new ya,i=function(){const e={};return{get:function(t){if(void 0!==e[t.id])return e[t.id];let n;switch(t.type){case"DirectionalLight":case"SpotLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve};break;case"PointLight":n={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new ve,shadowCameraNear:1,shadowCameraFar:1e3}}return e[t.id]=n,n}}}(),r={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let e=0;e<9;e++)r.probe.push(new We);const a=new We,s=new xt,o=new xt;return{setup:function(a,s){let o=0,c=0,l=0;for(let e=0;e<9;e++)r.probe[e].set(0,0,0);let u=0,d=0,h=0,f=0,p=0,_=0,m=0,g=0,b=0,v=0;a.sort(Sa);const x=!0===s?Math.PI:1;for(let e=0,t=a.length;e<t;e++){const t=a[e],s=t.color,w=t.intensity,y=t.distance,M=t.shadow&&t.shadow.map?t.shadow.map.texture:null;if(t.isAmbientLight)o+=s.r*w*x,c+=s.g*w*x,l+=s.b*w*x;else if(t.isLightProbe)for(let e=0;e<9;e++)r.probe[e].addScaledVector(t.sh.coefficients[e],w);else if(t.isDirectionalLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,r.directionalShadow[u]=n,r.directionalShadowMap[u]=M,r.directionalShadowMatrix[u]=t.shadow.matrix,_++}r.directional[u]=e,u++}else if(t.isSpotLight){const e=n.get(t);e.position.setFromMatrixPosition(t.matrixWorld),e.color.copy(s).multiplyScalar(w*x),e.distance=y,e.coneCos=Math.cos(t.angle),e.penumbraCos=Math.cos(t.angle*(1-t.penumbra)),e.decay=t.decay,r.spot[h]=e;const a=t.shadow;if(t.map&&(r.spotLightMap[b]=t.map,b++,a.updateMatrices(t),t.castShadow&&v++),r.spotLightMatrix[h]=a.matrix,t.castShadow){const e=i.get(t);e.shadowBias=a.bias,e.shadowNormalBias=a.normalBias,e.shadowRadius=a.radius,e.shadowMapSize=a.mapSize,r.spotShadow[h]=e,r.spotShadowMap[h]=M,g++}h++}else if(t.isRectAreaLight){const e=n.get(t);e.color.copy(s).multiplyScalar(w),e.halfWidth.set(.5*t.width,0,0),e.halfHeight.set(0,.5*t.height,0),r.rectArea[f]=e,f++}else if(t.isPointLight){const e=n.get(t);if(e.color.copy(t.color).multiplyScalar(t.intensity*x),e.distance=t.distance,e.decay=t.decay,t.castShadow){const e=t.shadow,n=i.get(t);n.shadowBias=e.bias,n.shadowNormalBias=e.normalBias,n.shadowRadius=e.radius,n.shadowMapSize=e.mapSize,n.shadowCameraNear=e.camera.near,n.shadowCameraFar=e.camera.far,r.pointShadow[d]=n,r.pointShadowMap[d]=M,r.pointShadowMatrix[d]=t.shadow.matrix,m++}r.point[d]=e,d++}else if(t.isHemisphereLight){const e=n.get(t);e.skyColor.copy(t.color).multiplyScalar(w*x),e.groundColor.copy(t.groundColor).multiplyScalar(w*x),r.hemi[p]=e,p++}}f>0&&(t.isWebGL2||!0===e.has("OES_texture_float_linear")?(r.rectAreaLTC1=mi.LTC_FLOAT_1,r.rectAreaLTC2=mi.LTC_FLOAT_2):!0===e.has("OES_texture_half_float_linear")?(r.rectAreaLTC1=mi.LTC_HALF_1,r.rectAreaLTC2=mi.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),r.ambient[0]=o,r.ambient[1]=c,r.ambient[2]=l;const w=r.hash;w.directionalLength===u&&w.pointLength===d&&w.spotLength===h&&w.rectAreaLength===f&&w.hemiLength===p&&w.numDirectionalShadows===_&&w.numPointShadows===m&&w.numSpotShadows===g&&w.numSpotMaps===b||(r.directional.length=u,r.spot.length=h,r.rectArea.length=f,r.point.length=d,r.hemi.length=p,r.directionalShadow.length=_,r.directionalShadowMap.length=_,r.pointShadow.length=m,r.pointShadowMap.length=m,r.spotShadow.length=g,r.spotShadowMap.length=g,r.directionalShadowMatrix.length=_,r.pointShadowMatrix.length=m,r.spotLightMatrix.length=g+b-v,r.spotLightMap.length=b,r.numSpotLightShadowsWithMaps=v,w.directionalLength=u,w.pointLength=d,w.spotLength=h,w.rectAreaLength=f,w.hemiLength=p,w.numDirectionalShadows=_,w.numPointShadows=m,w.numSpotShadows=g,w.numSpotMaps=b,r.version=Ma++)},setupView:function(e,t){let n=0,i=0,c=0,l=0,u=0;const d=t.matrixWorldInverse;for(let t=0,h=e.length;t<h;t++){const h=e[t];if(h.isDirectionalLight){const e=r.directional[n];e.direction.setFromMatrixPosition(h.matrixWorld),a.setFromMatrixPosition(h.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(d),n++}else if(h.isSpotLight){const e=r.spot[c];e.position.setFromMatrixPosition(h.matrixWorld),e.position.applyMatrix4(d),e.direction.setFromMatrixPosition(h.matrixWorld),a.setFromMatrixPosition(h.target.matrixWorld),e.direction.sub(a),e.direction.transformDirection(d),c++}else if(h.isRectAreaLight){const e=r.rectArea[l];e.position.setFromMatrixPosition(h.matrixWorld),e.position.applyMatrix4(d),o.identity(),s.copy(h.matrixWorld),s.premultiply(d),o.extractRotation(s),e.halfWidth.set(.5*h.width,0,0),e.halfHeight.set(0,.5*h.height,0),e.halfWidth.applyMatrix4(o),e.halfHeight.applyMatrix4(o),l++}else if(h.isPointLight){const e=r.point[i];e.position.setFromMatrixPosition(h.matrixWorld),e.position.applyMatrix4(d),i++}else if(h.isHemisphereLight){const e=r.hemi[u];e.direction.setFromMatrixPosition(h.matrixWorld),e.direction.transformDirection(d),u++}}},state:r}}function Ta(e,t){const n=new Ea(e,t),i=[],r=[];return{init:function(){i.length=0,r.length=0},state:{lightsArray:i,shadowsArray:r,lights:n},setupLights:function(e){n.setup(i,e)},setupLightsView:function(e){n.setupView(i,e)},pushLight:function(e){i.push(e)},pushShadow:function(e){r.push(e)}}}function Aa(e,t){let n=new WeakMap;return{get:function(i,r=0){const a=n.get(i);let s;return void 0===a?(s=new Ta(e,t),n.set(i,[s])):r>=a.length?(s=new Ta(e,t),a.push(s)):s=a[r],s},dispose:function(){n=new WeakMap}}}class Ra extends sn{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=3200,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Pa extends sn{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}function Ca(e,t,n){let i=new di;const r=new ve,a=new ve,l=new ze,u=new Ra({depthPacking:3201}),d=new Pa,h={},f=n.maxTextureSize,p={[s]:1,[o]:0,[c]:c},_=new $n({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new ve},radius:{value:4}},vertexShader:"void main() {\n\tgl_Position = vec4( position, 1.0 );\n}",fragmentShader:"uniform sampler2D shadow_pass;\nuniform vec2 resolution;\nuniform float radius;\n#include <packing>\nvoid main() {\n\tconst float samples = float( VSM_SAMPLES );\n\tfloat mean = 0.0;\n\tfloat squared_mean = 0.0;\n\tfloat uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );\n\tfloat uvStart = samples <= 1.0 ? 0.0 : - 1.0;\n\tfor ( float i = 0.0; i < samples; i ++ ) {\n\t\tfloat uvOffset = uvStart + i * uvStride;\n\t\t#ifdef HORIZONTAL_PASS\n\t\t\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );\n\t\t\tmean += distribution.x;\n\t\t\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\n\t\t#else\n\t\t\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );\n\t\t\tmean += depth;\n\t\t\tsquared_mean += depth * depth;\n\t\t#endif\n\t}\n\tmean = mean / samples;\n\tsquared_mean = squared_mean / samples;\n\tfloat std_dev = sqrt( squared_mean - mean * mean );\n\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\n}"}),m=_.clone();m.defines.HORIZONTAL_PASS=1;const g=new An;g.setAttribute("position",new mn(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const b=new Xn(g,_),v=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=1;let x=this.type;function w(n,i){const a=t.update(b);_.defines.VSM_SAMPLES!==n.blurSamples&&(_.defines.VSM_SAMPLES=n.blurSamples,m.defines.VSM_SAMPLES=n.blurSamples,_.needsUpdate=!0,m.needsUpdate=!0),null===n.mapPass&&(n.mapPass=new He(r.x,r.y)),_.uniforms.shadow_pass.value=n.map.texture,_.uniforms.resolution.value=n.mapSize,_.uniforms.radius.value=n.radius,e.setRenderTarget(n.mapPass),e.clear(),e.renderBufferDirect(i,null,a,_,b,null),m.uniforms.shadow_pass.value=n.mapPass.texture,m.uniforms.resolution.value=n.mapSize,m.uniforms.radius.value=n.radius,e.setRenderTarget(n.map),e.clear(),e.renderBufferDirect(i,null,a,m,b,null)}function y(t,n,i,r){let a=null;const s=!0===i.isPointLight?t.customDistanceMaterial:t.customDepthMaterial;if(void 0!==s)a=s;else if(a=!0===i.isPointLight?d:u,e.localClippingEnabled&&!0===n.clipShadows&&Array.isArray(n.clippingPlanes)&&0!==n.clippingPlanes.length||n.displacementMap&&0!==n.displacementScale||n.alphaMap&&n.alphaTest>0||n.map&&n.alphaTest>0){const e=a.uuid,t=n.uuid;let i=h[e];void 0===i&&(i={},h[e]=i);let r=i[t];void 0===r&&(r=a.clone(),i[t]=r),a=r}return a.visible=n.visible,a.wireframe=n.wireframe,a.side=3===r?null!==n.shadowSide?n.shadowSide:n.side:null!==n.shadowSide?n.shadowSide:p[n.side],a.alphaMap=n.alphaMap,a.alphaTest=n.alphaTest,a.map=n.map,a.clipShadows=n.clipShadows,a.clippingPlanes=n.clippingPlanes,a.clipIntersection=n.clipIntersection,a.displacementMap=n.displacementMap,a.displacementScale=n.displacementScale,a.displacementBias=n.displacementBias,a.wireframeLinewidth=n.wireframeLinewidth,a.linewidth=n.linewidth,!0===i.isPointLight&&!0===a.isMeshDistanceMaterial&&(e.properties.get(a).light=i),a}function M(n,r,a,s,o){if(!1===n.visible)return;if(n.layers.test(r.layers)&&(n.isMesh||n.isLine||n.isPoints)&&(n.castShadow||n.receiveShadow&&3===o)&&(!n.frustumCulled||i.intersectsObject(n))){n.modelViewMatrix.multiplyMatrices(a.matrixWorldInverse,n.matrixWorld);const i=t.update(n),r=n.material;if(Array.isArray(r)){const t=i.groups;for(let c=0,l=t.length;c<l;c++){const l=t[c],u=r[l.materialIndex];if(u&&u.visible){const t=y(n,u,s,o);e.renderBufferDirect(a,null,i,t,n,l)}}}else if(r.visible){const t=y(n,r,s,o);e.renderBufferDirect(a,null,i,t,n,null)}}const c=n.children;for(let e=0,t=c.length;e<t;e++)M(c[e],r,a,s,o)}this.render=function(t,n,s){if(!1===v.enabled)return;if(!1===v.autoUpdate&&!1===v.needsUpdate)return;if(0===t.length)return;const o=e.getRenderTarget(),c=e.getActiveCubeFace(),u=e.getActiveMipmapLevel(),d=e.state;d.setBlending(0),d.buffers.color.setClear(1,1,1,1),d.buffers.depth.setTest(!0),d.setScissorTest(!1);const h=3!==x&&3===this.type,p=3===x&&3!==this.type;for(let o=0,c=t.length;o<c;o++){const c=t[o],u=c.shadow;if(void 0===u){console.warn("THREE.WebGLShadowMap:",c,"has no shadow.");continue}if(!1===u.autoUpdate&&!1===u.needsUpdate)continue;r.copy(u.mapSize);const _=u.getFrameExtents();if(r.multiply(_),a.copy(u.mapSize),(r.x>f||r.y>f)&&(r.x>f&&(a.x=Math.floor(f/_.x),r.x=a.x*_.x,u.mapSize.x=a.x),r.y>f&&(a.y=Math.floor(f/_.y),r.y=a.y*_.y,u.mapSize.y=a.y)),null===u.map||!0===h||!0===p){const e=3!==this.type?{minFilter:P,magFilter:P}:{};null!==u.map&&u.map.dispose(),u.map=new He(r.x,r.y,e),u.map.texture.name=c.name+".shadowMap",u.camera.updateProjectionMatrix()}e.setRenderTarget(u.map),e.clear();const m=u.getViewportCount();for(let e=0;e<m;e++){const t=u.getViewport(e);l.set(a.x*t.x,a.y*t.y,a.x*t.z,a.y*t.w),d.viewport(l),u.updateMatrices(c,e),i=u.getFrustum(),M(n,s,u.camera,c,this.type)}!0!==u.isPointLightShadow&&3===this.type&&w(u,s),u.needsUpdate=!1}x=this.type,v.needsUpdate=!1,e.setRenderTarget(o,c,u)}}function La(e,t,n){const i=n.isWebGL2,r=new function(){let t=!1;const n=new ze;let i=null;const r=new ze(0,0,0,0);return{setMask:function(n){i===n||t||(e.colorMask(n,n,n,n),i=n)},setLocked:function(e){t=e},setClear:function(t,i,a,s,o){!0===o&&(t*=s,i*=s,a*=s),n.set(t,i,a,s),!1===r.equals(n)&&(e.clearColor(t,i,a,s),r.copy(n))},reset:function(){t=!1,i=null,r.set(-1,0,0,0)}}},a=new function(){let t=!1,n=null,i=null,r=null;return{setTest:function(t){t?te(e.DEPTH_TEST):ne(e.DEPTH_TEST)},setMask:function(i){n===i||t||(e.depthMask(i),n=i)},setFunc:function(t){if(i!==t){switch(t){case 0:e.depthFunc(e.NEVER);break;case 1:e.depthFunc(e.ALWAYS);break;case 2:e.depthFunc(e.LESS);break;case 3:default:e.depthFunc(e.LEQUAL);break;case 4:e.depthFunc(e.EQUAL);break;case 5:e.depthFunc(e.GEQUAL);break;case 6:e.depthFunc(e.GREATER);break;case 7:e.depthFunc(e.NOTEQUAL)}i=t}},setLocked:function(e){t=e},setClear:function(t){r!==t&&(e.clearDepth(t),r=t)},reset:function(){t=!1,n=null,i=null,r=null}}},s=new function(){let t=!1,n=null,i=null,r=null,a=null,s=null,o=null,c=null,l=null;return{setTest:function(n){t||(n?te(e.STENCIL_TEST):ne(e.STENCIL_TEST))},setMask:function(i){n===i||t||(e.stencilMask(i),n=i)},setFunc:function(t,n,s){i===t&&r===n&&a===s||(e.stencilFunc(t,n,s),i=t,r=n,a=s)},setOp:function(t,n,i){s===t&&o===n&&c===i||(e.stencilOp(t,n,i),s=t,o=n,c=i)},setLocked:function(e){t=e},setClear:function(t){l!==t&&(e.clearStencil(t),l=t)},reset:function(){t=!1,n=null,i=null,r=null,a=null,s=null,o=null,c=null,l=null}}},o=new WeakMap,M=new WeakMap;let S={},E={},T=new WeakMap,A=[],R=null,P=!1,C=null,L=null,D=null,U=null,I=null,N=null,O=null,F=!1,B=null,z=null,H=null,G=null,k=null;const V=e.getParameter(e.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let W=!1,X=0;const j=e.getParameter(e.VERSION);-1!==j.indexOf("WebGL")?(X=parseFloat(/^WebGL (\d)/.exec(j)[1]),W=X>=1):-1!==j.indexOf("OpenGL ES")&&(X=parseFloat(/^OpenGL ES (\d)/.exec(j)[1]),W=X>=2);let q=null,Y={};const K=e.getParameter(e.SCISSOR_BOX),Z=e.getParameter(e.VIEWPORT),J=(new ze).fromArray(K),$=(new ze).fromArray(Z);function Q(t,n,r,a){const s=new Uint8Array(4),o=e.createTexture();e.bindTexture(t,o),e.texParameteri(t,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(t,e.TEXTURE_MAG_FILTER,e.NEAREST);for(let o=0;o<r;o++)!i||t!==e.TEXTURE_3D&&t!==e.TEXTURE_2D_ARRAY?e.texImage2D(n+o,0,e.RGBA,1,1,0,e.RGBA,e.UNSIGNED_BYTE,s):e.texImage3D(n,0,e.RGBA,1,1,a,0,e.RGBA,e.UNSIGNED_BYTE,s);return o}const ee={};function te(t){!0!==S[t]&&(e.enable(t),S[t]=!0)}function ne(t){!1!==S[t]&&(e.disable(t),S[t]=!1)}ee[e.TEXTURE_2D]=Q(e.TEXTURE_2D,e.TEXTURE_2D,1),ee[e.TEXTURE_CUBE_MAP]=Q(e.TEXTURE_CUBE_MAP,e.TEXTURE_CUBE_MAP_POSITIVE_X,6),i&&(ee[e.TEXTURE_2D_ARRAY]=Q(e.TEXTURE_2D_ARRAY,e.TEXTURE_2D_ARRAY,1,1),ee[e.TEXTURE_3D]=Q(e.TEXTURE_3D,e.TEXTURE_3D,1,1)),r.setClear(0,0,0,1),a.setClear(1),s.setClear(0),te(e.DEPTH_TEST),a.setFunc(3),se(!1),oe(1),te(e.CULL_FACE),ae(0);const ie={[l]:e.FUNC_ADD,[u]:e.FUNC_SUBTRACT,[d]:e.FUNC_REVERSE_SUBTRACT};if(i)ie[103]=e.MIN,ie[104]=e.MAX;else{const e=t.get("EXT_blend_minmax");null!==e&&(ie[103]=e.MIN_EXT,ie[104]=e.MAX_EXT)}const re={[h]:e.ZERO,[f]:e.ONE,[p]:e.SRC_COLOR,[m]:e.SRC_ALPHA,[y]:e.SRC_ALPHA_SATURATE,[x]:e.DST_COLOR,[b]:e.DST_ALPHA,[_]:e.ONE_MINUS_SRC_COLOR,[g]:e.ONE_MINUS_SRC_ALPHA,[w]:e.ONE_MINUS_DST_COLOR,[v]:e.ONE_MINUS_DST_ALPHA};function ae(t,n,i,r,a,s,o,c){if(0!==t){if(!1===P&&(te(e.BLEND),P=!0),5===t)a=a||n,s=s||i,o=o||r,n===L&&a===I||(e.blendEquationSeparate(ie[n],ie[a]),L=n,I=a),i===D&&r===U&&s===N&&o===O||(e.blendFuncSeparate(re[i],re[r],re[s],re[o]),D=i,U=r,N=s,O=o),C=t,F=!1;else if(t!==C||c!==F){if(L===l&&I===l||(e.blendEquation(e.FUNC_ADD),L=l,I=l),c)switch(t){case 1:e.blendFuncSeparate(e.ONE,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.ONE,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFuncSeparate(e.ZERO,e.SRC_COLOR,e.ZERO,e.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}else switch(t){case 1:e.blendFuncSeparate(e.SRC_ALPHA,e.ONE_MINUS_SRC_ALPHA,e.ONE,e.ONE_MINUS_SRC_ALPHA);break;case 2:e.blendFunc(e.SRC_ALPHA,e.ONE);break;case 3:e.blendFuncSeparate(e.ZERO,e.ONE_MINUS_SRC_COLOR,e.ZERO,e.ONE);break;case 4:e.blendFunc(e.ZERO,e.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",t)}D=null,U=null,N=null,O=null,C=t,F=c}}else!0===P&&(ne(e.BLEND),P=!1)}function se(t){B!==t&&(t?e.frontFace(e.CW):e.frontFace(e.CCW),B=t)}function oe(t){0!==t?(te(e.CULL_FACE),t!==z&&(1===t?e.cullFace(e.BACK):2===t?e.cullFace(e.FRONT):e.cullFace(e.FRONT_AND_BACK))):ne(e.CULL_FACE),z=t}function ce(t,n,i){t?(te(e.POLYGON_OFFSET_FILL),G===n&&k===i||(e.polygonOffset(n,i),G=n,k=i)):ne(e.POLYGON_OFFSET_FILL)}return{buffers:{color:r,depth:a,stencil:s},enable:te,disable:ne,bindFramebuffer:function(t,n){return E[t]!==n&&(e.bindFramebuffer(t,n),E[t]=n,i&&(t===e.DRAW_FRAMEBUFFER&&(E[e.FRAMEBUFFER]=n),t===e.FRAMEBUFFER&&(E[e.DRAW_FRAMEBUFFER]=n)),!0)},drawBuffers:function(i,r){let a=A,s=!1;if(i)if(a=T.get(r),void 0===a&&(a=[],T.set(r,a)),i.isWebGLMultipleRenderTargets){const t=i.texture;if(a.length!==t.length||a[0]!==e.COLOR_ATTACHMENT0){for(let n=0,i=t.length;n<i;n++)a[n]=e.COLOR_ATTACHMENT0+n;a.length=t.length,s=!0}}else a[0]!==e.COLOR_ATTACHMENT0&&(a[0]=e.COLOR_ATTACHMENT0,s=!0);else a[0]!==e.BACK&&(a[0]=e.BACK,s=!0);s&&(n.isWebGL2?e.drawBuffers(a):t.get("WEBGL_draw_buffers").drawBuffersWEBGL(a))},useProgram:function(t){return R!==t&&(e.useProgram(t),R=t,!0)},setBlending:ae,setMaterial:function(t,n){t.side===c?ne(e.CULL_FACE):te(e.CULL_FACE);let i=1===t.side;n&&(i=!i),se(i),1===t.blending&&!1===t.transparent?ae(0):ae(t.blending,t.blendEquation,t.blendSrc,t.blendDst,t.blendEquationAlpha,t.blendSrcAlpha,t.blendDstAlpha,t.premultipliedAlpha),a.setFunc(t.depthFunc),a.setTest(t.depthTest),a.setMask(t.depthWrite),r.setMask(t.colorWrite);const o=t.stencilWrite;s.setTest(o),o&&(s.setMask(t.stencilWriteMask),s.setFunc(t.stencilFunc,t.stencilRef,t.stencilFuncMask),s.setOp(t.stencilFail,t.stencilZFail,t.stencilZPass)),ce(t.polygonOffset,t.polygonOffsetFactor,t.polygonOffsetUnits),!0===t.alphaToCoverage?te(e.SAMPLE_ALPHA_TO_COVERAGE):ne(e.SAMPLE_ALPHA_TO_COVERAGE)},setFlipSided:se,setCullFace:oe,setLineWidth:function(t){t!==H&&(W&&e.lineWidth(t),H=t)},setPolygonOffset:ce,setScissorTest:function(t){t?te(e.SCISSOR_TEST):ne(e.SCISSOR_TEST)},activeTexture:function(t){void 0===t&&(t=e.TEXTURE0+V-1),q!==t&&(e.activeTexture(t),q=t)},bindTexture:function(t,n,i){void 0===i&&(i=null===q?e.TEXTURE0+V-1:q);let r=Y[i];void 0===r&&(r={type:void 0,texture:void 0},Y[i]=r),r.type===t&&r.texture===n||(q!==i&&(e.activeTexture(i),q=i),e.bindTexture(t,n||ee[t]),r.type=t,r.texture=n)},unbindTexture:function(){const t=Y[q];void 0!==t&&void 0!==t.type&&(e.bindTexture(t.type,null),t.type=void 0,t.texture=void 0)},compressedTexImage2D:function(){try{e.compressedTexImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexImage3D:function(){try{e.compressedTexImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage2D:function(){try{e.texImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texImage3D:function(){try{e.texImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},updateUBOMapping:function(t,n){let i=M.get(n);void 0===i&&(i=new WeakMap,M.set(n,i));let r=i.get(t);void 0===r&&(r=e.getUniformBlockIndex(n,t.name),i.set(t,r))},uniformBlockBinding:function(t,n){const i=M.get(n).get(t);o.get(n)!==i&&(e.uniformBlockBinding(n,i,t.__bindingPointIndex),o.set(n,i))},texStorage2D:function(){try{e.texStorage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texStorage3D:function(){try{e.texStorage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage2D:function(){try{e.texSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},texSubImage3D:function(){try{e.texSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage2D:function(){try{e.compressedTexSubImage2D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},compressedTexSubImage3D:function(){try{e.compressedTexSubImage3D.apply(e,arguments)}catch(e){console.error("THREE.WebGLState:",e)}},scissor:function(t){!1===J.equals(t)&&(e.scissor(t.x,t.y,t.z,t.w),J.copy(t))},viewport:function(t){!1===$.equals(t)&&(e.viewport(t.x,t.y,t.z,t.w),$.copy(t))},reset:function(){e.disable(e.BLEND),e.disable(e.CULL_FACE),e.disable(e.DEPTH_TEST),e.disable(e.POLYGON_OFFSET_FILL),e.disable(e.SCISSOR_TEST),e.disable(e.STENCIL_TEST),e.disable(e.SAMPLE_ALPHA_TO_COVERAGE),e.blendEquation(e.FUNC_ADD),e.blendFunc(e.ONE,e.ZERO),e.blendFuncSeparate(e.ONE,e.ZERO,e.ONE,e.ZERO),e.colorMask(!0,!0,!0,!0),e.clearColor(0,0,0,0),e.depthMask(!0),e.depthFunc(e.LESS),e.clearDepth(1),e.stencilMask(4294967295),e.stencilFunc(e.ALWAYS,0,4294967295),e.stencilOp(e.KEEP,e.KEEP,e.KEEP),e.clearStencil(0),e.cullFace(e.BACK),e.frontFace(e.CCW),e.polygonOffset(0,0),e.activeTexture(e.TEXTURE0),e.bindFramebuffer(e.FRAMEBUFFER,null),!0===i&&(e.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),e.bindFramebuffer(e.READ_FRAMEBUFFER,null)),e.useProgram(null),e.lineWidth(1),e.scissor(0,0,e.canvas.width,e.canvas.height),e.viewport(0,0,e.canvas.width,e.canvas.height),S={},q=null,Y={},E={},T=new WeakMap,A=[],R=null,P=!1,C=null,L=null,D=null,U=null,I=null,N=null,O=null,F=!1,B=null,z=null,H=null,G=null,k=null,J.set(0,0,e.canvas.width,e.canvas.height),$.set(0,0,e.canvas.width,e.canvas.height),r.reset(),a.reset(),s.reset()}}}function Da(e,t,n,i,r,a,s){const o=r.isWebGL2,c=r.maxTextures,l=r.maxCubemapSize,u=r.maxTextureSize,d=r.maxSamples,h=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,f="undefined"!=typeof navigator&&/OculusBrowser/g.test(navigator.userAgent),p=new WeakMap;let _;const m=new WeakMap;let g=!1;try{g="undefined"!=typeof OffscreenCanvas&&null!==new OffscreenCanvas(1,1).getContext("2d")}catch(e){}function b(e,t){return g?new OffscreenCanvas(e,t):Me("canvas")}function v(e,t,n,i){let r=1;if((e.width>i||e.height>i)&&(r=i/Math.max(e.width,e.height)),r<1||!0===t){if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement||"undefined"!=typeof HTMLCanvasElement&&e instanceof HTMLCanvasElement||"undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap){const i=t?_e:Math.floor,a=i(r*e.width),s=i(r*e.height);void 0===_&&(_=b(a,s));const o=n?b(a,s):_;return o.width=a,o.height=s,o.getContext("2d").drawImage(e,0,0,a,s),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+e.width+"x"+e.height+") to ("+a+"x"+s+")."),o}return"data"in e&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+e.width+"x"+e.height+")."),e}return e}function x(e){return pe(e.width)&&pe(e.height)}function w(e,t){return e.generateMipmaps&&t&&e.minFilter!==P&&e.minFilter!==D}function y(t){e.generateMipmap(t)}function M(n,i,r,a,s=!1){if(!1===o)return i;if(null!==n){if(void 0!==e[n])return e[n];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+n+"'")}let c=i;return i===e.RED&&(r===e.FLOAT&&(c=e.R32F),r===e.HALF_FLOAT&&(c=e.R16F),r===e.UNSIGNED_BYTE&&(c=e.R8)),i===e.RG&&(r===e.FLOAT&&(c=e.RG32F),r===e.HALF_FLOAT&&(c=e.RG16F),r===e.UNSIGNED_BYTE&&(c=e.RG8)),i===e.RGBA&&(r===e.FLOAT&&(c=e.RGBA32F),r===e.HALF_FLOAT&&(c=e.RGBA16F),r===e.UNSIGNED_BYTE&&(c=a===$&&!1===s?e.SRGB8_ALPHA8:e.RGBA8),r===e.UNSIGNED_SHORT_4_4_4_4&&(c=e.RGBA4),r===e.UNSIGNED_SHORT_5_5_5_1&&(c=e.RGB5_A1)),c!==e.R16F&&c!==e.R32F&&c!==e.RG16F&&c!==e.RG32F&&c!==e.RGBA16F&&c!==e.RGBA32F||t.get("EXT_color_buffer_float"),c}function S(e,t,n){return!0===w(e,n)||e.isFramebufferTexture&&e.minFilter!==P&&e.minFilter!==D?Math.log2(Math.max(t.width,t.height))+1:void 0!==e.mipmaps&&e.mipmaps.length>0?e.mipmaps.length:e.isCompressedTexture&&Array.isArray(e.image)?t.mipmaps.length:1}function E(t){return t===P||1004===t||t===L?e.NEAREST:e.LINEAR}function V(e){const t=e.target;t.removeEventListener("dispose",V),function(e){const t=i.get(e);if(void 0===t.__webglInit)return;const n=e.source,r=m.get(n);if(r){const i=r[t.__cacheKey];i.usedTimes--,0===i.usedTimes&&X(e),0===Object.keys(r).length&&m.delete(n)}i.remove(e)}(t),t.isVideoTexture&&p.delete(t)}function W(t){const n=t.target;n.removeEventListener("dispose",W),function(t){const n=t.texture,r=i.get(t),a=i.get(n);if(void 0!==a.__webglTexture&&(e.deleteTexture(a.__webglTexture),s.memory.textures--),t.depthTexture&&t.depthTexture.dispose(),t.isWebGLCubeRenderTarget)for(let t=0;t<6;t++)e.deleteFramebuffer(r.__webglFramebuffer[t]),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer[t]);else{if(e.deleteFramebuffer(r.__webglFramebuffer),r.__webglDepthbuffer&&e.deleteRenderbuffer(r.__webglDepthbuffer),r.__webglMultisampledFramebuffer&&e.deleteFramebuffer(r.__webglMultisampledFramebuffer),r.__webglColorRenderbuffer)for(let t=0;t<r.__webglColorRenderbuffer.length;t++)r.__webglColorRenderbuffer[t]&&e.deleteRenderbuffer(r.__webglColorRenderbuffer[t]);r.__webglDepthRenderbuffer&&e.deleteRenderbuffer(r.__webglDepthRenderbuffer)}if(t.isWebGLMultipleRenderTargets)for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);r.__webglTexture&&(e.deleteTexture(r.__webglTexture),s.memory.textures--),i.remove(n[t])}i.remove(n),i.remove(t)}(n)}function X(t){const n=i.get(t);e.deleteTexture(n.__webglTexture);const r=t.source;delete m.get(r)[n.__cacheKey],s.memory.textures--}let j=0;function q(t,r){const a=i.get(t);if(t.isVideoTexture&&function(e){const t=s.render.frame;p.get(e)!==t&&(p.set(e,t),e.update())}(t),!1===t.isRenderTargetTexture&&t.version>0&&a.__version!==t.version){const e=t.image;if(null===e)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else{if(!1!==e.complete)return void ee(a,t,r);console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete")}}n.bindTexture(e.TEXTURE_2D,a.__webglTexture,e.TEXTURE0+r)}const Y={[T]:e.REPEAT,[A]:e.CLAMP_TO_EDGE,[R]:e.MIRRORED_REPEAT},K={[P]:e.NEAREST,[C]:e.NEAREST_MIPMAP_NEAREST,[L]:e.NEAREST_MIPMAP_LINEAR,[D]:e.LINEAR,[U]:e.LINEAR_MIPMAP_NEAREST,[I]:e.LINEAR_MIPMAP_LINEAR};function Z(n,a,s){if(s?(e.texParameteri(n,e.TEXTURE_WRAP_S,Y[a.wrapS]),e.texParameteri(n,e.TEXTURE_WRAP_T,Y[a.wrapT]),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,Y[a.wrapR]),e.texParameteri(n,e.TEXTURE_MAG_FILTER,K[a.magFilter]),e.texParameteri(n,e.TEXTURE_MIN_FILTER,K[a.minFilter])):(e.texParameteri(n,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE),e.texParameteri(n,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE),n!==e.TEXTURE_3D&&n!==e.TEXTURE_2D_ARRAY||e.texParameteri(n,e.TEXTURE_WRAP_R,e.CLAMP_TO_EDGE),a.wrapS===A&&a.wrapT===A||console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),e.texParameteri(n,e.TEXTURE_MAG_FILTER,E(a.magFilter)),e.texParameteri(n,e.TEXTURE_MIN_FILTER,E(a.minFilter)),a.minFilter!==P&&a.minFilter!==D&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),!0===t.has("EXT_texture_filter_anisotropic")){const s=t.get("EXT_texture_filter_anisotropic");if(a.magFilter===P)return;if(a.minFilter!==L&&a.minFilter!==I)return;if(a.type===F&&!1===t.has("OES_texture_float_linear"))return;if(!1===o&&a.type===B&&!1===t.has("OES_texture_half_float_linear"))return;(a.anisotropy>1||i.get(a).__currentAnisotropy)&&(e.texParameterf(n,s.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(a.anisotropy,r.getMaxAnisotropy())),i.get(a).__currentAnisotropy=a.anisotropy)}}function J(t,n){let i=!1;void 0===t.__webglInit&&(t.__webglInit=!0,n.addEventListener("dispose",V));const r=n.source;let a=m.get(r);void 0===a&&(a={},m.set(r,a));const o=function(e){const t=[];return t.push(e.wrapS),t.push(e.wrapT),t.push(e.wrapR||0),t.push(e.magFilter),t.push(e.minFilter),t.push(e.anisotropy),t.push(e.internalFormat),t.push(e.format),t.push(e.type),t.push(e.generateMipmaps),t.push(e.premultiplyAlpha),t.push(e.flipY),t.push(e.unpackAlignment),t.push(e.colorSpace),t.join()}(n);if(o!==t.__cacheKey){void 0===a[o]&&(a[o]={texture:e.createTexture(),usedTimes:0},s.memory.textures++,i=!0),a[o].usedTimes++;const r=a[t.__cacheKey];void 0!==r&&(a[t.__cacheKey].usedTimes--,0===r.usedTimes&&X(n)),t.__cacheKey=o,t.__webglTexture=a[o].texture}return i}function ee(t,r,s){let c=e.TEXTURE_2D;(r.isDataArrayTexture||r.isCompressedArrayTexture)&&(c=e.TEXTURE_2D_ARRAY),r.isData3DTexture&&(c=e.TEXTURE_3D);const l=J(t,r),d=r.source;n.bindTexture(c,t.__webglTexture,e.TEXTURE0+s);const h=i.get(d);if(d.version!==h.__version||!0===l){n.activeTexture(e.TEXTURE0+s),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const t=function(e){return!o&&(e.wrapS!==A||e.wrapT!==A||e.minFilter!==P&&e.minFilter!==D)}(r)&&!1===x(r.image);let i=v(r.image,t,!1,u);i=oe(r,i);const f=x(i)||o,p=a.convert(r.format,r.colorSpace);let _,m=a.convert(r.type),g=M(r.internalFormat,p,m,r.colorSpace);Z(c,r,f);const b=r.mipmaps,E=o&&!0!==r.isVideoTexture,T=void 0===h.__version||!0===l,R=S(r,i,f);if(r.isDepthTexture)g=e.DEPTH_COMPONENT,o?g=r.type===F?e.DEPTH_COMPONENT32F:r.type===O?e.DEPTH_COMPONENT24:r.type===z?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT16:r.type===F&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),r.format===G&&g===e.DEPTH_COMPONENT&&1012!==r.type&&r.type!==O&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),r.type=O,m=a.convert(r.type)),r.format===k&&g===e.DEPTH_COMPONENT&&(g=e.DEPTH_STENCIL,r.type!==z&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),r.type=z,m=a.convert(r.type))),T&&(E?n.texStorage2D(e.TEXTURE_2D,1,g,i.width,i.height):n.texImage2D(e.TEXTURE_2D,0,g,i.width,i.height,0,p,m,null));else if(r.isDataTexture)if(b.length>0&&f){E&&T&&n.texStorage2D(e.TEXTURE_2D,R,g,b[0].width,b[0].height);for(let t=0,i=b.length;t<i;t++)_=b[t],E?n.texSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,p,m,_.data):n.texImage2D(e.TEXTURE_2D,t,g,_.width,_.height,0,p,m,_.data);r.generateMipmaps=!1}else E?(T&&n.texStorage2D(e.TEXTURE_2D,R,g,i.width,i.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,i.width,i.height,p,m,i.data)):n.texImage2D(e.TEXTURE_2D,0,g,i.width,i.height,0,p,m,i.data);else if(r.isCompressedTexture)if(r.isCompressedArrayTexture){E&&T&&n.texStorage3D(e.TEXTURE_2D_ARRAY,R,g,b[0].width,b[0].height,i.depth);for(let t=0,a=b.length;t<a;t++)_=b[t],r.format!==H?null!==p?E?n.compressedTexSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,_.width,_.height,i.depth,p,_.data,0,0):n.compressedTexImage3D(e.TEXTURE_2D_ARRAY,t,g,_.width,_.height,i.depth,0,_.data,0,0):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?n.texSubImage3D(e.TEXTURE_2D_ARRAY,t,0,0,0,_.width,_.height,i.depth,p,m,_.data):n.texImage3D(e.TEXTURE_2D_ARRAY,t,g,_.width,_.height,i.depth,0,p,m,_.data)}else{E&&T&&n.texStorage2D(e.TEXTURE_2D,R,g,b[0].width,b[0].height);for(let t=0,i=b.length;t<i;t++)_=b[t],r.format!==H?null!==p?E?n.compressedTexSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,p,_.data):n.compressedTexImage2D(e.TEXTURE_2D,t,g,_.width,_.height,0,_.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):E?n.texSubImage2D(e.TEXTURE_2D,t,0,0,_.width,_.height,p,m,_.data):n.texImage2D(e.TEXTURE_2D,t,g,_.width,_.height,0,p,m,_.data)}else if(r.isDataArrayTexture)E?(T&&n.texStorage3D(e.TEXTURE_2D_ARRAY,R,g,i.width,i.height,i.depth),n.texSubImage3D(e.TEXTURE_2D_ARRAY,0,0,0,0,i.width,i.height,i.depth,p,m,i.data)):n.texImage3D(e.TEXTURE_2D_ARRAY,0,g,i.width,i.height,i.depth,0,p,m,i.data);else if(r.isData3DTexture)E?(T&&n.texStorage3D(e.TEXTURE_3D,R,g,i.width,i.height,i.depth),n.texSubImage3D(e.TEXTURE_3D,0,0,0,0,i.width,i.height,i.depth,p,m,i.data)):n.texImage3D(e.TEXTURE_3D,0,g,i.width,i.height,i.depth,0,p,m,i.data);else if(r.isFramebufferTexture){if(T)if(E)n.texStorage2D(e.TEXTURE_2D,R,g,i.width,i.height);else{let t=i.width,r=i.height;for(let i=0;i<R;i++)n.texImage2D(e.TEXTURE_2D,i,g,t,r,0,p,m,null),t>>=1,r>>=1}}else if(b.length>0&&f){E&&T&&n.texStorage2D(e.TEXTURE_2D,R,g,b[0].width,b[0].height);for(let t=0,i=b.length;t<i;t++)_=b[t],E?n.texSubImage2D(e.TEXTURE_2D,t,0,0,p,m,_):n.texImage2D(e.TEXTURE_2D,t,g,p,m,_);r.generateMipmaps=!1}else E?(T&&n.texStorage2D(e.TEXTURE_2D,R,g,i.width,i.height),n.texSubImage2D(e.TEXTURE_2D,0,0,0,p,m,i)):n.texImage2D(e.TEXTURE_2D,0,g,p,m,i);w(r,f)&&y(c),h.__version=d.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}function te(t,r,s,o,c){const l=a.convert(s.format,s.colorSpace),u=a.convert(s.type),d=M(s.internalFormat,l,u,s.colorSpace);i.get(r).__hasExternalTextures||(c===e.TEXTURE_3D||c===e.TEXTURE_2D_ARRAY?n.texImage3D(c,0,d,r.width,r.height,r.depth,0,l,u,null):n.texImage2D(c,0,d,r.width,r.height,0,l,u,null)),n.bindFramebuffer(e.FRAMEBUFFER,t),se(r)?h.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,o,c,i.get(s).__webglTexture,0,ae(r)):(c===e.TEXTURE_2D||c>=e.TEXTURE_CUBE_MAP_POSITIVE_X&&c<=e.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&e.framebufferTexture2D(e.FRAMEBUFFER,o,c,i.get(s).__webglTexture,0),n.bindFramebuffer(e.FRAMEBUFFER,null)}function ne(t,n,i){if(e.bindRenderbuffer(e.RENDERBUFFER,t),n.depthBuffer&&!n.stencilBuffer){let r=e.DEPTH_COMPONENT16;if(i||se(n)){const t=n.depthTexture;t&&t.isDepthTexture&&(t.type===F?r=e.DEPTH_COMPONENT32F:t.type===O&&(r=e.DEPTH_COMPONENT24));const i=ae(n);se(n)?h.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,i,r,n.width,n.height):e.renderbufferStorageMultisample(e.RENDERBUFFER,i,r,n.width,n.height)}else e.renderbufferStorage(e.RENDERBUFFER,r,n.width,n.height);e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.RENDERBUFFER,t)}else if(n.depthBuffer&&n.stencilBuffer){const r=ae(n);i&&!1===se(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,r,e.DEPTH24_STENCIL8,n.width,n.height):se(n)?h.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,r,e.DEPTH24_STENCIL8,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,e.DEPTH_STENCIL,n.width,n.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.RENDERBUFFER,t)}else{const t=!0===n.isWebGLMultipleRenderTargets?n.texture:[n.texture];for(let r=0;r<t.length;r++){const s=t[r],o=a.convert(s.format,s.colorSpace),c=a.convert(s.type),l=M(s.internalFormat,o,c,s.colorSpace),u=ae(n);i&&!1===se(n)?e.renderbufferStorageMultisample(e.RENDERBUFFER,u,l,n.width,n.height):se(n)?h.renderbufferStorageMultisampleEXT(e.RENDERBUFFER,u,l,n.width,n.height):e.renderbufferStorage(e.RENDERBUFFER,l,n.width,n.height)}}e.bindRenderbuffer(e.RENDERBUFFER,null)}function ie(t){const r=i.get(t),a=!0===t.isWebGLCubeRenderTarget;if(t.depthTexture&&!r.__autoAllocateDepthBuffer){if(a)throw new Error("target.depthTexture not supported in Cube render targets");!function(t,r){if(r&&r.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(n.bindFramebuffer(e.FRAMEBUFFER,t),!r.depthTexture||!r.depthTexture.isDepthTexture)throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");i.get(r.depthTexture).__webglTexture&&r.depthTexture.image.width===r.width&&r.depthTexture.image.height===r.height||(r.depthTexture.image.width=r.width,r.depthTexture.image.height=r.height,r.depthTexture.needsUpdate=!0),q(r.depthTexture,0);const a=i.get(r.depthTexture).__webglTexture,s=ae(r);if(r.depthTexture.format===G)se(r)?h.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_ATTACHMENT,e.TEXTURE_2D,a,0);else{if(r.depthTexture.format!==k)throw new Error("Unknown depthTexture format");se(r)?h.framebufferTexture2DMultisampleEXT(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0,s):e.framebufferTexture2D(e.FRAMEBUFFER,e.DEPTH_STENCIL_ATTACHMENT,e.TEXTURE_2D,a,0)}}(r.__webglFramebuffer,t)}else if(a){r.__webglDepthbuffer=[];for(let i=0;i<6;i++)n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer[i]),r.__webglDepthbuffer[i]=e.createRenderbuffer(),ne(r.__webglDepthbuffer[i],t,!1)}else n.bindFramebuffer(e.FRAMEBUFFER,r.__webglFramebuffer),r.__webglDepthbuffer=e.createRenderbuffer(),ne(r.__webglDepthbuffer,t,!1);n.bindFramebuffer(e.FRAMEBUFFER,null)}function ae(e){return Math.min(d,e.samples)}function se(e){const n=i.get(e);return o&&e.samples>0&&!0===t.has("WEBGL_multisampled_render_to_texture")&&!1!==n.__useRenderToTexture}function oe(e,n){const i=e.colorSpace,r=e.format,a=e.type;return!0===e.isCompressedTexture||e.format===re||i!==Q&&""!==i&&(i===$?!1===o?!0===t.has("EXT_sRGB")&&r===H?(e.format=re,e.minFilter=D,e.generateMipmaps=!1):n=Ie.sRGBToLinear(n):r===H&&a===N||console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",i)),n}this.allocateTextureUnit=function(){const e=j;return e>=c&&console.warn("THREE.WebGLTextures: Trying to use "+e+" texture units while this GPU supports only "+c),j+=1,e},this.resetTextureUnits=function(){j=0},this.setTexture2D=q,this.setTexture2DArray=function(t,r){const a=i.get(t);t.version>0&&a.__version!==t.version?ee(a,t,r):n.bindTexture(e.TEXTURE_2D_ARRAY,a.__webglTexture,e.TEXTURE0+r)},this.setTexture3D=function(t,r){const a=i.get(t);t.version>0&&a.__version!==t.version?ee(a,t,r):n.bindTexture(e.TEXTURE_3D,a.__webglTexture,e.TEXTURE0+r)},this.setTextureCube=function(t,r){const s=i.get(t);t.version>0&&s.__version!==t.version?function(t,r,s){if(6!==r.image.length)return;const c=J(t,r),u=r.source;n.bindTexture(e.TEXTURE_CUBE_MAP,t.__webglTexture,e.TEXTURE0+s);const d=i.get(u);if(u.version!==d.__version||!0===c){n.activeTexture(e.TEXTURE0+s),e.pixelStorei(e.UNPACK_FLIP_Y_WEBGL,r.flipY),e.pixelStorei(e.UNPACK_PREMULTIPLY_ALPHA_WEBGL,r.premultiplyAlpha),e.pixelStorei(e.UNPACK_ALIGNMENT,r.unpackAlignment),e.pixelStorei(e.UNPACK_COLORSPACE_CONVERSION_WEBGL,e.NONE);const t=r.isCompressedTexture||r.image[0].isCompressedTexture,i=r.image[0]&&r.image[0].isDataTexture,h=[];for(let e=0;e<6;e++)h[e]=t||i?i?r.image[e].image:r.image[e]:v(r.image[e],!1,!0,l),h[e]=oe(r,h[e]);const f=h[0],p=x(f)||o,_=a.convert(r.format,r.colorSpace),m=a.convert(r.type),g=M(r.internalFormat,_,m,r.colorSpace),b=o&&!0!==r.isVideoTexture,E=void 0===d.__version||!0===c;let T,A=S(r,f,p);if(Z(e.TEXTURE_CUBE_MAP,r,p),t){b&&E&&n.texStorage2D(e.TEXTURE_CUBE_MAP,A,g,f.width,f.height);for(let t=0;t<6;t++){T=h[t].mipmaps;for(let i=0;i<T.length;i++){const a=T[i];r.format!==H?null!==_?b?n.compressedTexSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,a.width,a.height,_,a.data):n.compressedTexImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,g,a.width,a.height,0,a.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):b?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,0,0,a.width,a.height,_,m,a.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i,g,a.width,a.height,0,_,m,a.data)}}}else{T=r.mipmaps,b&&E&&(T.length>0&&A++,n.texStorage2D(e.TEXTURE_CUBE_MAP,A,g,h[0].width,h[0].height));for(let t=0;t<6;t++)if(i){b?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,h[t].width,h[t].height,_,m,h[t].data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,g,h[t].width,h[t].height,0,_,m,h[t].data);for(let i=0;i<T.length;i++){const r=T[i].image[t].image;b?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,r.width,r.height,_,m,r.data):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,g,r.width,r.height,0,_,m,r.data)}}else{b?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,0,0,_,m,h[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,0,g,_,m,h[t]);for(let i=0;i<T.length;i++){const r=T[i];b?n.texSubImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,0,0,_,m,r.image[t]):n.texImage2D(e.TEXTURE_CUBE_MAP_POSITIVE_X+t,i+1,g,_,m,r.image[t])}}}w(r,p)&&y(e.TEXTURE_CUBE_MAP),d.__version=u.version,r.onUpdate&&r.onUpdate(r)}t.__version=r.version}(s,t,r):n.bindTexture(e.TEXTURE_CUBE_MAP,s.__webglTexture,e.TEXTURE0+r)},this.rebindTextures=function(t,n,r){const a=i.get(t);void 0!==n&&te(a.__webglFramebuffer,t,t.texture,e.COLOR_ATTACHMENT0,e.TEXTURE_2D),void 0!==r&&ie(t)},this.setupRenderTarget=function(t){const c=t.texture,l=i.get(t),u=i.get(c);t.addEventListener("dispose",W),!0!==t.isWebGLMultipleRenderTargets&&(void 0===u.__webglTexture&&(u.__webglTexture=e.createTexture()),u.__version=c.version,s.memory.textures++);const d=!0===t.isWebGLCubeRenderTarget,h=!0===t.isWebGLMultipleRenderTargets,f=x(t)||o;if(d){l.__webglFramebuffer=[];for(let t=0;t<6;t++)l.__webglFramebuffer[t]=e.createFramebuffer()}else{if(l.__webglFramebuffer=e.createFramebuffer(),h)if(r.drawBuffers){const n=t.texture;for(let t=0,r=n.length;t<r;t++){const r=i.get(n[t]);void 0===r.__webglTexture&&(r.__webglTexture=e.createTexture(),s.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(o&&t.samples>0&&!1===se(t)){const i=h?c:[c];l.__webglMultisampledFramebuffer=e.createFramebuffer(),l.__webglColorRenderbuffer=[],n.bindFramebuffer(e.FRAMEBUFFER,l.__webglMultisampledFramebuffer);for(let n=0;n<i.length;n++){const r=i[n];l.__webglColorRenderbuffer[n]=e.createRenderbuffer(),e.bindRenderbuffer(e.RENDERBUFFER,l.__webglColorRenderbuffer[n]);const s=a.convert(r.format,r.colorSpace),o=a.convert(r.type),c=M(r.internalFormat,s,o,r.colorSpace,!0===t.isXRRenderTarget),u=ae(t);e.renderbufferStorageMultisample(e.RENDERBUFFER,u,c,t.width,t.height),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+n,e.RENDERBUFFER,l.__webglColorRenderbuffer[n])}e.bindRenderbuffer(e.RENDERBUFFER,null),t.depthBuffer&&(l.__webglDepthRenderbuffer=e.createRenderbuffer(),ne(l.__webglDepthRenderbuffer,t,!0)),n.bindFramebuffer(e.FRAMEBUFFER,null)}}if(d){n.bindTexture(e.TEXTURE_CUBE_MAP,u.__webglTexture),Z(e.TEXTURE_CUBE_MAP,c,f);for(let n=0;n<6;n++)te(l.__webglFramebuffer[n],t,c,e.COLOR_ATTACHMENT0,e.TEXTURE_CUBE_MAP_POSITIVE_X+n);w(c,f)&&y(e.TEXTURE_CUBE_MAP),n.unbindTexture()}else if(h){const r=t.texture;for(let a=0,s=r.length;a<s;a++){const s=r[a],o=i.get(s);n.bindTexture(e.TEXTURE_2D,o.__webglTexture),Z(e.TEXTURE_2D,s,f),te(l.__webglFramebuffer,t,s,e.COLOR_ATTACHMENT0+a,e.TEXTURE_2D),w(s,f)&&y(e.TEXTURE_2D)}n.unbindTexture()}else{let i=e.TEXTURE_2D;(t.isWebGL3DRenderTarget||t.isWebGLArrayRenderTarget)&&(o?i=t.isWebGL3DRenderTarget?e.TEXTURE_3D:e.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),n.bindTexture(i,u.__webglTexture),Z(i,c,f),te(l.__webglFramebuffer,t,c,e.COLOR_ATTACHMENT0,i),w(c,f)&&y(i),n.unbindTexture()}t.depthBuffer&&ie(t)},this.updateRenderTargetMipmap=function(t){const r=x(t)||o,a=!0===t.isWebGLMultipleRenderTargets?t.texture:[t.texture];for(let s=0,o=a.length;s<o;s++){const o=a[s];if(w(o,r)){const r=t.isWebGLCubeRenderTarget?e.TEXTURE_CUBE_MAP:e.TEXTURE_2D,a=i.get(o).__webglTexture;n.bindTexture(r,a),y(r),n.unbindTexture()}}},this.updateMultisampleRenderTarget=function(t){if(o&&t.samples>0&&!1===se(t)){const r=t.isWebGLMultipleRenderTargets?t.texture:[t.texture],a=t.width,s=t.height;let o=e.COLOR_BUFFER_BIT;const c=[],l=t.stencilBuffer?e.DEPTH_STENCIL_ATTACHMENT:e.DEPTH_ATTACHMENT,u=i.get(t),d=!0===t.isWebGLMultipleRenderTargets;if(d)for(let t=0;t<r.length;t++)n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,null),n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,null,0);n.bindFramebuffer(e.READ_FRAMEBUFFER,u.__webglMultisampledFramebuffer),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglFramebuffer);for(let n=0;n<r.length;n++){c.push(e.COLOR_ATTACHMENT0+n),t.depthBuffer&&c.push(l);const h=void 0!==u.__ignoreDepthValues&&u.__ignoreDepthValues;if(!1===h&&(t.depthBuffer&&(o|=e.DEPTH_BUFFER_BIT),t.stencilBuffer&&(o|=e.STENCIL_BUFFER_BIT)),d&&e.framebufferRenderbuffer(e.READ_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.RENDERBUFFER,u.__webglColorRenderbuffer[n]),!0===h&&(e.invalidateFramebuffer(e.READ_FRAMEBUFFER,[l]),e.invalidateFramebuffer(e.DRAW_FRAMEBUFFER,[l])),d){const t=i.get(r[n]).__webglTexture;e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)}e.blitFramebuffer(0,0,a,s,0,0,a,s,o,e.NEAREST),f&&e.invalidateFramebuffer(e.READ_FRAMEBUFFER,c)}if(n.bindFramebuffer(e.READ_FRAMEBUFFER,null),n.bindFramebuffer(e.DRAW_FRAMEBUFFER,null),d)for(let t=0;t<r.length;t++){n.bindFramebuffer(e.FRAMEBUFFER,u.__webglMultisampledFramebuffer),e.framebufferRenderbuffer(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.RENDERBUFFER,u.__webglColorRenderbuffer[t]);const a=i.get(r[t]).__webglTexture;n.bindFramebuffer(e.FRAMEBUFFER,u.__webglFramebuffer),e.framebufferTexture2D(e.DRAW_FRAMEBUFFER,e.COLOR_ATTACHMENT0+t,e.TEXTURE_2D,a,0)}n.bindFramebuffer(e.DRAW_FRAMEBUFFER,u.__webglMultisampledFramebuffer)}},this.setupDepthRenderbuffer=ie,this.setupFrameBufferTexture=te,this.useMultisampledRTT=se}function Ua(e,t,n){const i=n.isWebGL2;return{convert:function(n,r=""){let a;if(n===N)return e.UNSIGNED_BYTE;if(1017===n)return e.UNSIGNED_SHORT_4_4_4_4;if(1018===n)return e.UNSIGNED_SHORT_5_5_5_1;if(1010===n)return e.BYTE;if(1011===n)return e.SHORT;if(1012===n)return e.UNSIGNED_SHORT;if(1013===n)return e.INT;if(n===O)return e.UNSIGNED_INT;if(n===F)return e.FLOAT;if(n===B)return i?e.HALF_FLOAT:(a=t.get("OES_texture_half_float"),null!==a?a.HALF_FLOAT_OES:null);if(1021===n)return e.ALPHA;if(n===H)return e.RGBA;if(1024===n)return e.LUMINANCE;if(1025===n)return e.LUMINANCE_ALPHA;if(n===G)return e.DEPTH_COMPONENT;if(n===k)return e.DEPTH_STENCIL;if(n===re)return a=t.get("EXT_sRGB"),null!==a?a.SRGB_ALPHA_EXT:null;if(1028===n)return e.RED;if(1029===n)return e.RED_INTEGER;if(1030===n)return e.RG;if(1031===n)return e.RG_INTEGER;if(1033===n)return e.RGBA_INTEGER;if(n===V||n===W||n===X||n===j)if(r===$){if(a=t.get("WEBGL_compressed_texture_s3tc_srgb"),null===a)return null;if(n===V)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(n===W)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(n===X)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(n===j)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else{if(a=t.get("WEBGL_compressed_texture_s3tc"),null===a)return null;if(n===V)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(n===W)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(n===X)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(n===j)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}if(35840===n||35841===n||35842===n||35843===n){if(a=t.get("WEBGL_compressed_texture_pvrtc"),null===a)return null;if(35840===n)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(35841===n)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(35842===n)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(35843===n)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}if(36196===n)return a=t.get("WEBGL_compressed_texture_etc1"),null!==a?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(37492===n||37496===n){if(a=t.get("WEBGL_compressed_texture_etc"),null===a)return null;if(37492===n)return r===$?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(37496===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}if(37808===n||37809===n||37810===n||37811===n||37812===n||37813===n||37814===n||37815===n||37816===n||37817===n||37818===n||37819===n||37820===n||37821===n){if(a=t.get("WEBGL_compressed_texture_astc"),null===a)return null;if(37808===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(37809===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(37810===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(37811===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(37812===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(37813===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(37814===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(37815===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(37816===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(37817===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(37818===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(37819===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(37820===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(37821===n)return r===$?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}if(n===q){if(a=t.get("EXT_texture_compression_bptc"),null===a)return null;if(n===q)return r===$?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}if(36283===n||36284===n||36285===n||36286===n){if(a=t.get("EXT_texture_compression_rgtc"),null===a)return null;if(n===q)return a.COMPRESSED_RED_RGTC1_EXT;if(36284===n)return a.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(36285===n)return a.COMPRESSED_RED_GREEN_RGTC2_EXT;if(36286===n)return a.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}return n===z?i?e.UNSIGNED_INT_24_8:(a=t.get("WEBGL_depth_texture"),null!==a?a.UNSIGNED_INT_24_8_WEBGL:null):void 0!==e[n]?e[n]:null}}}class Ia extends ei{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class Na extends Xt{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Oa={type:"move"};class Fa{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return null===this._hand&&(this._hand=new Na,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return null===this._targetRay&&(this._targetRay=new Na,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new We,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new We),this._targetRay}getGripSpace(){return null===this._grip&&(this._grip=new Na,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new We,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new We),this._grip}dispatchEvent(e){return null!==this._targetRay&&this._targetRay.dispatchEvent(e),null!==this._grip&&this._grip.dispatchEvent(e),null!==this._hand&&this._hand.dispatchEvent(e),this}connect(e){if(e&&e.hand){const t=this._hand;if(t)for(const n of e.hand.values())this._getHandJoint(t,n)}return this.dispatchEvent({type:"connected",data:e}),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),null!==this._targetRay&&(this._targetRay.visible=!1),null!==this._grip&&(this._grip.visible=!1),null!==this._hand&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const s=this._targetRay,o=this._grip,c=this._hand;if(e&&"visible-blurred"!==t.session.visibilityState){if(c&&e.hand){a=!0;for(const i of e.hand.values()){const e=t.getJointPose(i,n),r=this._getHandJoint(c,i);null!==e&&(r.matrix.fromArray(e.transform.matrix),r.matrix.decompose(r.position,r.rotation,r.scale),r.matrixWorldNeedsUpdate=!0,r.jointRadius=e.radius),r.visible=null!==e}const i=c.joints["index-finger-tip"],r=c.joints["thumb-tip"],s=i.position.distanceTo(r.position),o=.02,l=.005;c.inputState.pinching&&s>o+l?(c.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!c.inputState.pinching&&s<=o-l&&(c.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else null!==o&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),null!==r&&(o.matrix.fromArray(r.transform.matrix),o.matrix.decompose(o.position,o.rotation,o.scale),o.matrixWorldNeedsUpdate=!0,r.linearVelocity?(o.hasLinearVelocity=!0,o.linearVelocity.copy(r.linearVelocity)):o.hasLinearVelocity=!1,r.angularVelocity?(o.hasAngularVelocity=!0,o.angularVelocity.copy(r.angularVelocity)):o.hasAngularVelocity=!1));null!==s&&(i=t.getPose(e.targetRaySpace,n),null===i&&null!==r&&(i=r),null!==i&&(s.matrix.fromArray(i.transform.matrix),s.matrix.decompose(s.position,s.rotation,s.scale),s.matrixWorldNeedsUpdate=!0,i.linearVelocity?(s.hasLinearVelocity=!0,s.linearVelocity.copy(i.linearVelocity)):s.hasLinearVelocity=!1,i.angularVelocity?(s.hasAngularVelocity=!0,s.angularVelocity.copy(i.angularVelocity)):s.hasAngularVelocity=!1,this.dispatchEvent(Oa)))}return null!==s&&(s.visible=null!==i),null!==o&&(o.visible=null!==r),null!==c&&(c.visible=null!==a),this}_getHandJoint(e,t){if(void 0===e.joints[t.jointName]){const n=new Na;n.matrixAutoUpdate=!1,n.visible=!1,e.joints[t.jointName]=n,e.add(n)}return e.joints[t.jointName]}}class Ba extends Be{constructor(e,t,n,i,r,a,s,o,c,l){if((l=void 0!==l?l:G)!==G&&l!==k)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");void 0===n&&l===G&&(n=O),void 0===n&&l===k&&(n=z),super(null,i,r,a,s,o,l,n,c),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=void 0!==s?s:P,this.minFilter=void 0!==o?o:P,this.flipY=!1,this.generateMipmaps=!1}}class za extends ae{constructor(e,t){super();const n=this;let i=null,r=1,a=null,s="local-floor",o=1,c=null,l=null,u=null,d=null,h=null,f=null;const p=t.getContextAttributes();let _=null,m=null;const g=[],b=[],v=new Set,x=new Map,w=new ei;w.layers.enable(1),w.viewport=new ze;const y=new ei;y.layers.enable(2),y.viewport=new ze;const M=[w,y],S=new Ia;S.layers.enable(1),S.layers.enable(2);let E=null,T=null;function A(e){const t=b.indexOf(e.inputSource);if(-1===t)return;const n=g[t];void 0!==n&&(n.update(e.inputSource,e.frame,c||a),n.dispatchEvent({type:e.type,data:e.inputSource}))}function R(){i.removeEventListener("select",A),i.removeEventListener("selectstart",A),i.removeEventListener("selectend",A),i.removeEventListener("squeeze",A),i.removeEventListener("squeezestart",A),i.removeEventListener("squeezeend",A),i.removeEventListener("end",R),i.removeEventListener("inputsourceschange",P);for(let e=0;e<g.length;e++){const t=b[e];null!==t&&(b[e]=null,g[e].disconnect(t))}E=null,T=null,e.setRenderTarget(_),h=null,d=null,u=null,i=null,m=null,I.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}function P(e){for(let t=0;t<e.removed.length;t++){const n=e.removed[t],i=b.indexOf(n);i>=0&&(b[i]=null,g[i].disconnect(n))}for(let t=0;t<e.added.length;t++){const n=e.added[t];let i=b.indexOf(n);if(-1===i){for(let e=0;e<g.length;e++){if(e>=b.length){b.push(n),i=e;break}if(null===b[e]){b[e]=n,i=e;break}}if(-1===i)break}const r=g[i];r&&r.connect(n)}}this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(e){let t=g[e];return void 0===t&&(t=new Fa,g[e]=t),t.getTargetRaySpace()},this.getControllerGrip=function(e){let t=g[e];return void 0===t&&(t=new Fa,g[e]=t),t.getGripSpace()},this.getHand=function(e){let t=g[e];return void 0===t&&(t=new Fa,g[e]=t),t.getHandSpace()},this.setFramebufferScaleFactor=function(e){r=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(e){s=e,!0===n.isPresenting&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return c||a},this.setReferenceSpace=function(e){c=e},this.getBaseLayer=function(){return null!==d?d:h},this.getBinding=function(){return u},this.getFrame=function(){return f},this.getSession=function(){return i},this.setSession=async function(l){if(i=l,null!==i){if(_=e.getRenderTarget(),i.addEventListener("select",A),i.addEventListener("selectstart",A),i.addEventListener("selectend",A),i.addEventListener("squeeze",A),i.addEventListener("squeezestart",A),i.addEventListener("squeezeend",A),i.addEventListener("end",R),i.addEventListener("inputsourceschange",P),!0!==p.xrCompatible&&await t.makeXRCompatible(),void 0===i.renderState.layers||!1===e.capabilities.isWebGL2){const n={antialias:void 0!==i.renderState.layers||p.antialias,alpha:!0,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:r};h=new XRWebGLLayer(i,t,n),i.updateRenderState({baseLayer:h}),m=new He(h.framebufferWidth,h.framebufferHeight,{format:H,type:N,colorSpace:e.outputColorSpace,stencilBuffer:p.stencil})}else{let n=null,a=null,s=null;p.depth&&(s=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,n=p.stencil?k:G,a=p.stencil?z:O);const o={colorFormat:t.RGBA8,depthFormat:s,scaleFactor:r};u=new XRWebGLBinding(i,t),d=u.createProjectionLayer(o),i.updateRenderState({layers:[d]}),m=new He(d.textureWidth,d.textureHeight,{format:H,type:N,depthTexture:new Ba(d.textureWidth,d.textureHeight,a,void 0,void 0,void 0,void 0,void 0,void 0,n),stencilBuffer:p.stencil,colorSpace:e.outputColorSpace,samples:p.antialias?4:0}),e.properties.get(m).__ignoreDepthValues=d.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(o),c=null,a=await i.requestReferenceSpace(s),I.setContext(i),I.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(null!==i)return i.environmentBlendMode};const C=new We,L=new We;function D(e,t){null===t?e.matrixWorld.copy(e.matrix):e.matrixWorld.multiplyMatrices(t.matrixWorld,e.matrix),e.matrixWorldInverse.copy(e.matrixWorld).invert()}this.updateCamera=function(e){if(null===i)return;S.near=y.near=w.near=e.near,S.far=y.far=w.far=e.far,E===S.near&&T===S.far||(i.updateRenderState({depthNear:S.near,depthFar:S.far}),E=S.near,T=S.far);const t=e.parent,n=S.cameras;D(S,t);for(let e=0;e<n.length;e++)D(n[e],t);2===n.length?function(e,t,n){C.setFromMatrixPosition(t.matrixWorld),L.setFromMatrixPosition(n.matrixWorld);const i=C.distanceTo(L),r=t.projectionMatrix.elements,a=n.projectionMatrix.elements,s=r[14]/(r[10]-1),o=r[14]/(r[10]+1),c=(r[9]+1)/r[5],l=(r[9]-1)/r[5],u=(r[8]-1)/r[0],d=(a[8]+1)/a[0],h=s*u,f=s*d,p=i/(-u+d),_=p*-u;t.matrixWorld.decompose(e.position,e.quaternion,e.scale),e.translateX(_),e.translateZ(p),e.matrixWorld.compose(e.position,e.quaternion,e.scale),e.matrixWorldInverse.copy(e.matrixWorld).invert();const m=s+p,g=o+p,b=h-_,v=f+(i-_),x=c*o/g*m,w=l*o/g*m;e.projectionMatrix.makePerspective(b,v,x,w,m,g),e.projectionMatrixInverse.copy(e.projectionMatrix).invert()}(S,w,y):S.projectionMatrix.copy(w.projectionMatrix),function(e,t,n){null===n?e.matrix.copy(t.matrixWorld):(e.matrix.copy(n.matrixWorld),e.matrix.invert(),e.matrix.multiply(t.matrixWorld)),e.matrix.decompose(e.position,e.quaternion,e.scale),e.updateMatrixWorld(!0);const i=e.children;for(let e=0,t=i.length;e<t;e++)i[e].updateMatrixWorld(!0);e.projectionMatrix.copy(t.projectionMatrix),e.projectionMatrixInverse.copy(t.projectionMatrixInverse),e.isPerspectiveCamera&&(e.fov=2*le*Math.atan(1/e.projectionMatrix.elements[5]),e.zoom=1)}(e,S,t)},this.getCamera=function(){return S},this.getFoveation=function(){if(null!==d||null!==h)return o},this.setFoveation=function(e){o=e,null!==d&&(d.fixedFoveation=e),null!==h&&void 0!==h.fixedFoveation&&(h.fixedFoveation=e)},this.getPlanes=function(){return v};let U=null;const I=new hi;I.setAnimationLoop((function(t,i){if(l=i.getViewerPose(c||a),f=i,null!==l){const t=l.views;null!==h&&(e.setRenderTargetFramebuffer(m,h.framebuffer),e.setRenderTarget(m));let n=!1;t.length!==S.cameras.length&&(S.cameras.length=0,n=!0);for(let i=0;i<t.length;i++){const r=t[i];let a=null;if(null!==h)a=h.getViewport(r);else{const t=u.getViewSubImage(d,r);a=t.viewport,0===i&&(e.setRenderTargetTextures(m,t.colorTexture,d.ignoreDepthValues?void 0:t.depthStencilTexture),e.setRenderTarget(m))}let s=M[i];void 0===s&&(s=new ei,s.layers.enable(i),s.viewport=new ze,M[i]=s),s.matrix.fromArray(r.transform.matrix),s.matrix.decompose(s.position,s.quaternion,s.scale),s.projectionMatrix.fromArray(r.projectionMatrix),s.projectionMatrixInverse.copy(s.projectionMatrix).invert(),s.viewport.set(a.x,a.y,a.width,a.height),0===i&&(S.matrix.copy(s.matrix),S.matrix.decompose(S.position,S.quaternion,S.scale)),!0===n&&S.cameras.push(s)}}for(let e=0;e<g.length;e++){const t=b[e],n=g[e];null!==t&&void 0!==n&&n.update(t,i,c||a)}if(U&&U(t,i),i.detectedPlanes){n.dispatchEvent({type:"planesdetected",data:i.detectedPlanes});let e=null;for(const t of v)i.detectedPlanes.has(t)||(null===e&&(e=[]),e.push(t));if(null!==e)for(const t of e)v.delete(t),x.delete(t),n.dispatchEvent({type:"planeremoved",data:t});for(const e of i.detectedPlanes)if(v.has(e)){const t=x.get(e);e.lastChangedTime>t&&(x.set(e,e.lastChangedTime),n.dispatchEvent({type:"planechanged",data:e}))}else v.add(e),x.set(e,i.lastChangedTime),n.dispatchEvent({type:"planeadded",data:e})}f=null})),this.setAnimationLoop=function(e){U=e},this.dispose=function(){}}}function Ha(e,t){function n(e,t){!0===e.matrixAutoUpdate&&e.updateMatrix(),t.value.copy(e.matrix)}function i(i,r){i.opacity.value=r.opacity,r.color&&i.diffuse.value.copy(r.color),r.emissive&&i.emissive.value.copy(r.emissive).multiplyScalar(r.emissiveIntensity),r.map&&(i.map.value=r.map,n(r.map,i.mapTransform)),r.alphaMap&&(i.alphaMap.value=r.alphaMap,n(r.alphaMap,i.alphaMapTransform)),r.bumpMap&&(i.bumpMap.value=r.bumpMap,n(r.bumpMap,i.bumpMapTransform),i.bumpScale.value=r.bumpScale,1===r.side&&(i.bumpScale.value*=-1)),r.normalMap&&(i.normalMap.value=r.normalMap,n(r.normalMap,i.normalMapTransform),i.normalScale.value.copy(r.normalScale),1===r.side&&i.normalScale.value.negate()),r.displacementMap&&(i.displacementMap.value=r.displacementMap,n(r.displacementMap,i.displacementMapTransform),i.displacementScale.value=r.displacementScale,i.displacementBias.value=r.displacementBias),r.emissiveMap&&(i.emissiveMap.value=r.emissiveMap,n(r.emissiveMap,i.emissiveMapTransform)),r.specularMap&&(i.specularMap.value=r.specularMap,n(r.specularMap,i.specularMapTransform)),r.alphaTest>0&&(i.alphaTest.value=r.alphaTest);const a=t.get(r).envMap;if(a&&(i.envMap.value=a,i.flipEnvMap.value=a.isCubeTexture&&!1===a.isRenderTargetTexture?-1:1,i.reflectivity.value=r.reflectivity,i.ior.value=r.ior,i.refractionRatio.value=r.refractionRatio),r.lightMap){i.lightMap.value=r.lightMap;const t=!0===e.useLegacyLights?Math.PI:1;i.lightMapIntensity.value=r.lightMapIntensity*t,n(r.lightMap,i.lightMapTransform)}r.aoMap&&(i.aoMap.value=r.aoMap,i.aoMapIntensity.value=r.aoMapIntensity,n(r.aoMap,i.aoMapTransform))}return{refreshFogUniforms:function(t,n){n.color.getRGB(t.fogColor.value,Zn(e)),n.isFog?(t.fogNear.value=n.near,t.fogFar.value=n.far):n.isFogExp2&&(t.fogDensity.value=n.density)},refreshMaterialUniforms:function(e,r,a,s,o){r.isMeshBasicMaterial||r.isMeshLambertMaterial?i(e,r):r.isMeshToonMaterial?(i(e,r),function(e,t){t.gradientMap&&(e.gradientMap.value=t.gradientMap)}(e,r)):r.isMeshPhongMaterial?(i(e,r),function(e,t){e.specular.value.copy(t.specular),e.shininess.value=Math.max(t.shininess,1e-4)}(e,r)):r.isMeshStandardMaterial?(i(e,r),function(e,i){e.metalness.value=i.metalness,i.metalnessMap&&(e.metalnessMap.value=i.metalnessMap,n(i.metalnessMap,e.metalnessMapTransform)),e.roughness.value=i.roughness,i.roughnessMap&&(e.roughnessMap.value=i.roughnessMap,n(i.roughnessMap,e.roughnessMapTransform));t.get(i).envMap&&(e.envMapIntensity.value=i.envMapIntensity)}(e,r),r.isMeshPhysicalMaterial&&function(e,t,i){e.ior.value=t.ior,t.sheen>0&&(e.sheenColor.value.copy(t.sheenColor).multiplyScalar(t.sheen),e.sheenRoughness.value=t.sheenRoughness,t.sheenColorMap&&(e.sheenColorMap.value=t.sheenColorMap,n(t.sheenColorMap,e.sheenColorMapTransform)),t.sheenRoughnessMap&&(e.sheenRoughnessMap.value=t.sheenRoughnessMap,n(t.sheenRoughnessMap,e.sheenRoughnessMapTransform))),t.clearcoat>0&&(e.clearcoat.value=t.clearcoat,e.clearcoatRoughness.value=t.clearcoatRoughness,t.clearcoatMap&&(e.clearcoatMap.value=t.clearcoatMap,n(t.clearcoatMap,e.clearcoatMapTransform)),t.clearcoatRoughnessMap&&(e.clearcoatRoughnessMap.value=t.clearcoatRoughnessMap,n(t.clearcoatRoughnessMap,e.clearcoatRoughnessMapTransform)),t.clearcoatNormalMap&&(e.clearcoatNormalMap.value=t.clearcoatNormalMap,n(t.clearcoatNormalMap,e.clearcoatNormalMapTransform),e.clearcoatNormalScale.value.copy(t.clearcoatNormalScale),1===t.side&&e.clearcoatNormalScale.value.negate())),t.iridescence>0&&(e.iridescence.value=t.iridescence,e.iridescenceIOR.value=t.iridescenceIOR,e.iridescenceThicknessMinimum.value=t.iridescenceThicknessRange[0],e.iridescenceThicknessMaximum.value=t.iridescenceThicknessRange[1],t.iridescenceMap&&(e.iridescenceMap.value=t.iridescenceMap,n(t.iridescenceMap,e.iridescenceMapTransform)),t.iridescenceThicknessMap&&(e.iridescenceThicknessMap.value=t.iridescenceThicknessMap,n(t.iridescenceThicknessMap,e.iridescenceThicknessMapTransform))),t.transmission>0&&(e.transmission.value=t.transmission,e.transmissionSamplerMap.value=i.texture,e.transmissionSamplerSize.value.set(i.width,i.height),t.transmissionMap&&(e.transmissionMap.value=t.transmissionMap,n(t.transmissionMap,e.transmissionMapTransform)),e.thickness.value=t.thickness,t.thicknessMap&&(e.thicknessMap.value=t.thicknessMap,n(t.thicknessMap,e.thicknessMapTransform)),e.attenuationDistance.value=t.attenuationDistance,e.attenuationColor.value.copy(t.attenuationColor)),e.specularIntensity.value=t.specularIntensity,e.specularColor.value.copy(t.specularColor),t.specularColorMap&&(e.specularColorMap.value=t.specularColorMap,n(t.specularColorMap,e.specularColorMapTransform)),t.specularIntensityMap&&(e.specularIntensityMap.value=t.specularIntensityMap,n(t.specularIntensityMap,e.specularIntensityMapTransform))}(e,r,o)):r.isMeshMatcapMaterial?(i(e,r),function(e,t){t.matcap&&(e.matcap.value=t.matcap)}(e,r)):r.isMeshDepthMaterial?i(e,r):r.isMeshDistanceMaterial?(i(e,r),function(e,n){const i=t.get(n).light;e.referencePosition.value.setFromMatrixPosition(i.matrixWorld),e.nearDistance.value=i.shadow.camera.near,e.farDistance.value=i.shadow.camera.far}(e,r)):r.isMeshNormalMaterial?i(e,r):r.isLineBasicMaterial?(function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform))}(e,r),r.isLineDashedMaterial&&function(e,t){e.dashSize.value=t.dashSize,e.totalSize.value=t.dashSize+t.gapSize,e.scale.value=t.scale}(e,r)):r.isPointsMaterial?function(e,t,i,r){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.size.value=t.size*i,e.scale.value=.5*r,t.map&&(e.map.value=t.map,n(t.map,e.uvTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r,a,s):r.isSpriteMaterial?function(e,t){e.diffuse.value.copy(t.color),e.opacity.value=t.opacity,e.rotation.value=t.rotation,t.map&&(e.map.value=t.map,n(t.map,e.mapTransform)),t.alphaMap&&(e.alphaMap.value=t.alphaMap),t.alphaTest>0&&(e.alphaTest.value=t.alphaTest)}(e,r):r.isShadowMaterial?(e.color.value.copy(r.color),e.opacity.value=r.opacity):r.isShaderMaterial&&(r.uniformsNeedUpdate=!1)}}}function Ga(e,t,n,i){let r={},a={},s=[];const o=n.isWebGL2?e.getParameter(e.MAX_UNIFORM_BUFFER_BINDINGS):0;function c(e,t,n){const i=e.value;if(void 0===n[t]){if("number"==typeof i)n[t]=i;else{const e=Array.isArray(i)?i:[i],r=[];for(let t=0;t<e.length;t++)r.push(e[t].clone());n[t]=r}return!0}if("number"==typeof i){if(n[t]!==i)return n[t]=i,!0}else{const e=Array.isArray(n[t])?n[t]:[n[t]],r=Array.isArray(i)?i:[i];for(let t=0;t<e.length;t++){const n=e[t];if(!1===n.equals(r[t]))return n.copy(r[t]),!0}}return!1}function l(e){const t={boundary:0,storage:0};return"number"==typeof e?(t.boundary=4,t.storage=4):e.isVector2?(t.boundary=8,t.storage=8):e.isVector3||e.isColor?(t.boundary=16,t.storage=12):e.isVector4?(t.boundary=16,t.storage=16):e.isMatrix3?(t.boundary=48,t.storage=48):e.isMatrix4?(t.boundary=64,t.storage=64):e.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",e),t}function u(t){const n=t.target;n.removeEventListener("dispose",u);const i=s.indexOf(n.__bindingPointIndex);s.splice(i,1),e.deleteBuffer(r[n.id]),delete r[n.id],delete a[n.id]}return{bind:function(e,t){const n=t.program;i.uniformBlockBinding(e,n)},update:function(n,d){let h=r[n.id];void 0===h&&(function(e){const t=e.uniforms;let n=0;let i=0;for(let e=0,r=t.length;e<r;e++){const r=t[e],a={boundary:0,storage:0},s=Array.isArray(r.value)?r.value:[r.value];for(let e=0,t=s.length;e<t;e++){const t=l(s[e]);a.boundary+=t.boundary,a.storage+=t.storage}r.__data=new Float32Array(a.storage/Float32Array.BYTES_PER_ELEMENT),r.__offset=n,e>0&&(i=n%16,0!==i&&16-i-a.boundary<0&&(n+=16-i,r.__offset=n)),n+=a.storage}i=n%16,i>0&&(n+=16-i),e.__size=n,e.__cache={}}(n),h=function(t){const n=function(){for(let e=0;e<o;e++)if(-1===s.indexOf(e))return s.push(e),e;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}();t.__bindingPointIndex=n;const i=e.createBuffer(),r=t.__size,a=t.usage;return e.bindBuffer(e.UNIFORM_BUFFER,i),e.bufferData(e.UNIFORM_BUFFER,r,a),e.bindBuffer(e.UNIFORM_BUFFER,null),e.bindBufferBase(e.UNIFORM_BUFFER,n,i),i}(n),r[n.id]=h,n.addEventListener("dispose",u));const f=d.program;i.updateUBOMapping(n,f);const p=t.render.frame;a[n.id]!==p&&(function(t){const n=r[t.id],i=t.uniforms,a=t.__cache;e.bindBuffer(e.UNIFORM_BUFFER,n);for(let t=0,n=i.length;t<n;t++){const n=i[t];if(!0===c(n,t,a)){const t=n.__offset,i=Array.isArray(n.value)?n.value:[n.value];let r=0;for(let a=0;a<i.length;a++){const s=i[a],o=l(s);"number"==typeof s?(n.__data[0]=s,e.bufferSubData(e.UNIFORM_BUFFER,t+r,n.__data)):s.isMatrix3?(n.__data[0]=s.elements[0],n.__data[1]=s.elements[1],n.__data[2]=s.elements[2],n.__data[3]=s.elements[0],n.__data[4]=s.elements[3],n.__data[5]=s.elements[4],n.__data[6]=s.elements[5],n.__data[7]=s.elements[0],n.__data[8]=s.elements[6],n.__data[9]=s.elements[7],n.__data[10]=s.elements[8],n.__data[11]=s.elements[0]):(s.toArray(n.__data,r),r+=o.storage/Float32Array.BYTES_PER_ELEMENT)}e.bufferSubData(e.UNIFORM_BUFFER,t,n.__data)}}e.bindBuffer(e.UNIFORM_BUFFER,null)}(n),a[n.id]=p)},dispose:function(){for(const t in r)e.deleteBuffer(r[t]);s=[],r={},a={}}}}function ka(){const e=Me("canvas");return e.style.display="block",e}class Va{constructor(e={}){const{canvas:t=ka(),context:n=null,depth:r=!0,stencil:a=!0,alpha:s=!1,antialias:o=!1,premultipliedAlpha:l=!0,preserveDrawingBuffer:u=!1,powerPreference:d="default",failIfMajorPerformanceCaveat:h=!1}=e;let f;this.isWebGLRenderer=!0,f=null!==n?n.getContextAttributes().alpha:s;let p=null,_=null;const m=[],g=[];this.domElement=t,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputColorSpace=$,this.useLegacyLights=!0,this.toneMapping=0,this.toneMappingExposure=1;const b=this;let v=!1,x=0,w=0,y=null,M=-1,S=null;const E=new ze,T=new ze;let A=null,R=t.width,P=t.height,C=1,L=null,D=null;const U=new ze(0,0,R,P),O=new ze(0,0,R,P);let z=!1;const G=new di;let k=!1,V=!1,W=null;const X=new xt,j=new We,q={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Y(){return null===y?C:1}let K,Z,J,ee,te,ne,ie,re,ae,se,oe,ce,le,ue,de,he,fe,pe,_e,me,ge,be,ve,xe,we=n;function ye(e,n){for(let i=0;i<e.length;i++){const r=e[i],a=t.getContext(r,n);if(null!==a)return a}return null}try{const e={alpha:!0,depth:r,stencil:a,antialias:o,premultipliedAlpha:l,preserveDrawingBuffer:u,powerPreference:d,failIfMajorPerformanceCaveat:h};if("setAttribute"in t&&t.setAttribute("data-engine",`three.js r${i}`),t.addEventListener("webglcontextlost",Ee,!1),t.addEventListener("webglcontextrestored",Te,!1),t.addEventListener("webglcontextcreationerror",Ae,!1),null===we){const t=["webgl2","webgl","experimental-webgl"];if(!0===b.isWebGL1Renderer&&t.shift(),we=ye(t,e),null===we)throw ye(t)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}void 0===we.getShaderPrecisionFormat&&(we.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(e){throw console.error("THREE.WebGLRenderer: "+e.message),e}function Me(){K=new zi(we),Z=new yi(we,K,e),K.init(Z),be=new Ua(we,K,Z),J=new La(we,K,Z),ee=new ki(we),te=new ga,ne=new Da(we,K,J,te,Z,be,ee),ie=new Si(b),re=new Bi(b),ae=new fi(we,Z),ve=new xi(we,K,ae,Z),se=new Hi(we,ae,ee,ve),oe=new ji(we,se,ae,ee),_e=new Xi(we,Z,ne),he=new Mi(te),ce=new ma(b,ie,re,K,Z,ve,he),le=new Ha(b,te),ue=new wa,de=new Aa(K,Z),pe=new vi(b,ie,re,J,oe,f,l),fe=new Ca(b,oe,Z),xe=new Ga(we,ee,Z,J),me=new wi(we,K,ee,Z),ge=new Gi(we,K,ee,Z),ee.programs=ce.programs,b.capabilities=Z,b.extensions=K,b.properties=te,b.renderLists=ue,b.shadowMap=fe,b.state=J,b.info=ee}Me();const Se=new za(b,we);function Ee(e){e.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function Te(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const e=ee.autoReset,t=fe.enabled,n=fe.autoUpdate,i=fe.needsUpdate,r=fe.type;Me(),ee.autoReset=e,fe.enabled=t,fe.autoUpdate=n,fe.needsUpdate=i,fe.type=r}function Ae(e){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",e.statusMessage)}function Re(e){const t=e.target;t.removeEventListener("dispose",Re),function(e){(function(e){const t=te.get(e).programs;void 0!==t&&(t.forEach((function(e){ce.releaseProgram(e)})),e.isShaderMaterial&&ce.releaseShaderCache(e))})(e),te.remove(e)}(t)}this.xr=Se,this.getContext=function(){return we},this.getContextAttributes=function(){return we.getContextAttributes()},this.forceContextLoss=function(){const e=K.get("WEBGL_lose_context");e&&e.loseContext()},this.forceContextRestore=function(){const e=K.get("WEBGL_lose_context");e&&e.restoreContext()},this.getPixelRatio=function(){return C},this.setPixelRatio=function(e){void 0!==e&&(C=e,this.setSize(R,P,!1))},this.getSize=function(e){return e.set(R,P)},this.setSize=function(e,n,i=!0){Se.isPresenting?console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting."):(R=e,P=n,t.width=Math.floor(e*C),t.height=Math.floor(n*C),!0===i&&(t.style.width=e+"px",t.style.height=n+"px"),this.setViewport(0,0,e,n))},this.getDrawingBufferSize=function(e){return e.set(R*C,P*C).floor()},this.setDrawingBufferSize=function(e,n,i){R=e,P=n,C=i,t.width=Math.floor(e*i),t.height=Math.floor(n*i),this.setViewport(0,0,e,n)},this.getCurrentViewport=function(e){return e.copy(E)},this.getViewport=function(e){return e.copy(U)},this.setViewport=function(e,t,n,i){e.isVector4?U.set(e.x,e.y,e.z,e.w):U.set(e,t,n,i),J.viewport(E.copy(U).multiplyScalar(C).floor())},this.getScissor=function(e){return e.copy(O)},this.setScissor=function(e,t,n,i){e.isVector4?O.set(e.x,e.y,e.z,e.w):O.set(e,t,n,i),J.scissor(T.copy(O).multiplyScalar(C).floor())},this.getScissorTest=function(){return z},this.setScissorTest=function(e){J.setScissorTest(z=e)},this.setOpaqueSort=function(e){L=e},this.setTransparentSort=function(e){D=e},this.getClearColor=function(e){return e.copy(pe.getClearColor())},this.setClearColor=function(){pe.setClearColor.apply(pe,arguments)},this.getClearAlpha=function(){return pe.getClearAlpha()},this.setClearAlpha=function(){pe.setClearAlpha.apply(pe,arguments)},this.clear=function(e=!0,t=!0,n=!0){let i=0;e&&(i|=we.COLOR_BUFFER_BIT),t&&(i|=we.DEPTH_BUFFER_BIT),n&&(i|=we.STENCIL_BUFFER_BIT),we.clear(i)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){t.removeEventListener("webglcontextlost",Ee,!1),t.removeEventListener("webglcontextrestored",Te,!1),t.removeEventListener("webglcontextcreationerror",Ae,!1),ue.dispose(),de.dispose(),te.dispose(),ie.dispose(),re.dispose(),oe.dispose(),ve.dispose(),xe.dispose(),ce.dispose(),Se.dispose(),Se.removeEventListener("sessionstart",Ce),Se.removeEventListener("sessionend",Le),W&&(W.dispose(),W=null),De.stop()},this.renderBufferDirect=function(e,t,n,i,r,a){null===t&&(t=q);const s=r.isMesh&&r.matrixWorld.determinant()<0,o=function(e,t,n,i,r){!0!==t.isScene&&(t=q),ne.resetTextureUnits();const a=t.fog,s=i.isMeshStandardMaterial?t.environment:null,o=null===y?b.outputColorSpace:!0===y.isXRRenderTarget?y.texture.colorSpace:Q,c=(i.isMeshStandardMaterial?re:ie).get(i.envMap||s),l=!0===i.vertexColors&&!!n.attributes.color&&4===n.attributes.color.itemSize,u=!!i.normalMap&&!!n.attributes.tangent,d=!!n.morphAttributes.position,h=!!n.morphAttributes.normal,f=!!n.morphAttributes.color,p=i.toneMapped?b.toneMapping:0,m=n.morphAttributes.position||n.morphAttributes.normal||n.morphAttributes.color,g=void 0!==m?m.length:0,v=te.get(i),x=_.state.lights;if(!0===k&&(!0===V||e!==S)){const t=e===S&&i.id===M;he.setState(i,e,t)}let w=!1;i.version===v.__version?v.needsLights&&v.lightsStateVersion!==x.state.version||v.outputColorSpace!==o||r.isInstancedMesh&&!1===v.instancing?w=!0:r.isInstancedMesh||!0!==v.instancing?r.isSkinnedMesh&&!1===v.skinning?w=!0:r.isSkinnedMesh||!0!==v.skinning?v.envMap!==c||!0===i.fog&&v.fog!==a?w=!0:void 0===v.numClippingPlanes||v.numClippingPlanes===he.numPlanes&&v.numIntersection===he.numIntersection?(v.vertexAlphas!==l||v.vertexTangents!==u||v.morphTargets!==d||v.morphNormals!==h||v.morphColors!==f||v.toneMapping!==p||!0===Z.isWebGL2&&v.morphTargetsCount!==g)&&(w=!0):w=!0:w=!0:w=!0:(w=!0,v.__version=i.version);let E=v.currentProgram;!0===w&&(E=Fe(i,t,r));let T=!1,A=!1,R=!1;const L=E.getUniforms(),D=v.uniforms;if(J.useProgram(E.program)&&(T=!0,A=!0,R=!0),i.id!==M&&(M=i.id,A=!0),T||S!==e){if(L.setValue(we,"projectionMatrix",e.projectionMatrix),Z.logarithmicDepthBuffer&&L.setValue(we,"logDepthBufFC",2/(Math.log(e.far+1)/Math.LN2)),S!==e&&(S=e,A=!0,R=!0),i.isShaderMaterial||i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshStandardMaterial||i.envMap){const t=L.map.cameraPosition;void 0!==t&&t.setValue(we,j.setFromMatrixPosition(e.matrixWorld))}(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial)&&L.setValue(we,"isOrthographic",!0===e.isOrthographicCamera),(i.isMeshPhongMaterial||i.isMeshToonMaterial||i.isMeshLambertMaterial||i.isMeshBasicMaterial||i.isMeshStandardMaterial||i.isShaderMaterial||i.isShadowMaterial||r.isSkinnedMesh)&&L.setValue(we,"viewMatrix",e.matrixWorldInverse)}if(r.isSkinnedMesh){L.setOptional(we,r,"bindMatrix"),L.setOptional(we,r,"bindMatrixInverse");const e=r.skeleton;e&&(Z.floatVertexTextures?(null===e.boneTexture&&e.computeBoneTexture(),L.setValue(we,"boneTexture",e.boneTexture,ne),L.setValue(we,"boneTextureSize",e.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const U=n.morphAttributes;var I,N;if((void 0!==U.position||void 0!==U.normal||void 0!==U.color&&!0===Z.isWebGL2)&&_e.update(r,n,E),(A||v.receiveShadow!==r.receiveShadow)&&(v.receiveShadow=r.receiveShadow,L.setValue(we,"receiveShadow",r.receiveShadow)),i.isMeshGouraudMaterial&&null!==i.envMap&&(D.envMap.value=c,D.flipEnvMap.value=c.isCubeTexture&&!1===c.isRenderTargetTexture?-1:1),A&&(L.setValue(we,"toneMappingExposure",b.toneMappingExposure),v.needsLights&&(N=R,(I=D).ambientLightColor.needsUpdate=N,I.lightProbe.needsUpdate=N,I.directionalLights.needsUpdate=N,I.directionalLightShadows.needsUpdate=N,I.pointLights.needsUpdate=N,I.pointLightShadows.needsUpdate=N,I.spotLights.needsUpdate=N,I.spotLightShadows.needsUpdate=N,I.rectAreaLights.needsUpdate=N,I.hemisphereLights.needsUpdate=N),a&&!0===i.fog&&le.refreshFogUniforms(D,a),le.refreshMaterialUniforms(D,i,C,P,W),Zr.upload(we,v.uniformsList,D,ne)),i.isShaderMaterial&&!0===i.uniformsNeedUpdate&&(Zr.upload(we,v.uniformsList,D,ne),i.uniformsNeedUpdate=!1),i.isSpriteMaterial&&L.setValue(we,"center",r.center),L.setValue(we,"modelViewMatrix",r.modelViewMatrix),L.setValue(we,"normalMatrix",r.normalMatrix),L.setValue(we,"modelMatrix",r.matrixWorld),i.isShaderMaterial||i.isRawShaderMaterial){const e=i.uniformsGroups;for(let t=0,n=e.length;t<n;t++)if(Z.isWebGL2){const n=e[t];xe.update(n,E),xe.bind(n,E)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return E}(e,t,n,i,r);J.setMaterial(i,s);let c=n.index,l=1;!0===i.wireframe&&(c=se.getWireframeAttribute(n),l=2);const u=n.drawRange,d=n.attributes.position;let h=u.start*l,f=(u.start+u.count)*l;null!==a&&(h=Math.max(h,a.start*l),f=Math.min(f,(a.start+a.count)*l)),null!==c?(h=Math.max(h,0),f=Math.min(f,c.count)):null!=d&&(h=Math.max(h,0),f=Math.min(f,d.count));const p=f-h;if(p<0||p===1/0)return;let m;ve.setup(r,i,o,n,c);let g=me;if(null!==c&&(m=ae.get(c),g=ge,g.setIndex(m)),r.isMesh)!0===i.wireframe?(J.setLineWidth(i.wireframeLinewidth*Y()),g.setMode(we.LINES)):g.setMode(we.TRIANGLES);else if(r.isLine){let e=i.linewidth;void 0===e&&(e=1),J.setLineWidth(e*Y()),r.isLineSegments?g.setMode(we.LINES):r.isLineLoop?g.setMode(we.LINE_LOOP):g.setMode(we.LINE_STRIP)}else r.isPoints?g.setMode(we.POINTS):r.isSprite&&g.setMode(we.TRIANGLES);if(r.isInstancedMesh)g.renderInstances(h,p,r.count);else if(n.isInstancedBufferGeometry){const e=void 0!==n._maxInstanceCount?n._maxInstanceCount:1/0,t=Math.min(n.instanceCount,e);g.renderInstances(h,p,t)}else g.render(h,p)},this.compile=function(e,t){function n(e,t,n){!0===e.transparent&&e.side===c&&!1===e.forceSinglePass?(e.side=1,e.needsUpdate=!0,Fe(e,t,n),e.side=0,e.needsUpdate=!0,Fe(e,t,n),e.side=c):Fe(e,t,n)}_=de.get(e),_.init(),g.push(_),e.traverseVisible((function(e){e.isLight&&e.layers.test(t.layers)&&(_.pushLight(e),e.castShadow&&_.pushShadow(e))})),_.setupLights(b.useLegacyLights),e.traverse((function(t){const i=t.material;if(i)if(Array.isArray(i))for(let r=0;r<i.length;r++)n(i[r],e,t);else n(i,e,t)})),g.pop(),_=null};let Pe=null;function Ce(){De.stop()}function Le(){De.start()}const De=new hi;function Ue(e,t,n,i){if(!1===e.visible)return;if(e.layers.test(t.layers))if(e.isGroup)n=e.renderOrder;else if(e.isLOD)!0===e.autoUpdate&&e.update(t);else if(e.isLight)_.pushLight(e),e.castShadow&&_.pushShadow(e);else if(e.isSprite){if(!e.frustumCulled||G.intersectsSprite(e)){i&&j.setFromMatrixPosition(e.matrixWorld).applyMatrix4(X);const t=oe.update(e),r=e.material;r.visible&&p.push(e,t,r,n,j.z,null)}}else if((e.isMesh||e.isLine||e.isPoints)&&(!e.frustumCulled||G.intersectsObject(e))){e.isSkinnedMesh&&e.skeleton.frame!==ee.render.frame&&(e.skeleton.update(),e.skeleton.frame=ee.render.frame);const t=oe.update(e),r=e.material;if(i&&(null===t.boundingSphere&&t.computeBoundingSphere(),j.copy(t.boundingSphere.center).applyMatrix4(e.matrixWorld).applyMatrix4(X)),Array.isArray(r)){const i=t.groups;for(let a=0,s=i.length;a<s;a++){const s=i[a],o=r[s.materialIndex];o&&o.visible&&p.push(e,t,o,n,j.z,s)}}else r.visible&&p.push(e,t,r,n,j.z,null)}const r=e.children;for(let e=0,a=r.length;e<a;e++)Ue(r[e],t,n,i)}function Ie(e,t,n,i){const r=e.opaque,a=e.transmissive,s=e.transparent;_.setupLightsView(n),!0===k&&he.setGlobalState(b.clippingPlanes,n),a.length>0&&function(e,t,n,i){if(null===W){const e=Z.isWebGL2;W=new He(1024,1024,{generateMipmaps:!0,type:K.has("EXT_color_buffer_half_float")?B:N,minFilter:I,samples:e&&!0===o?4:0})}const r=b.getRenderTarget();b.setRenderTarget(W),b.clear();const a=b.toneMapping;b.toneMapping=0,Ne(e,n,i),ne.updateMultisampleRenderTarget(W),ne.updateRenderTargetMipmap(W);let s=!1;for(let e=0,r=t.length;e<r;e++){const r=t[e],a=r.object,o=r.geometry,l=r.material,u=r.group;if(l.side===c&&a.layers.test(i.layers)){const e=l.side;l.side=1,l.needsUpdate=!0,Oe(a,n,i,o,l,u),l.side=e,l.needsUpdate=!0,s=!0}}!0===s&&(ne.updateMultisampleRenderTarget(W),ne.updateRenderTargetMipmap(W)),b.setRenderTarget(r),b.toneMapping=a}(r,a,t,n),i&&J.viewport(E.copy(i)),r.length>0&&Ne(r,t,n),a.length>0&&Ne(a,t,n),s.length>0&&Ne(s,t,n),J.buffers.depth.setTest(!0),J.buffers.depth.setMask(!0),J.buffers.color.setMask(!0),J.setPolygonOffset(!1)}function Ne(e,t,n){const i=!0===t.isScene?t.overrideMaterial:null;for(let r=0,a=e.length;r<a;r++){const a=e[r],s=a.object,o=a.geometry,c=null===i?a.material:i,l=a.group;s.layers.test(n.layers)&&Oe(s,t,n,o,c,l)}}function Oe(e,t,n,i,r,a){e.onBeforeRender(b,t,n,i,r,a),e.modelViewMatrix.multiplyMatrices(n.matrixWorldInverse,e.matrixWorld),e.normalMatrix.getNormalMatrix(e.modelViewMatrix),r.onBeforeRender(b,t,n,i,e,a),!0===r.transparent&&r.side===c&&!1===r.forceSinglePass?(r.side=1,r.needsUpdate=!0,b.renderBufferDirect(n,t,i,r,e,a),r.side=0,r.needsUpdate=!0,b.renderBufferDirect(n,t,i,r,e,a),r.side=c):b.renderBufferDirect(n,t,i,r,e,a),e.onAfterRender(b,t,n,i,r,a)}function Fe(e,t,n){!0!==t.isScene&&(t=q);const i=te.get(e),r=_.state.lights,a=_.state.shadowsArray,s=r.state.version,o=ce.getParameters(e,r.state,a,t,n),c=ce.getProgramCacheKey(o);let l=i.programs;i.environment=e.isMeshStandardMaterial?t.environment:null,i.fog=t.fog,i.envMap=(e.isMeshStandardMaterial?re:ie).get(e.envMap||i.environment),void 0===l&&(e.addEventListener("dispose",Re),l=new Map,i.programs=l);let u=l.get(c);if(void 0!==u){if(i.currentProgram===u&&i.lightsStateVersion===s)return Be(e,o),u}else o.uniforms=ce.getUniforms(e),e.onBuild(n,o,b),e.onBeforeCompile(o,b),u=ce.acquireProgram(o,c),l.set(c,u),i.uniforms=o.uniforms;const d=i.uniforms;(e.isShaderMaterial||e.isRawShaderMaterial)&&!0!==e.clipping||(d.clippingPlanes=he.uniform),Be(e,o),i.needsLights=function(e){return e.isMeshLambertMaterial||e.isMeshToonMaterial||e.isMeshPhongMaterial||e.isMeshStandardMaterial||e.isShadowMaterial||e.isShaderMaterial&&!0===e.lights}(e),i.lightsStateVersion=s,i.needsLights&&(d.ambientLightColor.value=r.state.ambient,d.lightProbe.value=r.state.probe,d.directionalLights.value=r.state.directional,d.directionalLightShadows.value=r.state.directionalShadow,d.spotLights.value=r.state.spot,d.spotLightShadows.value=r.state.spotShadow,d.rectAreaLights.value=r.state.rectArea,d.ltc_1.value=r.state.rectAreaLTC1,d.ltc_2.value=r.state.rectAreaLTC2,d.pointLights.value=r.state.point,d.pointLightShadows.value=r.state.pointShadow,d.hemisphereLights.value=r.state.hemi,d.directionalShadowMap.value=r.state.directionalShadowMap,d.directionalShadowMatrix.value=r.state.directionalShadowMatrix,d.spotShadowMap.value=r.state.spotShadowMap,d.spotLightMatrix.value=r.state.spotLightMatrix,d.spotLightMap.value=r.state.spotLightMap,d.pointShadowMap.value=r.state.pointShadowMap,d.pointShadowMatrix.value=r.state.pointShadowMatrix);const h=u.getUniforms(),f=Zr.seqWithValue(h.seq,d);return i.currentProgram=u,i.uniformsList=f,u}function Be(e,t){const n=te.get(e);n.outputColorSpace=t.outputColorSpace,n.instancing=t.instancing,n.skinning=t.skinning,n.morphTargets=t.morphTargets,n.morphNormals=t.morphNormals,n.morphColors=t.morphColors,n.morphTargetsCount=t.morphTargetsCount,n.numClippingPlanes=t.numClippingPlanes,n.numIntersection=t.numClipIntersection,n.vertexAlphas=t.vertexAlphas,n.vertexTangents=t.vertexTangents,n.toneMapping=t.toneMapping}De.setAnimationLoop((function(e){Pe&&Pe(e)})),"undefined"!=typeof self&&De.setContext(self),this.setAnimationLoop=function(e){Pe=e,Se.setAnimationLoop(e),null===e?De.stop():De.start()},Se.addEventListener("sessionstart",Ce),Se.addEventListener("sessionend",Le),this.render=function(e,t){if(void 0!==t&&!0!==t.isCamera)return void console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");if(!0===v)return;!0===e.matrixWorldAutoUpdate&&e.updateMatrixWorld(),null===t.parent&&!0===t.matrixWorldAutoUpdate&&t.updateMatrixWorld(),!0===Se.enabled&&!0===Se.isPresenting&&(!0===Se.cameraAutoUpdate&&Se.updateCamera(t),t=Se.getCamera()),!0===e.isScene&&e.onBeforeRender(b,e,t,y),_=de.get(e,g.length),_.init(),g.push(_),X.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),G.setFromProjectionMatrix(X),V=this.localClippingEnabled,k=he.init(this.clippingPlanes,V),p=ue.get(e,m.length),p.init(),m.push(p),Ue(e,t,0,b.sortObjects),p.finish(),!0===b.sortObjects&&p.sort(L,D),!0===k&&he.beginShadows();const n=_.state.shadowsArray;if(fe.render(n,e,t),!0===k&&he.endShadows(),!0===this.info.autoReset&&this.info.reset(),pe.render(p,e),_.setupLights(b.useLegacyLights),t.isArrayCamera){const n=t.cameras;for(let t=0,i=n.length;t<i;t++){const i=n[t];Ie(p,e,i,i.viewport)}}else Ie(p,e,t);null!==y&&(ne.updateMultisampleRenderTarget(y),ne.updateRenderTargetMipmap(y)),!0===e.isScene&&e.onAfterRender(b,e,t),ve.resetDefaultState(),M=-1,S=null,g.pop(),_=g.length>0?g[g.length-1]:null,m.pop(),p=m.length>0?m[m.length-1]:null},this.getActiveCubeFace=function(){return x},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return y},this.setRenderTargetTextures=function(e,t,n){te.get(e.texture).__webglTexture=t,te.get(e.depthTexture).__webglTexture=n;const i=te.get(e);i.__hasExternalTextures=!0,i.__hasExternalTextures&&(i.__autoAllocateDepthBuffer=void 0===n,i.__autoAllocateDepthBuffer||!0===K.has("WEBGL_multisampled_render_to_texture")&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),i.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(e,t){const n=te.get(e);n.__webglFramebuffer=t,n.__useDefaultFramebuffer=void 0===t},this.setRenderTarget=function(e,t=0,n=0){y=e,x=t,w=n;let i=!0,r=null,a=!1,s=!1;if(e){const n=te.get(e);void 0!==n.__useDefaultFramebuffer?(J.bindFramebuffer(we.FRAMEBUFFER,null),i=!1):void 0===n.__webglFramebuffer?ne.setupRenderTarget(e):n.__hasExternalTextures&&ne.rebindTextures(e,te.get(e.texture).__webglTexture,te.get(e.depthTexture).__webglTexture);const o=e.texture;(o.isData3DTexture||o.isDataArrayTexture||o.isCompressedArrayTexture)&&(s=!0);const c=te.get(e).__webglFramebuffer;e.isWebGLCubeRenderTarget?(r=c[t],a=!0):r=Z.isWebGL2&&e.samples>0&&!1===ne.useMultisampledRTT(e)?te.get(e).__webglMultisampledFramebuffer:c,E.copy(e.viewport),T.copy(e.scissor),A=e.scissorTest}else E.copy(U).multiplyScalar(C).floor(),T.copy(O).multiplyScalar(C).floor(),A=z;if(J.bindFramebuffer(we.FRAMEBUFFER,r)&&Z.drawBuffers&&i&&J.drawBuffers(e,r),J.viewport(E),J.scissor(T),J.setScissorTest(A),a){const i=te.get(e.texture);we.framebufferTexture2D(we.FRAMEBUFFER,we.COLOR_ATTACHMENT0,we.TEXTURE_CUBE_MAP_POSITIVE_X+t,i.__webglTexture,n)}else if(s){const i=te.get(e.texture),r=t||0;we.framebufferTextureLayer(we.FRAMEBUFFER,we.COLOR_ATTACHMENT0,i.__webglTexture,n||0,r)}M=-1},this.readRenderTargetPixels=function(e,t,n,i,r,a,s){if(!e||!e.isWebGLRenderTarget)return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let o=te.get(e).__webglFramebuffer;if(e.isWebGLCubeRenderTarget&&void 0!==s&&(o=o[s]),o){J.bindFramebuffer(we.FRAMEBUFFER,o);try{const s=e.texture,o=s.format,c=s.type;if(o!==H&&be.convert(o)!==we.getParameter(we.IMPLEMENTATION_COLOR_READ_FORMAT))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");const l=c===B&&(K.has("EXT_color_buffer_half_float")||Z.isWebGL2&&K.has("EXT_color_buffer_float"));if(!(c===N||be.convert(c)===we.getParameter(we.IMPLEMENTATION_COLOR_READ_TYPE)||c===F&&(Z.isWebGL2||K.has("OES_texture_float")||K.has("WEBGL_color_buffer_float"))||l))return void console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");t>=0&&t<=e.width-i&&n>=0&&n<=e.height-r&&we.readPixels(t,n,i,r,be.convert(o),be.convert(c),a)}finally{const e=null!==y?te.get(y).__webglFramebuffer:null;J.bindFramebuffer(we.FRAMEBUFFER,e)}}},this.copyFramebufferToTexture=function(e,t,n=0){const i=Math.pow(2,-n),r=Math.floor(t.image.width*i),a=Math.floor(t.image.height*i);ne.setTexture2D(t,0),we.copyTexSubImage2D(we.TEXTURE_2D,n,0,0,e.x,e.y,r,a),J.unbindTexture()},this.copyTextureToTexture=function(e,t,n,i=0){const r=t.image.width,a=t.image.height,s=be.convert(n.format),o=be.convert(n.type);ne.setTexture2D(n,0),we.pixelStorei(we.UNPACK_FLIP_Y_WEBGL,n.flipY),we.pixelStorei(we.UNPACK_PREMULTIPLY_ALPHA_WEBGL,n.premultiplyAlpha),we.pixelStorei(we.UNPACK_ALIGNMENT,n.unpackAlignment),t.isDataTexture?we.texSubImage2D(we.TEXTURE_2D,i,e.x,e.y,r,a,s,o,t.image.data):t.isCompressedTexture?we.compressedTexSubImage2D(we.TEXTURE_2D,i,e.x,e.y,t.mipmaps[0].width,t.mipmaps[0].height,s,t.mipmaps[0].data):we.texSubImage2D(we.TEXTURE_2D,i,e.x,e.y,s,o,t.image),0===i&&n.generateMipmaps&&we.generateMipmap(we.TEXTURE_2D),J.unbindTexture()},this.copyTextureToTexture3D=function(e,t,n,i,r=0){if(b.isWebGL1Renderer)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");const a=e.max.x-e.min.x+1,s=e.max.y-e.min.y+1,o=e.max.z-e.min.z+1,c=be.convert(i.format),l=be.convert(i.type);let u;if(i.isData3DTexture)ne.setTexture3D(i,0),u=we.TEXTURE_3D;else{if(!i.isDataArrayTexture)return void console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");ne.setTexture2DArray(i,0),u=we.TEXTURE_2D_ARRAY}we.pixelStorei(we.UNPACK_FLIP_Y_WEBGL,i.flipY),we.pixelStorei(we.UNPACK_PREMULTIPLY_ALPHA_WEBGL,i.premultiplyAlpha),we.pixelStorei(we.UNPACK_ALIGNMENT,i.unpackAlignment);const d=we.getParameter(we.UNPACK_ROW_LENGTH),h=we.getParameter(we.UNPACK_IMAGE_HEIGHT),f=we.getParameter(we.UNPACK_SKIP_PIXELS),p=we.getParameter(we.UNPACK_SKIP_ROWS),_=we.getParameter(we.UNPACK_SKIP_IMAGES),m=n.isCompressedTexture?n.mipmaps[0]:n.image;we.pixelStorei(we.UNPACK_ROW_LENGTH,m.width),we.pixelStorei(we.UNPACK_IMAGE_HEIGHT,m.height),we.pixelStorei(we.UNPACK_SKIP_PIXELS,e.min.x),we.pixelStorei(we.UNPACK_SKIP_ROWS,e.min.y),we.pixelStorei(we.UNPACK_SKIP_IMAGES,e.min.z),n.isDataTexture||n.isData3DTexture?we.texSubImage3D(u,r,t.x,t.y,t.z,a,s,o,c,l,m.data):n.isCompressedArrayTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),we.compressedTexSubImage3D(u,r,t.x,t.y,t.z,a,s,o,c,m.data)):we.texSubImage3D(u,r,t.x,t.y,t.z,a,s,o,c,l,m),we.pixelStorei(we.UNPACK_ROW_LENGTH,d),we.pixelStorei(we.UNPACK_IMAGE_HEIGHT,h),we.pixelStorei(we.UNPACK_SKIP_PIXELS,f),we.pixelStorei(we.UNPACK_SKIP_ROWS,p),we.pixelStorei(we.UNPACK_SKIP_IMAGES,_),0===r&&i.generateMipmaps&&we.generateMipmap(u),J.unbindTexture()},this.initTexture=function(e){e.isCubeTexture?ne.setTextureCube(e,0):e.isData3DTexture?ne.setTexture3D(e,0):e.isDataArrayTexture||e.isCompressedArrayTexture?ne.setTexture2DArray(e,0):ne.setTexture2D(e,0),J.unbindTexture()},this.resetState=function(){x=0,w=0,y=null,J.reset(),ve.reset()},"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get physicallyCorrectLights(){return console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),!this.useLegacyLights}set physicallyCorrectLights(e){console.warn("THREE.WebGLRenderer: the property .physicallyCorrectLights has been removed. Set renderer.useLegacyLights instead."),this.useLegacyLights=!e}get outputEncoding(){return console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace===$?J:3e3}set outputEncoding(e){console.warn("THREE.WebGLRenderer: Property .outputEncoding has been removed. Use .outputColorSpace instead."),this.outputColorSpace=e===J?$:Q}}(class extends Va{}).prototype.isWebGL1Renderer=!0;class Wa extends Xt{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.overrideMaterial=null,"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),null!==e.background&&(this.background=e.background.clone()),null!==e.environment&&(this.environment=e.environment.clone()),null!==e.fog&&(this.fog=e.fog.clone()),this.backgroundBlurriness=e.backgroundBlurriness,this.backgroundIntensity=e.backgroundIntensity,null!==e.overrideMaterial&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return null!==this.fog&&(t.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(t.object.backgroundBlurriness=this.backgroundBlurriness),1!==this.backgroundIntensity&&(t.object.backgroundIntensity=this.backgroundIntensity),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class Xa{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=void 0!==e?e.length/t:0,this.usage=ne,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=ue()}onUploadCallback(){}set needsUpdate(e){!0===e&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ue()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return void 0===e.arrayBuffers&&(e.arrayBuffers={}),void 0===this.array.buffer._uuid&&(this.array.buffer._uuid=ue()),void 0===e.arrayBuffers[this.array.buffer._uuid]&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const ja=new We;class qa{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)ja.fromBufferAttribute(this,t),ja.applyMatrix4(e),this.setXYZ(t,ja.x,ja.y,ja.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)ja.fromBufferAttribute(this,t),ja.applyNormalMatrix(e),this.setXYZ(t,ja.x,ja.y,ja.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)ja.fromBufferAttribute(this,t),ja.transformDirection(e),this.setXYZ(t,ja.x,ja.y,ja.z);return this}setX(e,t){return this.normalized&&(t=ge(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=ge(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=ge(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=ge(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=me(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=me(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=me(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=me(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array),i=ge(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=ge(t,this.array),n=ge(n,this.array),i=ge(i,this.array),r=ge(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return new mn(new this.array.constructor(e),this.itemSize,this.normalized)}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new qa(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(void 0===e){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let t=0;t<this.count;t++){const n=t*this.data.stride+this.offset;for(let t=0;t<this.itemSize;t++)e.push(this.data.array[n+t])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}return void 0===e.interleavedBuffers&&(e.interleavedBuffers={}),void 0===e.interleavedBuffers[this.data.uuid]&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class Ya extends sn{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new dn(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Ka=new We,Za=new We,Ja=new xt,$a=new vt,Qa=new dt;class es extends Xt{constructor(e=new An,t=new Ya){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[0];for(let e=1,i=t.count;e<i;e++)Ka.fromBufferAttribute(t,e-1),Za.fromBufferAttribute(t,e),n[e]=n[e-1],n[e]+=Ka.distanceTo(Za);e.setAttribute("lineDistance",new vn(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(null===n.boundingSphere&&n.computeBoundingSphere(),Qa.copy(n.boundingSphere),Qa.applyMatrix4(i),Qa.radius+=r,!1===e.ray.intersectsSphere(Qa))return;Ja.copy(i).invert(),$a.copy(e.ray).applyMatrix4(Ja);const s=r/((this.scale.x+this.scale.y+this.scale.z)/3),o=s*s,c=new We,l=new We,u=new We,d=new We,h=this.isLineSegments?2:1,f=n.index,p=n.attributes.position;if(null!==f)for(let n=Math.max(0,a.start),i=Math.min(f.count,a.start+a.count)-1;n<i;n+=h){const i=f.getX(n),r=f.getX(n+1);if(c.fromBufferAttribute(p,i),l.fromBufferAttribute(p,r),$a.distanceSqToSegment(c,l,d,u)>o)continue;d.applyMatrix4(this.matrixWorld);const a=e.ray.origin.distanceTo(d);a<e.near||a>e.far||t.push({distance:a,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}else for(let n=Math.max(0,a.start),i=Math.min(p.count,a.start+a.count)-1;n<i;n+=h){if(c.fromBufferAttribute(p,n),l.fromBufferAttribute(p,n+1),$a.distanceSqToSegment(c,l,d,u)>o)continue;d.applyMatrix4(this.matrixWorld);const i=e.ray.origin.distanceTo(d);i<e.near||i>e.far||t.push({distance:i,point:u.clone().applyMatrix4(this.matrixWorld),index:n,face:null,faceIndex:null,object:this})}}updateMorphTargets(){const e=this.geometry.morphAttributes,t=Object.keys(e);if(t.length>0){const n=e[t[0]];if(void 0!==n){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let e=0,t=n.length;e<t;e++){const t=n[e].name||String(e);this.morphTargetInfluences.push(0),this.morphTargetDictionary[t]=e}}}}}const ts=new We,ns=new We;class is extends es{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(null===e.index){const t=e.attributes.position,n=[];for(let e=0,i=t.count;e<i;e+=2)ts.fromBufferAttribute(t,e),ns.fromBufferAttribute(t,e+1),n[e]=0===e?0:n[e-1],n[e+1]=n[e]+ts.distanceTo(ns);e.setAttribute("lineDistance",new vn(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class rs extends An{constructor(e=1,t=1,n=1,i=32,r=1,a=!1,s=0,o=2*Math.PI){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:s,thetaLength:o};const c=this;i=Math.floor(i),r=Math.floor(r);const l=[],u=[],d=[],h=[];let f=0;const p=[],_=n/2;let m=0;function g(n){const r=f,a=new ve,p=new We;let g=0;const b=!0===n?e:t,v=!0===n?1:-1;for(let e=1;e<=i;e++)u.push(0,_*v,0),d.push(0,v,0),h.push(.5,.5),f++;const x=f;for(let e=0;e<=i;e++){const t=e/i*o+s,n=Math.cos(t),r=Math.sin(t);p.x=b*r,p.y=_*v,p.z=b*n,u.push(p.x,p.y,p.z),d.push(0,v,0),a.x=.5*n+.5,a.y=.5*r*v+.5,h.push(a.x,a.y),f++}for(let e=0;e<i;e++){const t=r+e,i=x+e;!0===n?l.push(i,i+1,t):l.push(i+1,i,t),g+=3}c.addGroup(m,g,!0===n?1:2),m+=g}!function(){const a=new We,g=new We;let b=0;const v=(t-e)/n;for(let c=0;c<=r;c++){const l=[],m=c/r,b=m*(t-e)+e;for(let e=0;e<=i;e++){const t=e/i,r=t*o+s,c=Math.sin(r),p=Math.cos(r);g.x=b*c,g.y=-m*n+_,g.z=b*p,u.push(g.x,g.y,g.z),a.set(c,v,p).normalize(),d.push(a.x,a.y,a.z),h.push(t,1-m),l.push(f++)}p.push(l)}for(let e=0;e<i;e++)for(let t=0;t<r;t++){const n=p[t][e],i=p[t+1][e],r=p[t+1][e+1],a=p[t][e+1];l.push(n,i,a),l.push(i,r,a),b+=6}c.addGroup(m,b,0),m+=b}(),!1===a&&(e>0&&g(!0),t>0&&g(!1)),this.setIndex(l),this.setAttribute("position",new vn(u,3)),this.setAttribute("normal",new vn(d,3)),this.setAttribute("uv",new vn(h,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new rs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}const as=new We,ss=new We,os=new We,cs=new rn;class ls extends An{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},null!==e){const n=4,i=Math.pow(10,n),r=Math.cos(ce*t),a=e.getIndex(),s=e.getAttribute("position"),o=a?a.count:s.count,c=[0,0,0],l=["a","b","c"],u=new Array(3),d={},h=[];for(let e=0;e<o;e+=3){a?(c[0]=a.getX(e),c[1]=a.getX(e+1),c[2]=a.getX(e+2)):(c[0]=e,c[1]=e+1,c[2]=e+2);const{a:t,b:n,c:o}=cs;if(t.fromBufferAttribute(s,c[0]),n.fromBufferAttribute(s,c[1]),o.fromBufferAttribute(s,c[2]),cs.getNormal(os),u[0]=`${Math.round(t.x*i)},${Math.round(t.y*i)},${Math.round(t.z*i)}`,u[1]=`${Math.round(n.x*i)},${Math.round(n.y*i)},${Math.round(n.z*i)}`,u[2]=`${Math.round(o.x*i)},${Math.round(o.y*i)},${Math.round(o.z*i)}`,u[0]!==u[1]&&u[1]!==u[2]&&u[2]!==u[0])for(let e=0;e<3;e++){const t=(e+1)%3,n=u[e],i=u[t],a=cs[l[e]],s=cs[l[t]],o=`${n}_${i}`,f=`${i}_${n}`;f in d&&d[f]?(os.dot(d[f].normal)<=r&&(h.push(a.x,a.y,a.z),h.push(s.x,s.y,s.z)),d[f]=null):o in d||(d[o]={index0:c[e],index1:c[t],normal:os.clone()})}}for(const e in d)if(d[e]){const{index0:t,index1:n}=d[e];as.fromBufferAttribute(s,t),ss.fromBufferAttribute(s,n),h.push(as.x,as.y,as.z),h.push(ss.x,ss.y,ss.z)}this.setAttribute("position",new vn(h,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}class us extends An{constructor(e=1,t=32,n=16,i=0,r=2*Math.PI,a=0,s=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:s},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const o=Math.min(a+s,Math.PI);let c=0;const l=[],u=new We,d=new We,h=[],f=[],p=[],_=[];for(let h=0;h<=n;h++){const m=[],g=h/n;let b=0;0===h&&0===a?b=.5/t:h===n&&o===Math.PI&&(b=-.5/t);for(let n=0;n<=t;n++){const o=n/t;u.x=-e*Math.cos(i+o*r)*Math.sin(a+g*s),u.y=e*Math.cos(a+g*s),u.z=e*Math.sin(i+o*r)*Math.sin(a+g*s),f.push(u.x,u.y,u.z),d.copy(u).normalize(),p.push(d.x,d.y,d.z),_.push(o+b,1-g),m.push(c++)}l.push(m)}for(let e=0;e<n;e++)for(let i=0;i<t;i++){const t=l[e][i+1],r=l[e][i],s=l[e+1][i],c=l[e+1][i+1];(0!==e||a>0)&&h.push(t,r,c),(e!==n-1||o<Math.PI)&&h.push(r,s,c)}this.setIndex(h),this.setAttribute("position",new vn(f,3)),this.setAttribute("normal",new vn(p,3)),this.setAttribute("uv",new vn(_,2))}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}static fromJSON(e){return new us(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class ds extends An{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},null!==e){const t=[],n=new Set,i=new We,r=new We;if(null!==e.index){const a=e.attributes.position,s=e.index;let o=e.groups;0===o.length&&(o=[{start:0,count:s.count,materialIndex:0}]);for(let e=0,c=o.length;e<c;++e){const c=o[e],l=c.start;for(let e=l,o=l+c.count;e<o;e+=3)for(let o=0;o<3;o++){const c=s.getX(e+o),l=s.getX(e+(o+1)%3);i.fromBufferAttribute(a,c),r.fromBufferAttribute(a,l),!0===hs(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let e=0,s=a.count/3;e<s;e++)for(let s=0;s<3;s++){const o=3*e+s,c=3*e+(s+1)%3;i.fromBufferAttribute(a,o),r.fromBufferAttribute(a,c),!0===hs(i,r,n)&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new vn(t,3))}}copy(e){return super.copy(e),this.parameters=Object.assign({},e.parameters),this}}function hs(e,t,n){const i=`${e.x},${e.y},${e.z}-${t.x},${t.y},${t.z}`,r=`${t.x},${t.y},${t.z}-${e.x},${e.y},${e.z}`;return!0!==n.has(i)&&!0!==n.has(r)&&(n.add(i),n.add(r),!0)}class fs extends sn{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new dn(16777215),this.specular=new dn(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new dn(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=0,this.normalScale=new ve(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=0,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}function ps(e,t,n){return ms(e)?new e.constructor(e.subarray(t,void 0!==n?n:e.length)):e.slice(t,n)}function _s(e,t,n){return!e||!n&&e.constructor===t?e:"number"==typeof t.BYTES_PER_ELEMENT?new t(e):Array.prototype.slice.call(e)}function ms(e){return ArrayBuffer.isView(e)&&!(e instanceof DataView)}class gs{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=void 0!==i?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let a=n+2;;){if(void 0===i){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===a)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(e>=r)break e;{const s=t[1];e<s&&(n=2,r=s);for(let a=n-2;;){if(void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(n===a)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0}}for(;n<a;){const i=n+a>>>1;e<t[i]?a=i:n=i+1}if(i=t[n],r=t[n-1],void 0===r)return this._cachedIndex=0,this.copySampleValue_(0);if(void 0===i)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let e=0;e!==i;++e)t[e]=n[r+e];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class bs extends gs{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:2400,endingEnd:2400}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,s=i[r],o=i[a];if(void 0===s)switch(this.getSettings_().endingStart){case 2401:r=e,s=2*t-n;break;case 2402:r=i.length-2,s=t+i[r]-i[r+1];break;default:r=e,s=n}if(void 0===o)switch(this.getSettings_().endingEnd){case 2401:a=e,o=2*n-t;break;case 2402:a=1,o=n+i[1]-i[0];break;default:a=e-1,o=t}const c=.5*(n-t),l=this.valueSize;this._weightPrev=c/(t-s),this._weightNext=c/(o-n),this._offsetPrev=r*l,this._offsetNext=a*l}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,c=o-s,l=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,h=this._weightNext,f=(n-t)/(i-t),p=f*f,_=p*f,m=-d*_+2*d*p-d*f,g=(1+d)*_+(-1.5-2*d)*p+(-.5+d)*f+1,b=(-1-h)*_+(1.5+h)*p+.5*f,v=h*_-h*p;for(let e=0;e!==s;++e)r[e]=m*a[l+e]+g*a[c+e]+b*a[o+e]+v*a[u+e];return r}}class vs extends gs{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=e*s,c=o-s,l=(n-t)/(i-t),u=1-l;for(let e=0;e!==s;++e)r[e]=a[c+e]*u+a[o+e]*l;return r}}class xs extends gs{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class ws{constructor(e,t,n,i){if(void 0===e)throw new Error("THREE.KeyframeTrack: track name is undefined");if(void 0===t||0===t.length)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=_s(t,this.TimeBufferType),this.values=_s(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:_s(e.times,Array),values:_s(e.values,Array)};const t=e.getInterpolation();t!==e.DefaultInterpolation&&(n.interpolation=t)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new xs(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new vs(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new bs(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Y:t=this.InterpolantFactoryMethodDiscrete;break;case K:t=this.InterpolantFactoryMethodLinear;break;case Z:t=this.InterpolantFactoryMethodSmooth}if(void 0===t){const t="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(void 0===this.createInterpolant){if(e===this.DefaultInterpolation)throw new Error(t);this.setInterpolation(this.DefaultInterpolation)}return console.warn("THREE.KeyframeTrack:",t),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Y;case this.InterpolantFactoryMethodLinear:return K;case this.InterpolantFactoryMethodSmooth:return Z}}getValueSize(){return this.values.length/this.times.length}shift(e){if(0!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(1!==e){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;-1!==a&&n[a]>t;)--a;if(++a,0!==r||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const e=this.getValueSize();this.times=ps(n,r,a),this.values=ps(this.values,r*e,a*e)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!=0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;0===r&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let t=0;t!==r;t++){const i=n[t];if("number"==typeof i&&isNaN(i)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,t,i),e=!1;break}if(null!==a&&a>i){console.error("THREE.KeyframeTrack: Out of order keys.",this,t,i,a),e=!1;break}a=i}if(void 0!==i&&ms(i))for(let t=0,n=i.length;t!==n;++t){const n=i[t];if(isNaN(n)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,t,n),e=!1;break}}return e}optimize(){const e=ps(this.times),t=ps(this.values),n=this.getValueSize(),i=this.getInterpolation()===Z,r=e.length-1;let a=1;for(let s=1;s<r;++s){let r=!1;const o=e[s];if(o!==e[s+1]&&(1!==s||o!==e[0]))if(i)r=!0;else{const e=s*n,i=e-n,a=e+n;for(let s=0;s!==n;++s){const n=t[e+s];if(n!==t[i+s]||n!==t[a+s]){r=!0;break}}}if(r){if(s!==a){e[a]=e[s];const i=s*n,r=a*n;for(let e=0;e!==n;++e)t[r+e]=t[i+e]}++a}}if(r>0){e[a]=e[r];for(let e=r*n,i=a*n,s=0;s!==n;++s)t[i+s]=t[e+s];++a}return a!==e.length?(this.times=ps(e,0,a),this.values=ps(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=ps(this.times,0),t=ps(this.values,0),n=new(0,this.constructor)(this.name,e,t);return n.createInterpolant=this.createInterpolant,n}}ws.prototype.TimeBufferType=Float32Array,ws.prototype.ValueBufferType=Float32Array,ws.prototype.DefaultInterpolation=K;class ys extends ws{}ys.prototype.ValueTypeName="bool",ys.prototype.ValueBufferType=Array,ys.prototype.DefaultInterpolation=Y,ys.prototype.InterpolantFactoryMethodLinear=void 0,ys.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends ws{}).prototype.ValueTypeName="color";(class extends ws{}).prototype.ValueTypeName="number";class Ms extends gs{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,s=this.valueSize,o=(n-t)/(i-t);let c=e*s;for(let e=c+s;c!==e;c+=4)Ve.slerpFlat(r,0,a,c-s,a,c,o);return r}}class Ss extends ws{InterpolantFactoryMethodLinear(e){return new Ms(this.times,this.values,this.getValueSize(),e)}}Ss.prototype.ValueTypeName="quaternion",Ss.prototype.DefaultInterpolation=K,Ss.prototype.InterpolantFactoryMethodSmooth=void 0;class Es extends ws{}Es.prototype.ValueTypeName="string",Es.prototype.ValueBufferType=Array,Es.prototype.DefaultInterpolation=Y,Es.prototype.InterpolantFactoryMethodLinear=void 0,Es.prototype.InterpolantFactoryMethodSmooth=void 0;(class extends ws{}).prototype.ValueTypeName="vector",Error;class Ts extends Xt{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new dn(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,void 0!==this.groundColor&&(t.object.groundColor=this.groundColor.getHex()),void 0!==this.distance&&(t.object.distance=this.distance),void 0!==this.angle&&(t.object.angle=this.angle),void 0!==this.decay&&(t.object.decay=this.decay),void 0!==this.penumbra&&(t.object.penumbra=this.penumbra),void 0!==this.shadow&&(t.object.shadow=this.shadow.toJSON()),t}}const As=new xt,Rs=new We,Ps=new We;class Cs{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new ve(512,512),this.map=null,this.mapPass=null,this.matrix=new xt,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new di,this._frameExtents=new ve(1,1),this._viewportCount=1,this._viewports=[new ze(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Rs.setFromMatrixPosition(e.matrixWorld),t.position.copy(Rs),Ps.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(Ps),t.updateMatrixWorld(),As.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(As),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(As)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return(new this.constructor).copy(this)}toJSON(){const e={};return 0!==this.bias&&(e.bias=this.bias),0!==this.normalBias&&(e.normalBias=this.normalBias),1!==this.radius&&(e.radius=this.radius),512===this.mapSize.x&&512===this.mapSize.y||(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}const Ls=new xt,Ds=new We,Us=new We;class Is extends Cs{constructor(){super(new ei(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new ve(4,2),this._viewportCount=6,this._viewports=[new ze(2,1,1,1),new ze(0,1,1,1),new ze(3,1,1,1),new ze(1,1,1,1),new ze(3,0,1,1),new ze(1,0,1,1)],this._cubeDirections=[new We(1,0,0),new We(-1,0,0),new We(0,0,1),new We(0,0,-1),new We(0,1,0),new We(0,-1,0)],this._cubeUps=[new We(0,1,0),new We(0,1,0),new We(0,1,0),new We(0,1,0),new We(0,0,1),new We(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Ds.setFromMatrixPosition(e.matrixWorld),n.position.copy(Ds),Us.copy(n.position),Us.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(Us),n.updateMatrixWorld(),i.makeTranslation(-Ds.x,-Ds.y,-Ds.z),Ls.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Ls)}}class Ns extends Ts{constructor(e,t,n=0,i=2){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Is}get power(){return 4*this.intensity*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Os extends Ts{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class Fs extends An{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}toJSON(){const e=super.toJSON();return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}const Bs="\\[\\]\\.:\\/",zs=new RegExp("["+Bs+"]","g"),Hs="[^"+Bs+"]",Gs="[^"+Bs.replace("\\.","")+"]",ks=new RegExp("^"+/((?:WC+[\/:])*)/.source.replace("WC",Hs)+/(WCOD+)?/.source.replace("WCOD",Gs)+/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Hs)+/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Hs)+"$"),Vs=["material","materials","bones","map"];class Ws{constructor(e,t,n){this.path=t,this.parsedPath=n||Ws.parseTrackName(t),this.node=Ws.findNode(e,this.parsedPath.nodeName),this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new Ws.Composite(e,t,n):new Ws(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(zs,"")}static parseTrackName(e){const t=ks.exec(e);if(null===t)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(void 0!==i&&-1!==i){const e=n.nodeName.substring(i+1);-1!==Vs.indexOf(e)&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=e)}if(null===n.propertyName||0===n.propertyName.length)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(void 0===t||""===t||"."===t||-1===t||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(void 0!==n)return n}if(e.children){const n=function(e){for(let i=0;i<e.length;i++){const r=e[i];if(r.name===t||r.uuid===t)return r;const a=n(r.children);if(a)return a}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=Ws.findNode(this.rootNode,t.nodeName),this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e)return void console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");if(n){let i=t.objectIndex;switch(n){case"materials":if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.materials)return void console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);e=e.material.materials;break;case"bones":if(!e.skeleton)return void console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);e=e.skeleton.bones;for(let t=0;t<e.length;t++)if(e[t].name===i){i=t;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material)return void console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);if(!e.material.map)return void console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);e=e.material.map;break;default:if(void 0===e[n])return void console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);e=e[n]}if(void 0!==i){if(void 0===e[i])return void console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);e=e[i]}}const a=e[i];if(void 0===a){const n=t.nodeName;return void console.error("THREE.PropertyBinding: Trying to update property for track: "+n+"."+i+" but it wasn't found.",e)}let s=this.Versioning.None;this.targetObject=e,void 0!==e.needsUpdate?s=this.Versioning.NeedsUpdate:void 0!==e.matrixWorldNeedsUpdate&&(s=this.Versioning.MatrixWorldNeedsUpdate);let o=this.BindingType.Direct;if(void 0!==r){if("morphTargetInfluences"===i){if(!e.geometry)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);if(!e.geometry.morphAttributes)return void console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);void 0!==e.morphTargetDictionary[r]&&(r=e.morphTargetDictionary[r])}o=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else void 0!==a.fromArray&&void 0!==a.toArray?(o=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(o=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[o],this.setValue=this.SetterByBindingTypeAndVersioning[o][s]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}Ws.Composite=class{constructor(e,t,n){const i=n||Ws.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];void 0!==i&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}},Ws.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3},Ws.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2},Ws.prototype.GetterByBindingType=[Ws.prototype._getValue_direct,Ws.prototype._getValue_array,Ws.prototype._getValue_arrayElement,Ws.prototype._getValue_toArray],Ws.prototype.SetterByBindingTypeAndVersioning=[[Ws.prototype._setValue_direct,Ws.prototype._setValue_direct_setNeedsUpdate,Ws.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[Ws.prototype._setValue_array,Ws.prototype._setValue_array_setNeedsUpdate,Ws.prototype._setValue_array_setMatrixWorldNeedsUpdate],[Ws.prototype._setValue_arrayElement,Ws.prototype._setValue_arrayElement_setNeedsUpdate,Ws.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[Ws.prototype._setValue_fromArray,Ws.prototype._setValue_fromArray_setNeedsUpdate,Ws.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]],new Float32Array(1);class Xs extends Xa{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class js{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){const e=1e-6;return this.phi=Math.max(e,Math.min(Math.PI-e,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),0===this.radius?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(de(t/this.radius,-1,1))),this}clone(){return(new this.constructor).copy(this)}}const qs=new We,Ys=new We;class Ks{constructor(e=new We,t=new We){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){qs.subVectors(e,this.start),Ys.subVectors(this.end,this.start);const n=Ys.dot(Ys);let i=Ys.dot(qs)/n;return t&&(i=de(i,0,1)),i}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return(new this.constructor).copy(this)}}class Zs extends is{constructor(e=10,t=10,n=4473924,i=8947848){n=new dn(n),i=new dn(i);const r=t/2,a=e/t,s=e/2,o=[],c=[];for(let e=0,l=0,u=-s;e<=t;e++,u+=a){o.push(-s,0,u,s,0,u),o.push(u,0,-s,u,0,s);const t=e===r?n:i;t.toArray(c,l),l+=3,t.toArray(c,l),l+=3,t.toArray(c,l),l+=3,t.toArray(c,l),l+=3}const l=new An;l.setAttribute("position",new vn(o,3)),l.setAttribute("color",new vn(c,3)),super(l,new Ya({vertexColors:!0,toneMapped:!1})),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}"undefined"!=typeof __THREE_DEVTOOLS__&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:i}})),"undefined"!=typeof window&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=i)},438:(e,t,n)=>{n.d(t,{G:()=>i});let i=Float64Array},643:(e,t,n)=>{n.d(t,{n:()=>s});var i=n(437);const r=new i.NRn,a=new i.Pq0;class s extends i.CmU{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry",this.setIndex([0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5]),this.setAttribute("position",new i.qtW([-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],3)),this.setAttribute("uv",new i.qtW([-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],2))}applyMatrix4(e){const t=this.attributes.instanceStart,n=this.attributes.instanceEnd;return void 0!==t&&(t.applyMatrix4(e),n.applyMatrix4(e),t.needsUpdate=!0),null!==this.boundingBox&&this.computeBoundingBox(),null!==this.boundingSphere&&this.computeBoundingSphere(),this}setPositions(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new i.LuO(t,6,1);return this.setAttribute("instanceStart",new i.eHs(n,3,0)),this.setAttribute("instanceEnd",new i.eHs(n,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(e){let t;e instanceof Float32Array?t=e:Array.isArray(e)&&(t=new Float32Array(e));const n=new i.LuO(t,6,1);return this.setAttribute("instanceColorStart",new i.eHs(n,3,0)),this.setAttribute("instanceColorEnd",new i.eHs(n,3,3)),this}fromWireframeGeometry(e){return this.setPositions(e.attributes.position.array),this}fromEdgesGeometry(e){return this.setPositions(e.attributes.position.array),this}fromMesh(e){return this.fromWireframeGeometry(new i.XJ7(e.geometry)),this}fromLineSegments(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}computeBoundingBox(){null===this.boundingBox&&(this.boundingBox=new i.NRn);const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;void 0!==e&&void 0!==t&&(this.boundingBox.setFromBufferAttribute(e),r.setFromBufferAttribute(t),this.boundingBox.union(r))}computeBoundingSphere(){null===this.boundingSphere&&(this.boundingSphere=new i.iyt),null===this.boundingBox&&this.computeBoundingBox();const e=this.attributes.instanceStart,t=this.attributes.instanceEnd;if(void 0!==e&&void 0!==t){const n=this.boundingSphere.center;this.boundingBox.getCenter(n);let i=0;for(let r=0,s=e.count;r<s;r++)a.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(a)),a.fromBufferAttribute(t,r),i=Math.max(i,n.distanceToSquared(a));this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(e){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(e)}}},655:(e,t,n)=>{n.a(e,(async(e,i)=>{try{n.r(t),n.d(t,{InterfaceController:()=>a.qSN,InterfaceFEMDeformable:()=>a.PF2,InterfaceMassSpringDeformable:()=>a.sVW,InterfaceMechanismState:()=>a.s4Q,InterfaceSimulator:()=>a.M0b,__wbg_Window_9e7ea8667e28eb00:()=>a.vYo,__wbg_WorkerGlobalScope_0169ffb9adb5f5ef:()=>a.p_A,__wbg_activeTexture_0f19d8acfa0a14c2:()=>a.Erh,__wbg_activeTexture_460f2e367e813fb0:()=>a.s8_,__wbg_attachShader_3d4eb6af9e3e7bd1:()=>a.kGM,__wbg_attachShader_94e758c8b5283eb2:()=>a.d0z,__wbg_beginComputePass_01f3206a4680f256:()=>a.k8A,__wbg_beginQuery_6af0b28414b16c07:()=>a.n1G,__wbg_bindAttribLocation_40da4b3e84cc7bd5:()=>a.GIr,__wbg_bindAttribLocation_ce2730e29976d230:()=>a.qsm,__wbg_bindBufferRange_454f90f2b1781982:()=>a.JoZ,__wbg_bindBuffer_309c9a6c21826cf5:()=>a.ZsK,__wbg_bindBuffer_f32f587f1c2962a7:()=>a.UrN,__wbg_bindFramebuffer_bd02c8cc707d670f:()=>a.lry,__wbg_bindFramebuffer_e48e83c0f973944d:()=>a.deo,__wbg_bindRenderbuffer_53eedd88e52b4cb5:()=>a.wu_,__wbg_bindRenderbuffer_55e205fecfddbb8c:()=>a.rBU,__wbg_bindSampler_9f59cf2eaa22eee0:()=>a._Zb,__wbg_bindTexture_a6e795697f49ebd1:()=>a.rhW,__wbg_bindTexture_bc8eb316247f739d:()=>a.Du1,__wbg_bindVertexArrayOES_da8e7059b789629e:()=>a.dfz,__wbg_bindVertexArray_6b4b88581064b71f:()=>a.pFK,__wbg_blendColor_15ba1eff44560932:()=>a.lF0,__wbg_blendColor_6446fba673f64ff0:()=>a.O30,__wbg_blendEquationSeparate_c1aa26a9a5c5267e:()=>a.H4Z,__wbg_blendEquationSeparate_f3d422e981d86339:()=>a.Gq6,__wbg_blendEquation_c23d111ad6d268ff:()=>a.MIe,__wbg_blendEquation_cec7bc41f3e5704c:()=>a.tBX,__wbg_blendFuncSeparate_483be8d4dd635340:()=>a.Mip,__wbg_blendFuncSeparate_dafeabfc1680b2ee:()=>a.ezo,__wbg_blendFunc_9454884a3cfd2911:()=>a.GNz,__wbg_blendFunc_c3b74be5a39c665f:()=>a.s1T,__wbg_blitFramebuffer_7303bdff77cfe967:()=>a.kzL,__wbg_bufferData_3261d3e1dd6fc903:()=>a.R_j,__wbg_bufferData_33c59bf909ea6fd3:()=>a.NRY,__wbg_bufferData_463178757784fcac:()=>a.biQ,__wbg_bufferData_d99b6b4eb5283f20:()=>a.Kec,__wbg_bufferSubData_4e973eefe9236d04:()=>a.ab,__wbg_bufferSubData_dcd4d16031a60345:()=>a.MlO,__wbg_buffer_09165b52af8c5237:()=>a._Ue,__wbg_buffer_609cc3eee51ed158:()=>a.FHK,__wbg_call_672a4d21634d4a24:()=>a.wHY,__wbg_call_7cccdd69e0791ae2:()=>a.w9h,__wbg_clearBufferfv_65ea413f7f2554a2:()=>a.XGN,__wbg_clearBufferiv_c003c27b77a0245b:()=>a.Hxr,__wbg_clearBufferuiv_8c285072f2026a37:()=>a.uYA,__wbg_clearDepth_17cfee5be8476fae:()=>a.Bu4,__wbg_clearDepth_670d19914a501259:()=>a.TMx,__wbg_clearStencil_4323424f1acca0df:()=>a.vBH,__wbg_clearStencil_7addd3b330b56b27:()=>a.Vrt,__wbg_clear_62b9037b892f6988:()=>a.Lh6,__wbg_clear_f8d5f3c348d37d95:()=>a.evT,__wbg_clientWaitSync_6930890a42bd44c0:()=>a.va8,__wbg_colorMask_5e7c60b9c7a57a2e:()=>a.S55,__wbg_colorMask_6dac12039c7145ae:()=>a.jzA,__wbg_compileShader_0ad770bbdbb9de21:()=>a.VUC,__wbg_compileShader_2307c9d370717dd5:()=>a.HdZ,__wbg_compressedTexSubImage2D_71877eec950ca069:()=>a.edx,__wbg_compressedTexSubImage2D_99abf4cfdb7c3fd8:()=>a.vqF,__wbg_compressedTexSubImage2D_d66dcfcb2422e703:()=>a.tRb,__wbg_compressedTexSubImage3D_58506392da46b927:()=>a.mID,__wbg_compressedTexSubImage3D_81477746675a4017:()=>a.Cmg,__wbg_copyBufferSubData_9469a965478e33b5:()=>a.CTb,__wbg_copyBufferToBuffer_0d141e7111b0b6ab:()=>a.dEj,__wbg_copyTexSubImage2D_05e7e8df6814a705:()=>a.WgO,__wbg_copyTexSubImage2D_607ad28606952982:()=>a.fxK,__wbg_copyTexSubImage3D_32e92c94044e58ca:()=>a.It8,__wbg_createBindGroupLayout_f0635625a1a82bea:()=>a.RZ8,__wbg_createBindGroup_043b06d20124f91e:()=>a.gVi,__wbg_createBuffer_086a8bb05ced884a:()=>a.MZS,__wbg_createBuffer_7a9ec3d654073660:()=>a.GL7,__wbg_createBuffer_9886e84a67b68c89:()=>a.RLH,__wbg_createCommandEncoder_aa9ae9d445bb7abf:()=>a.Rwh,__wbg_createComputePipeline_059cf7af9b47a3fc:()=>a.Y0x,__wbg_createFramebuffer_7824f69bba778885:()=>a.iJ1,__wbg_createFramebuffer_c8d70ebc4858051e:()=>a.CrI,__wbg_createPipelineLayout_5cc7e994e46201c7:()=>a.Kan,__wbg_createProgram_8ff56c485f3233d0:()=>a.VG9,__wbg_createProgram_da203074cafb1038:()=>a.cyt,__wbg_createQuery_5ed5e770ec1009c1:()=>a.HxU,__wbg_createRenderbuffer_d88aa9403faa38ea:()=>a.CMF,__wbg_createRenderbuffer_fd347ae14f262eaa:()=>a.lYD,__wbg_createSampler_f76e29d7522bec9e:()=>a.yNj,__wbg_createShaderModule_9ec201507fe4949e:()=>a.Unn,__wbg_createShader_4a256a8cc9c1ce4f:()=>a.WfJ,__wbg_createShader_983150fb1243ee56:()=>a.fHS,__wbg_createTexture_9c536c79b635fdef:()=>a.UsL,__wbg_createTexture_bfaa54c0cd22e367:()=>a.qyd,__wbg_createVertexArrayOES_991b44f100f93329:()=>a.ZX6,__wbg_createVertexArray_e435029ae2660efd:()=>a.dpx,__wbg_cullFace_187079e6e20a464d:()=>a.$hO,__wbg_cullFace_fbae6dd4d5e61ba4:()=>a._S2,__wbg_deleteBuffer_7ed96e1bf7c02e87:()=>a.PgH,__wbg_deleteBuffer_a7822433fc95dfb8:()=>a.tWU,__wbg_deleteFramebuffer_66853fb7101488cb:()=>a.Fx8,__wbg_deleteFramebuffer_cd3285ee5a702a7a:()=>a.iS1,__wbg_deleteProgram_3fa626bbc0001eb7:()=>a.STu,__wbg_deleteProgram_71a133c6d053e272:()=>a.h8E,__wbg_deleteQuery_6a2b7cd30074b20b:()=>a.VOO,__wbg_deleteRenderbuffer_59f4369653485031:()=>a.d_i,__wbg_deleteRenderbuffer_8808192853211567:()=>a.I_O,__wbg_deleteSampler_7f02bb003ba547f0:()=>a.JcA,__wbg_deleteShader_8d42f169deda58ac:()=>a.ui$,__wbg_deleteShader_c65a44796c5004d8:()=>a.kGc,__wbg_deleteSync_5a3fbe5d6b742398:()=>a.fm7,__wbg_deleteTexture_a30f5ca0163c4110:()=>a.ZV5,__wbg_deleteTexture_bb82c9fec34372ba:()=>a.d$C,__wbg_deleteVertexArrayOES_1ee7a06a4b23ec8c:()=>a.S$8,__wbg_deleteVertexArray_77fe73664a3332ae:()=>a.SMp,__wbg_depthFunc_2906916f4536d5d7:()=>a.PD8,__wbg_depthFunc_f34449ae87cc4e3e:()=>a.sgz,__wbg_depthMask_5fe84e2801488eda:()=>a.KHy,__wbg_depthMask_76688a8638b2f321:()=>a.J4C,__wbg_depthRange_3cd6b4dc961d9116:()=>a.FNd,__wbg_depthRange_f9c084ff3d81fd7b:()=>a.GH5,__wbg_disableVertexAttribArray_452cc9815fced7e4:()=>a.kfZ,__wbg_disableVertexAttribArray_afd097fb465dc100:()=>a.wvU,__wbg_disable_2702df5b5da5dd21:()=>a.Dm0,__wbg_disable_8b53998501a7a85b:()=>a.BbO,__wbg_dispatchWorkgroups_6558b6463978b7da:()=>a.N0b,__wbg_document_d249400bd7bd996d:()=>a.GhA,__wbg_drawArraysInstancedANGLE_342ee6b5236d9702:()=>a.ix7,__wbg_drawArraysInstanced_622ea9f149b0b80c:()=>a.uJK,__wbg_drawArrays_6acaa2669c105f3a:()=>a.x_k,__wbg_drawArrays_6d29ea2ebc0c72a2:()=>a.v$G,__wbg_drawBuffersWEBGL_9fdbdf3d4cbd3aae:()=>a.mFY,__wbg_drawBuffers_e729b75c5a50d760:()=>a._q7,__wbg_drawElementsInstancedANGLE_096b48ab8686c5cf:()=>a.dce,__wbg_drawElementsInstanced_f874e87d0b4e95e9:()=>a.jqP,__wbg_enableVertexAttribArray_607be07574298e5e:()=>a.U2W,__wbg_enableVertexAttribArray_93c3d406a41ad6c7:()=>a.qI_,__wbg_enable_51114837e05ee280:()=>a.UUJ,__wbg_enable_d183fef39258803f:()=>a.hb9,__wbg_endQuery_17aac36532ca7d47:()=>a.EKX,__wbg_end_59d0481d5eaa66e6:()=>a.s0W,__wbg_error_7534b8e9a36f1ab4:()=>a.WYM,__wbg_fenceSync_02d142d21e315da6:()=>a.WZM,__wbg_fetch_1b7e793ab8320753:()=>a.wBE,__wbg_finish_db34a19c90c07af7:()=>a.A0i,__wbg_finish_e2d3808af76b422a:()=>a.zZJ,__wbg_flush_4150080f65c49208:()=>a.Y_e,__wbg_flush_987c35de09e06fd6:()=>a.Zdy,__wbg_framebufferRenderbuffer_2fdd12e89ad81eb9:()=>a.FsR,__wbg_framebufferRenderbuffer_8b88592753b54715:()=>a.ZXk,__wbg_framebufferTexture2D_81a565732bd5d8fe:()=>a.JgO,__wbg_framebufferTexture2D_ed855d0b097c557a:()=>a.xl2,__wbg_framebufferTextureLayer_5e6bd1b0cb45d815:()=>a.l7J,__wbg_framebufferTextureMultiviewOVR_e54f936c3cc382cb:()=>a.QPw,__wbg_frontFace_289c9d7a8569c4f2:()=>a.xiP,__wbg_frontFace_4d4936cfaeb8b7df:()=>a.ZGT,__wbg_getBufferSubData_8ab2dcc5fcf5770f:()=>a.rDt,__wbg_getContext_3ae09aaa73194801:()=>a.M6L,__wbg_getContext_fc19859df6331073:()=>a.cI,__wbg_getExtension_ff0fb1398bcf28c3:()=>a.ijB,__wbg_getIndexedParameter_f9211edc36533919:()=>a.B_i,__wbg_getMappedRange_b986a889b6b53379:()=>a.LQ1,__wbg_getParameter_1f0887a2b88e6d19:()=>a.qoe,__wbg_getParameter_e3429f024018310f:()=>a.eWC,__wbg_getProgramInfoLog_631c180b1b21c8ed:()=>a.LKB,__wbg_getProgramInfoLog_a998105a680059db:()=>a.hK5,__wbg_getProgramParameter_0c411f0cd4185c5b:()=>a.oeS,__wbg_getProgramParameter_360f95ff07ac068d:()=>a.GbS,__wbg_getQueryParameter_8921497e1d1561c1:()=>a.z4O,__wbg_getShaderInfoLog_7e7b38fb910ec534:()=>a.uJ9,__wbg_getShaderInfoLog_f59c3112acc6e039:()=>a.UNs,__wbg_getShaderParameter_511b5f929074fa31:()=>a.zsB,__wbg_getShaderParameter_6dbe0b8558dc41fd:()=>a.siT,__wbg_getSupportedExtensions_8c007dbb54905635:()=>a.qgk,__wbg_getSupportedProfiles_10d2a4d32a128384:()=>a.Xvg,__wbg_getSyncParameter_7cb8461f5891606c:()=>a.mOz,__wbg_getUniformBlockIndex_288fdc31528171ca:()=>a.V4m,__wbg_getUniformLocation_657a2b6d102bd126:()=>a.dyN,__wbg_getUniformLocation_838363001c74dc21:()=>a.YBk,__wbg_get_b9b93047fe3cf45b:()=>a.RKz,__wbg_gpu_1b22165b67dd5a59:()=>a.zQq,__wbg_includes_937486a108ec147b:()=>a.fx8,__wbg_instanceof_GpuAdapter_331cc7dcda68de8c:()=>a.THL,__wbg_instanceof_HtmlCanvasElement_2ea67072a7624ac5:()=>a.EPt,__wbg_instanceof_Response_f2cc20d9f7dfd644:()=>a.Hzn,__wbg_instanceof_WebGl2RenderingContext_2b6045efeb76568d:()=>a.$nJ,__wbg_instanceof_Window_def73ea0955fc569:()=>a.vF0,__wbg_interfacefemdeformable_new:()=>a.vbf,__wbg_interfacemassspringdeformable_new:()=>a.yNk,__wbg_interfacemechanismstate_new:()=>a.Ow3,__wbg_invalidateFramebuffer_83f643d2a4936456:()=>a.J$Y,__wbg_is_c7481c65e7e5df9e:()=>a.ywC,__wbg_label_7045a786095b1bab:()=>a.nZe,__wbg_length_a446193dc22c12f8:()=>a.eIr,__wbg_length_e2d2a49132c1b256:()=>a.Ry,__wbg_linkProgram_067ee06739bdde81:()=>a.VVK,__wbg_linkProgram_e002979fe36e5b2a:()=>a.AoQ,__wbg_mapAsync_61fd3c4dd9f60c6d:()=>a.swM,__wbg_navigator_0a9bf1120e24fec2:()=>a.x6S,__wbg_navigator_1577371c070c8947:()=>a.Imq,__wbg_new_23a2665fac83c611:()=>a.c6u,__wbg_new_405e22f390576ce2:()=>a.va5,__wbg_new_780abee5c1739fd7:()=>a.A5w,__wbg_new_78c8a92080461d08:()=>a.Yx4,__wbg_new_78feb108b6472713:()=>a.M2,__wbg_new_8a6f238a6ece86ea:()=>a.$Pc,__wbg_new_a12002a7f91c75be:()=>a.vVD,__wbg_new_e3b321dcfef89fc7:()=>a.Ys6,__wbg_newnoargs_105ed471475aaf50:()=>a.VrZ,__wbg_newwithbyteoffsetandlength_840f3c038856d4e9:()=>a.dYQ,__wbg_newwithbyteoffsetandlength_93c8e0c1a479fa1a:()=>a.$pK,__wbg_newwithbyteoffsetandlength_999332a180064b59:()=>a.QqI,__wbg_newwithbyteoffsetandlength_d4a86622320ea258:()=>a.ENm,__wbg_newwithbyteoffsetandlength_d97e637ebe145a9a:()=>a.hI8,__wbg_newwithbyteoffsetandlength_e6b7e69acd4c7354:()=>a.BKO,__wbg_newwithbyteoffsetandlength_f1dead44d1fc7212:()=>a.QV1,__wbg_newwithbyteoffsetandlength_f254047f7e80e7ff:()=>a.taC,__wbg_newwithlength_5ebc38e611488614:()=>a.Vf0,__wbg_now_6f91d421b96ea22a:()=>a.Yt6,__wbg_now_d18023d54d4e5500:()=>a.pDX,__wbg_of_2eaf5a02d443ef03:()=>a.vuT,__wbg_performance_c185c0cdc2766575:()=>a.jnf,__wbg_performance_f71bd4abe0370171:()=>a.sZK,__wbg_pixelStorei_6aba5d04cdcaeaf6:()=>a.LF7,__wbg_pixelStorei_c8520e4b46f4a973:()=>a.m0F,__wbg_polygonOffset_773fe0017b2c8f51:()=>a.zby,__wbg_polygonOffset_8c11c066486216c4:()=>a.irV,__wbg_push_737cfc8c1432c2c6:()=>a.tZf,__wbg_queryCounterEXT_7aed85645b7ec1da:()=>a.kD2,__wbg_querySelector_c69f8b573958906b:()=>a.Iig,__wbg_queueMicrotask_97d92b4fcc8a61c5:()=>a._mt,__wbg_queueMicrotask_d3219def82552485:()=>a.k2R,__wbg_queue_0ffbb97537a0c4ed:()=>a.C3o,__wbg_readBuffer_1c35b1e4939f881d:()=>a.haC,__wbg_readPixels_51a0c02cdee207a5:()=>a.cWK,__wbg_readPixels_a6cbb21794452142:()=>a.vj2,__wbg_readPixels_cd64c5a7b0343355:()=>a.QS3,__wbg_renderbufferStorageMultisample_13fbd5e58900c6fe:()=>a.$54,__wbg_renderbufferStorage_73e01ea83b8afab4:()=>a.DDW,__wbg_renderbufferStorage_f010012bd3566942:()=>a.Rqq,__wbg_requestAdapter_f09d28b3f37de26c:()=>a.$Kc,__wbg_requestDevice_51509dadc50b2e9d:()=>a.Z46,__wbg_resolve_4851785c9c5f573d:()=>a.wJz,__wbg_samplerParameterf_909baf50360c94d4:()=>a.rFL,__wbg_samplerParameteri_d5c292172718da63:()=>a.IRU,__wbg_scissor_e917a332f67a5d30:()=>a.c8_,__wbg_scissor_eb177ca33bf24a44:()=>a.uuF,__wbg_setBindGroup_2c96f34332734c38:()=>a.mcs,__wbg_setBindGroup_5c9e5848197493ea:()=>a.VFl,__wbg_setPipeline_8fae997f5442e9b2:()=>a.Jgt,__wbg_set_65595bdd868b3009:()=>a.HBq,__wbg_set_bb8cecf6a62b9f46:()=>a.w2X,__wbg_set_wasm:()=>a.lIU,__wbg_setaccess_b20bfa3ec6b65d05:()=>a.hJw,__wbg_setbeginningofpasswriteindex_703995fcd4f84112:()=>a.hH2,__wbg_setbindgrouplayouts_8de6e109dd34a448:()=>a.eTY,__wbg_setbinding_5276d6202fceba46:()=>a.D4L,__wbg_setbinding_9e9ed8b6e1418176:()=>a.Tjt,__wbg_setbuffer_1acdac44d9638973:()=>a.dlv,__wbg_setbuffer_74b7b0adf855cf1a:()=>a.NBD,__wbg_setcode_6b6ad02fc1705aa2:()=>a.Hv4,__wbg_setcompute_be8170281283a813:()=>a.U_v,__wbg_setendofpasswriteindex_bbe4757d0b985fd3:()=>a.e$2,__wbg_setentries_5941f16619f54d42:()=>a.qWt,__wbg_setentries_97a6ad10aa7fa4d1:()=>a.dtP,__wbg_setentrypoint_ec35a2279c4d6dd5:()=>a.eT0,__wbg_setformat_beb33029aea4cf8e:()=>a.nd4,__wbg_sethasdynamicoffset_b34dfdba692a7959:()=>a.Zws,__wbg_setheight_433680330c9420c3:()=>a.i1o,__wbg_setheight_da683a33fa99843c:()=>a.eTi,__wbg_setindex_1ee8d4cff9651c00:()=>a.Nlo,__wbg_setlabel_0fab35538b0283a8:()=>a.mvO,__wbg_setlabel_190cc9c7ee762bf6:()=>a.L3o,__wbg_setlabel_1df8805b2aad72d7:()=>a.zGz,__wbg_setlabel_57008c2e11276b5e:()=>a.WOG,__wbg_setlabel_76b058f0224eb49e:()=>a.ywv,__wbg_setlabel_89c327fa94d8076b:()=>a.Gy,__wbg_setlabel_969d6f8279c74456:()=>a.wik,__wbg_setlabel_c14214ffbf6e5c4a:()=>a.atZ,__wbg_setlabel_e6fab993e10f1dd3:()=>a.man,__wbg_setlabel_f9a45e9ef445b781:()=>a.M47,__wbg_setlayout_67a29edc6247c437:()=>a.uqL,__wbg_setlayout_cade01d14a230b20:()=>a.Ced,__wbg_setmappedatcreation_0dc5796d4e90ab4b:()=>a.DF5,__wbg_setminbindingsize_20ca594cd6d93818:()=>a.ZHv,__wbg_setmodule_7d5ff73dea7c42f9:()=>a.OLt,__wbg_setmultisampled_0bb9fc1b577bf11a:()=>a.VRP,__wbg_setoffset_d37e5fa34e9ded2e:()=>a.U7A,__wbg_setpowerpreference_1f3351e5d2acf765:()=>a.ENX,__wbg_setqueryset_4475a28689089d2c:()=>a.Dlh,__wbg_setrequiredfeatures_fc44bc3433300ee3:()=>a._$u,__wbg_setresource_1659f5a29a2e0541:()=>a.H5s,__wbg_setsampler_a778272f31d31ce5:()=>a.ehv,__wbg_setsampletype_c0e25b966db74174:()=>a.a$B,__wbg_setsize_23676383c9c0732f:()=>a.zNy,__wbg_setsize_5878aadcd23673cf:()=>a.LSi,__wbg_setstoragetexture_2987339fec972d54:()=>a.p$s,__wbg_settexture_f62859f817324dd1:()=>a.KS6,__wbg_settimestampwrites_bebe8db3de77d9e1:()=>a.az_,__wbg_settype_0b59dd5f4721c490:()=>a.Mnx,__wbg_settype_8c8bbfab4cf7e32e:()=>a.mx$,__wbg_setusage_c45cca4a5b9f8376:()=>a.Q5w,__wbg_setviewdimension_afac48443b8fb565:()=>a.esQ,__wbg_setviewdimension_f5d4b5336a27d302:()=>a.xNl,__wbg_setvisibility_7245f1acbedb4ff4:()=>a.lAr,__wbg_setwidth_660ca581e3fbe279:()=>a.o2s,__wbg_setwidth_c5fed9f5e7f0b406:()=>a.W_t,__wbg_shaderSource_72d3e8597ef85b67:()=>a.G_z,__wbg_shaderSource_ad0087e637a35191:()=>a.ms$,__wbg_stack_0ed75d68575b0f3c:()=>a.x$X,__wbg_static_accessor_GLOBAL_88a902d13a557d07:()=>a.ii7,__wbg_static_accessor_GLOBAL_THIS_56578be7e9f832b0:()=>a.w6e,__wbg_static_accessor_SELF_37c5d418e4bf5819:()=>a.fb$,__wbg_static_accessor_WINDOW_5de37043a91a9c40:()=>a.x0C,__wbg_stencilFuncSeparate_91700dcf367ae07e:()=>a.y2T,__wbg_stencilFuncSeparate_c1a6fa2005ca0aaf:()=>a.H2O,__wbg_stencilMaskSeparate_4f1a2defc8c10956:()=>a.ExB,__wbg_stencilMaskSeparate_f8a0cfb5c2994d4a:()=>a.pKw,__wbg_stencilMask_1e602ef63f5b4144:()=>a.d2d,__wbg_stencilMask_cd8ca0a55817e599:()=>a.b$z,__wbg_stencilOpSeparate_1fa08985e79e1627:()=>a.DgC,__wbg_stencilOpSeparate_ff6683bbe3838ae6:()=>a.Ta1,__wbg_submit_252766c4e0945cee:()=>a.CLN,__wbg_texImage2D_57483314967bdd11:()=>a.MW2,__wbg_texImage2D_5f2835f02b1d1077:()=>a.sLg,__wbg_texImage2D_b8edcb5692f65f88:()=>a.uyA,__wbg_texImage3D_921b54d09bf45af0:()=>a.u1z,__wbg_texImage3D_a00b7a4df48cf757:()=>a.Xj0,__wbg_texParameteri_8112b26b3c360b7e:()=>a.zve,__wbg_texParameteri_ef50743cb94d507e:()=>a.h$A,__wbg_texStorage2D_fbda848497f3674e:()=>a.H3_,__wbg_texStorage3D_fd7a7ca30e7981d1:()=>a.tCD,__wbg_texSubImage2D_061605071aad9d2c:()=>a.VBJ,__wbg_texSubImage2D_aa9a084093764796:()=>a.Sp_,__wbg_texSubImage2D_c7951ed97252bdff:()=>a.eg2,__wbg_texSubImage2D_d52d1a0d3654c60b:()=>a.vxx,__wbg_texSubImage2D_dd9cac68ad5fe0b6:()=>a.SMz,__wbg_texSubImage2D_e6d34f5bb062e404:()=>a.xCe,__wbg_texSubImage2D_f39ea52a2d4bd2f7:()=>a.kEf,__wbg_texSubImage2D_fbdf91268228c757:()=>a.HcK,__wbg_texSubImage3D_04731251d7cecc83:()=>a.l7f,__wbg_texSubImage3D_37f0045d16871670:()=>a.t2e,__wbg_texSubImage3D_3a871f6405d2f183:()=>a.RBH,__wbg_texSubImage3D_66acd67f56e3b214:()=>a.Pyu,__wbg_texSubImage3D_a051de089266fa1b:()=>a.hBy,__wbg_texSubImage3D_b28c55f839bbec41:()=>a.akg,__wbg_texSubImage3D_f18bf091cd48774c:()=>a.fXd,__wbg_text_7805bea50de2af49:()=>a.gtG,__wbg_then_44b73946d2fb3e7d:()=>a.GQG,__wbg_then_48b406749878a531:()=>a.xV_,__wbg_uniform1f_21390b04609a9fa5:()=>a.cIF,__wbg_uniform1f_dc009a0e7f7e5977:()=>a.pY8,__wbg_uniform1i_5ddd9d8ccbd390bb:()=>a.nAv,__wbg_uniform1i_ed95b6129dce4d84:()=>a.Uo2,__wbg_uniform1ui_66e092b67a21c84d:()=>a.y3A,__wbg_uniform2fv_656fce9525420996:()=>a.L_l,__wbg_uniform2fv_d8bd2a36da7ce440:()=>a.Nc6,__wbg_uniform2iv_4d39fc5a26f03f55:()=>a.MyH,__wbg_uniform2iv_e967139a28017a99:()=>a.uNT,__wbg_uniform2uiv_4c340c9e8477bb07:()=>a.PX6,__wbg_uniform3fv_7d828b7c4c91138e:()=>a.jUi,__wbg_uniform3fv_8153c834ce667125:()=>a._M_,__wbg_uniform3iv_58662d914661aa10:()=>a.gmt,__wbg_uniform3iv_f30d27ec224b4b24:()=>a.$PD,__wbg_uniform3uiv_38673b825dc755f6:()=>a.udC,__wbg_uniform4f_36b8f9be15064aa7:()=>a.DoT,__wbg_uniform4f_f7ea07febf8b5108:()=>a.sYf,__wbg_uniform4fv_8827081a7585145b:()=>a.Dfn,__wbg_uniform4fv_c01fbc6c022abac3:()=>a.x8H,__wbg_uniform4iv_7fe05be291899f06:()=>a.wzN,__wbg_uniform4iv_84fdf80745e7ff26:()=>a.i3N,__wbg_uniform4uiv_9de55998fbfef236:()=>a.Hxo,__wbg_uniformBlockBinding_18117f4bda07115b:()=>a.CGD,__wbg_uniformMatrix2fv_98681e400347369c:()=>a.UKu,__wbg_uniformMatrix2fv_bc019eb4784a3b8c:()=>a.uPV,__wbg_uniformMatrix2x3fv_6421f8d6f7f4d144:()=>a.wht,__wbg_uniformMatrix2x4fv_27d807767d7aadc6:()=>a.SD7,__wbg_uniformMatrix3fv_3d6ad3a1e0b0b5b6:()=>a.GGS,__wbg_uniformMatrix3fv_3df529aab93cf902:()=>a.sgF,__wbg_uniformMatrix3x2fv_79357317e9637d05:()=>a.cou,__wbg_uniformMatrix3x4fv_9d1a88b5abfbd64b:()=>a.S9k,__wbg_uniformMatrix4fv_da94083874f202ad:()=>a.bBT,__wbg_uniformMatrix4fv_e87383507ae75670:()=>a.p99,__wbg_uniformMatrix4x2fv_aa507d918a0b5a62:()=>a.N7m,__wbg_uniformMatrix4x3fv_6712c7a3b4276fb4:()=>a.Wds,__wbg_unmap_7b299155f31a9d79:()=>a._Qc,__wbg_useProgram_473bf913989b6089:()=>a.ewW,__wbg_useProgram_9b2660f7bb210471:()=>a.l4v,__wbg_vertexAttribDivisorANGLE_11e909d332960413:()=>a.E5R,__wbg_vertexAttribDivisor_4d361d77ffb6d3ff:()=>a.Eyb,__wbg_vertexAttribIPointer_d0c67543348c90ce:()=>a.gNe,__wbg_vertexAttribPointer_550dc34903e3d1ea:()=>a.TgG,__wbg_vertexAttribPointer_7a2a506cdbe3aebc:()=>a.clo,__wbg_viewport_a1b4d71297ba89af:()=>a.cFT,__wbg_viewport_e615e98f676f2d39:()=>a.Lk4,__wbg_writeBuffer_3193eaacefdcf39a:()=>a.vCr,__wbindgen_boolean_get:()=>a.NhE,__wbindgen_cb_drop:()=>a.LCp,__wbindgen_closure_wrapper2267:()=>a.QaU,__wbindgen_closure_wrapper2707:()=>a.r0O,__wbindgen_debug_string:()=>a.rl,__wbindgen_is_function:()=>a.PRY,__wbindgen_is_null:()=>a.QRh,__wbindgen_is_undefined:()=>a.vUM,__wbindgen_memory:()=>a.Py0,__wbindgen_number_get:()=>a.sWe,__wbindgen_number_new:()=>a.QRK,__wbindgen_object_clone_ref:()=>a.BZb,__wbindgen_object_drop_ref:()=>a.bkt,__wbindgen_string_get:()=>a.qNE,__wbindgen_string_new:()=>a.ycJ,__wbindgen_throw:()=>a.Qnr,create1DHopper:()=>a.ebH,create2DHopper:()=>a.ZIH,createActuatedAnkleHopper:()=>a.p$M,createActuatedHipHopper:()=>a.xKR,createBalancingBot:()=>a.hgB,createBalancingBotController:()=>a.LJc,createCart:()=>a.zAG,createCartPole:()=>a.lq$,createCompassGait:()=>a.A4E,createCube:()=>a.Y5L,createDoublePendulum:()=>a.AUZ,createDoublePendulumHorizontal:()=>a.U_l,createFEMBox:()=>a.Yxg,createFourBarLinkage:()=>a.PP4,createFourBarLinkageController:()=>a.LT1,createFourBarLinkageWithBase:()=>a.SG2,createFourBarLinkageWithBaseController:()=>a.ELU,createGripper:()=>a.s3f,createGripperManualController:()=>a._x0,createHopper1DController:()=>a.q1i,createHopper2DController:()=>a.FOz,createMassSpringBunny:()=>a.UVj,createMockNavbot:()=>a.NIJ,createNavbot:()=>a.nIv,createNavbotController:()=>a.PU0,createNavbotMotor:()=>a.CYB,createNullController:()=>a.Idb,createPusher:()=>a.mPI,createPusherController:()=>a.KnR,createQuadruped:()=>a.ya2,createQuadrupedStandingController:()=>a.CcU,createQuadrupedTrottingController:()=>a.TZA,createRigidMeshBox:()=>a.wkG,createRigidTetrahedron:()=>a.Qto,createRimlessWheel:()=>a.zre,createRodPendulum:()=>a.uiV,createRodPendulumAtBottom:()=>a.eDG,createSO101:()=>a.VKT,createSO101PositionController:()=>a.w86,createSimplePendulum:()=>a.twp,createSphere:()=>a.whP,createTwoRigidCubes:()=>a.iTg,createTwoRigidMeshBoxes:()=>a.gi$,createTwoRigidTetrahedron:()=>a.EBY});var r=n(44),a=n(241),s=e([r]);r=(s.then?(await s)():s)[0],(0,a.lIU)(r),i()}catch(e){i(e)}}))},942:(e,t,n)=>{n.a(e,(async(e,i)=>{try{n.d(t,{v:()=>f});var r=n(655),a=n(437),s=n(216),o=n(122),c=n(949),l=n(88),u=n(156),d=n(438),h=e([r,u]);[r,u]=h.then?(await h)():h;class f{constructor(e){this.simulator=e,this.massSpringDeformable=null,this.femDeformable=null,this.graphics=new s.A,this.meshes=new Map,this.meshSet=new Map,this.edgesMeshes=new Map,this.lines=new Map,this.fps=60,this.time=0}addDeformable(e){e instanceof r.InterfaceMassSpringDeformable?this.massSpringDeformable=e:this.femDeformable=e;const t=new a.LoY;let n=e.vertices();t.setAttribute("position",new a.THS(n,3));let i=e.facets();t.setIndex(new a.THS(i,1)),t.computeVertexNormals();const s=new a.tXL({color:2200782,side:a.$EB,flatShading:!0}),o=new a.eaF(t,s);o.frustumCulled=!1,this.meshes.set("deformable",o),this.graphics.scene.add(o)}updateDeformable(){let e=this.meshes.get("deformable"),t=this.femDeformable.vertices();e.geometry.setAttribute("position",new a.THS(t,3))}addMeshSet(e,t,n=16777215){let i=this.simulator.visual_base_vertices(e),r=this.simulator.facets(e),s=[];for(let e=0;e<i.length;e++){let t=i[e];const o=new a.LoY;o.setAttribute("position",new a.THS(t,3));let c=r[e];o.setIndex(new a.THS(c,1)),o.computeVertexNormals();const l=new a.tXL({color:n,side:a.$EB,flatShading:!0}),u=new a.eaF(o,l);u.frustumCulled=!1,s.push(u),this.graphics.scene.add(u)}this.meshSet.set(t,s)}updateMeshSet(e,t){let n=this.meshSet.get(t),i=this.simulator.isometry(e);for(let e of n)e.position.set(i[3],i[4],i[5]),e.rotation.set(i[0],i[1],i[2],"ZYX")}addCuboid(e,t,n,i,r,s=new a.kn4){const o=new a.iNn(n,i,r),c=new a.tXL({color:t,side:a.$EB,flatShading:!0});o.applyMatrix4(s);const l=new a.eaF(o,c);this.meshes.set(e,l),this.graphics.scene.add(l);const u=new a.TDQ(o),d=new a.mrM({color:0}),h=new a.DXC(u,d);this.edgesMeshes.set(e,h),this.graphics.scene.add(h)}addSphere(e,t,n){const i=new a.Gu$(n,32,32),r=new a.tXL({color:t,side:a.$EB,flatShading:!0,opacity:.5,transparent:!0}),s=new a.eaF(i,r);this.meshes.set(e,s),this.graphics.scene.add(s)}addLine(e,t,n){const i=new c.v,r=new l.G({color:t,linewidth:n,resolution:new a.I9Y(window.innerWidth,window.innerHeight)}),s=new o.X(i,r);this.lines.set(e,s),this.graphics.scene.add(s)}setPose(e,t){let n=[t[0],t[1],t[2]],i=[t[3],t[4],t[5]],r=this.meshes.get(e);r.rotation.set(n[0],n[1],n[2],"ZYX"),r.position.set(i[0],i[1],i[2]);let a=this.edgesMeshes.get(e);a&&(a.rotation.set(n[0],n[1],n[2],"ZYX"),a.position.set(i[0],i[1],i[2]))}setLineEndpoints(e,t,n){this.lines.get(e).geometry.setPositions([t[0],t[1],t[2],n[0],n[1],n[2]])}addCart(e){this.length=e;const t=new a.iNn(e,1,1),n=new a.V9B({color:65280});this.cart=new a.eaF(t,n),this.graphics.scene.add(this.cart)}addCartPole(e){const t=new a.iNn(3,.1,.1),n=new a.V9B({color:65280}),i=new a.eaF(t,n);this.meshes.set("cart",i),this.graphics.scene.add(i);const r=new a.Ho_(.1,.1,e,32),s=new a.V9B({color:16777215}),o=new a.eaF(r,s);o.position.y=-e/2,this.meshes.set("pole",o),this.graphics.scene.add(o)}addDoublemPendulum(e){this.length=e;const t=new a.Gu$(.2,32,32),n=new a.V9B({color:65280});this.bob=new a.eaF(t,n),this.graphics.scene.add(this.bob);const i=new a.Ho_(.1,.1,e,32),r=new a.V9B({color:16777215});this.rod=new a.eaF(i,r),this.rod.position.y=-e/2,this.graphics.scene.add(this.rod);const s=new a.Ho_(.1,.1,e,32),o=new a.V9B({color:16777215});this.rod2=new a.eaF(s,o),this.rod2.position.y=-e/2-e,this.graphics.scene.add(this.rod2)}addPendulum(e){const t=new a.Gu$(.2,32,32),n=new a.V9B({color:65280}),i=new a.eaF(t,n);this.meshes.set("pivot",i),this.graphics.scene.add(i);const r=new a.Ho_(.1,.1,e,32),s=new a.V9B({color:16777215}),o=new a.eaF(r,s);this.meshes.set("rod",o),this.graphics.scene.add(o)}addPlane(e,t,n){const i=(new a.Pq0).fromArray(e),r=i.clone().multiplyScalar(t),s=new a.bdM(n,n),o=new a.tXL({color:8421504,side:a.$EB,flatShading:!0}),c=new a.eaF(s,o);c.position.copy(r),c.lookAt(r.clone().add(i)),this.graphics.scene.add(c)}addRodPendulum(e){this.length=e;const t=new a.Gu$(.2,32,32),n=new a.V9B({color:65280});this.bob=new a.eaF(t,n),this.graphics.scene.add(this.bob);const i=new a.Ho_(.1,.1,e,32),r=new a.V9B({color:16777215});this.rod=new a.eaF(i,r),this.rod.position.y=-e/2,this.graphics.scene.add(this.rod)}addCube(e){const t=new a.iNn(e,e,e),n=new a.tXL({color:65280,side:a.$EB,flatShading:!0}),i=new a.eaF(t,n);this.meshes.set("cube",i),this.graphics.scene.add(i)}addRimlessWheel(e,t){const n=new a.Gu$(e,32,32),i=new a.V9B({color:65280}),r=new a.eaF(n,i);this.meshes.set("pivot",r),this.graphics.scene.add(r);for(let e=0;e<t;e++){const t=new a.Gu$(1,32,32),n=new a.V9B({color:16777215}),i=new a.eaF(t,n);this.meshes.set(`foot ${e+1}`,i),this.graphics.scene.add(i)}}addCompassGait(){this.addSphere("hip",16711680,.3),this.addCuboid("left leg",65280,.1,.1,2),this.addCuboid("right leg",65280,.1,.1,2)}addAcuatedAnkleHopper(){this.addSphere("foot",16777215,.1),this.addSphere("ankle",0,.05),this.addSphere("body",65280,.1)}addAcuatedHipHopper(){this.addCuboid("foot",16777215,.2,.2,.2),this.addSphere("hip",0,.05),this.addCuboid("body",65280,.2,.2,.2)}addQuadruped(){let e=.2,t=.2;this.addCuboid("body",16777215,1.5,.5,.5),this.addCuboid("fr_hip",16711680,e,e,e),this.addCuboid("fr_knee",65280,t,t,t),this.addCuboid("fl_hip",16711680,e,e,e),this.addCuboid("fl_knee",65280,t,t,t),this.addCuboid("br_hip",16711680,e,e,e),this.addCuboid("br_knee",65280,t,t,t),this.addCuboid("bl_hip",16711680,e,e,e),this.addCuboid("bl_knee",65280,t,t,t);for(let e=0;e<12;e++){const t=new a.Gu$(.1,32,32),n=new a.V9B({color:255}),i=new a.eaF(t,n);this.meshes.set(`foot ${e+1}`,i),this.graphics.scene.add(i)}}addPusher(){this.addCuboid("extension",16777215,.5,.5,.5),this.addCuboid("lift",16711680,.2,.2,1.75),this.addCuboid("cube",65280,.5,.5,.5)}addGripper(){this.addCuboid("lift",16711680,.2,.2,1),this.addCuboid("gripper_left",65280,.1,.4,.4),this.addCuboid("gripper_right",65280,.1,.4,.4),this.addCuboid("cube",255,.5,.5,.5)}add1DHopper(e,t,n,i){const r=new a.iNn(e,e,t),s=new a.V9B({color:65280}),o=new a.eaF(r,s);this.meshes.set("hopper_body",o),this.graphics.scene.add(o);const c=new a.Gu$(n,32,32),l=new a.V9B({color:16777215}),u=new a.eaF(c,l);this.meshes.set("hopper_leg",u),this.graphics.scene.add(u);const d=new a.Gu$(i,32,32),h=new a.V9B({color:255}),f=new a.eaF(d,h);this.meshes.set("hopper_foot",f),this.graphics.scene.add(f)}add2DHopper(e,t,n,i,r){this.addCuboid("hopper_body",65280,e,e,t),this.addSphere("hopper_hip",16711680,n),this.addLine("hopper_body_hip_line",16711680,3),this.addSphere("hopper_piston",16777215,i),this.addCuboid("hopper_leg",255,.1,.1,r)}addFourBarLinkage(){let e=.1,t=(new a.kn4).makeTranslation(0,0,-.5);this.addCuboid("bar1",16711680,e,e,1,t),this.addCuboid("bar2",16711680,e,e,1,t);let n=(new a.kn4).makeTranslation(.5,0,0);this.addCuboid("bar3",65280,1,e,e,n)}addFourBarLinkageWithBase(){let e=.1;this.addCuboid("base",255,1,e,e);let t=(new a.kn4).makeTranslation(0,0,-.5);this.addCuboid("bar1",16711680,e,e,1,t),this.addCuboid("bar2",16711680,e,e,1,t);let n=(new a.kn4).makeTranslation(.5,0,0);this.addCuboid("bar3",65280,1,e,e,n)}addMockNavbot(){let e=.1;this.addCuboid("base",255,1,e,e);let t=(new a.kn4).makeTranslation(0,0,-.5);this.addCuboid("right_leg",16711680,e,e,1,t),this.addCuboid("right_link",16711680,e,e,1,t),this.addCuboid("left_leg",16711680,e,e,1,t),this.addCuboid("left_link",16711680,e,e,1,t);let n=(new a.kn4).makeTranslation(0,.5,0);this.addCuboid("right_foot",65280,e,1,e,n),this.addCuboid("left_foot",65280,e,1,e,n)}addNavbot(){this.addMeshSet(0,"base",16711680),this.addMeshSet(1,"leg_left",65280),this.addMeshSet(2,"foot_left",65535),this.addMeshSet(3,"link_left",255),this.addMeshSet(4,"wheel_left",6710886),this.addMeshSet(5,"leg_right",65280),this.addMeshSet(6,"foot_right",65535),this.addMeshSet(7,"link_right",255),this.addMeshSet(8,"wheel_right",6710886)}updateNavbot(){this.updateMeshSet(0,"base"),this.updateMeshSet(1,"leg_left"),this.updateMeshSet(2,"foot_left"),this.updateMeshSet(3,"link_left"),this.updateMeshSet(4,"wheel_left"),this.updateMeshSet(5,"leg_right"),this.updateMeshSet(6,"foot_right"),this.updateMeshSet(7,"link_right"),this.updateMeshSet(8,"wheel_right")}updateRodPose(e){this.rod.position.x=this.length/2*Math.sin(e),this.rod.position.y=-this.length/2*Math.cos(e),this.rod.rotation.z=e}updateDoublemPendulumPose(e,t){this.updateRodPose(e),this.rod2.position.x=this.length*Math.sin(e)+this.length/2*Math.sin(e+t),this.rod2.position.y=-this.length*Math.cos(e)-this.length/2*Math.cos(e+t),this.rod2.rotation.z=e+t}updateCartPose(e){this.cart.position.x=e}updateCartPole(e,t){this.meshes.get("cart").position.x=e;let n=this.meshes.get("pole");const i=n.geometry.parameters.height;n.position.x=e+i/2*Math.sin(t),n.position.y=-i/2*Math.cos(t),n.rotation.z=t}updatePendulumPose(e){let t=this.meshes.get("rod");const n=t.geometry.parameters.height;t.position.x=n/2*Math.sin(e),t.position.y=-n/2*Math.cos(e),t.rotation.z=e}updateSpherePose(e){let t=[e[0],e[1],e[2]],n=[e[3],e[4],e[5]],i=this.meshes.get("sphere");i.rotation.set(t[0],t[1],t[2]),i.position.set(n[0],n[1],n[2])}updateCube(e){let t=[e[0],e[1],e[2]],n=[e[3],e[4],e[5]],i=this.meshes.get("cube");i.rotation.set(t[0],t[1],t[2]),i.position.set(n[0],n[1],n[2])}updateRimlessWheel(e,t){let n=[e[0],e[1],e[2]],i=[e[3],e[4],e[5]],r=this.meshes.get("pivot");r.rotation.set(n[0],n[1],n[2]),r.position.set(i[0],i[1],i[2]);for(let e=0;e<t.length;e+=3)this.meshes.get("foot "+(e/3+1)).position.set(t[e],t[e+1],t[e+2])}updateCompassGait(e){let t=e.subarray(0,6);this.setPose("hip",t);let n=e.subarray(6,12);this.setPose("left leg",n);let i=e.subarray(12,18);this.setPose("right leg",i)}updateActuatedAnkleHopper(e){let t=e.subarray(0,6);this.setPose("foot",t);let n=e.subarray(6,12);this.setPose("ankle",n);let i=e.subarray(12,18);this.setPose("body",i)}updateActuatedHipHopper(e){let t=e.subarray(0,6);this.setPose("foot",t);let n=e.subarray(6,12);this.setPose("hip",n);let i=e.subarray(12,18);this.setPose("body",i)}updateQuadruped(e,t){let n=0,i=e.subarray(n,n+6);this.setPose("body",i),n+=6;let r=e.subarray(n,n+6);this.setPose("fr_hip",r),n+=6;let a=e.subarray(n,n+6);this.setPose("fr_knee",a),n+=6;let s=e.subarray(n,n+6);this.setPose("fl_hip",s),n+=6;let o=e.subarray(n,n+6);this.setPose("fl_knee",o),n+=6;let c=e.subarray(n,n+6);this.setPose("br_hip",c),n+=6;let l=e.subarray(n,n+6);this.setPose("br_knee",l),n+=6;let u=e.subarray(n,n+6);this.setPose("bl_hip",u),n+=6;let d=e.subarray(n,n+6);this.setPose("bl_knee",d);for(let e=0;e<t.length;e+=3)this.meshes.get("foot "+(e/3+1)).position.set(t[e],t[e+1],t[e+2])}updatePusher(e){let t=0,n=e.subarray(t,t+6);this.setPose("extension",n),t+=6;let i=e.subarray(t,t+6);this.setPose("lift",i),t+=6;let r=e.subarray(t,t+6);this.setPose("cube",r)}updateGripper(e){let t=0,n=e.subarray(t,t+6);this.setPose("lift",n),t+=6;let i=e.subarray(t,t+6);this.setPose("gripper_left",i),t+=6;let r=e.subarray(t,t+6);this.setPose("gripper_right",r),t+=6;let a=e.subarray(t,t+6);this.setPose("cube",a)}update1DHopper(e){let t=[e[0],e[1],e[2]],n=[e[3],e[4],e[5]],i=this.meshes.get("hopper_body");i.rotation.set(t[0],t[1],t[2]),i.position.set(n[0],n[1],n[2]);let r=[e[6],e[7],e[8]],a=[e[9],e[10],e[11]],s=this.meshes.get("hopper_leg");s.rotation.set(r[0],r[1],r[2]),s.position.set(a[0],a[1],a[2]);let o=[e[12],e[13],e[14]],c=[e[15],e[16],e[17]],l=this.meshes.get("hopper_foot");l.rotation.set(o[0],o[1],o[2]),l.position.set(c[0],c[1],c[2])}update2DHopper(e){let t=e.subarray(0,6);this.setPose("hopper_body",t);let n=e.subarray(6,12);this.setPose("hopper_hip",n),this.setLineEndpoints("hopper_body_hip_line",t.subarray(3,6),n.subarray(3,6)),this.setPose("hopper_piston",e.subarray(12,18));let i=this.meshes.get("hopper_leg").geometry.parameters.depth,r=e.subarray(18,24),s=new a.O9p(r[0],r[1],r[2]),o=new a.PTz;o.setFromEuler(s);let c=new a.Pq0(0,0,i/2);c.applyQuaternion(o),r[3]+=c.x,r[4]+=c.y,r[5]+=c.z,this.setPose("hopper_leg",r)}updateBalancingBotPose(e){let t=e.subarray(0,6);this.setPose("body",t);let n=e.subarray(6,12);this.setPose("wheel_left",n);let i=e.subarray(12,18);this.setPose("wheel_right",i)}updateFourBarLinkage(e){let t=e.subarray(0,6);this.setPose("bar1",t);let n=e.subarray(6,12);this.setPose("bar2",n);let i=e.subarray(12,18);this.setPose("bar3",i)}updateFourBarLinkageWithBase(e){let t=0,n=e.subarray(t,t+6);this.setPose("base",n),t+=6;let i=e.subarray(t,t+6);this.setPose("bar1",i),t+=6;let r=e.subarray(t,t+6);this.setPose("bar2",r),t+=6;let a=e.subarray(t,t+6);this.setPose("bar3",a)}updateMockNavbot(e){let t=0,n=e.subarray(t,t+6);this.setPose("base",n),t+=6;let i=e.subarray(t,t+6);this.setPose("right_leg",i),t+=6;let r=e.subarray(t,t+6);this.setPose("right_link",r),t+=6;let a=e.subarray(t,t+6);this.setPose("left_leg",a),t+=6;let s=e.subarray(t,t+6);this.setPose("left_link",s),t+=6;let o=e.subarray(t,t+6);this.setPose("right_foot",o),t+=6;let c=e.subarray(t,t+6);this.setPose("left_foot",c)}async run(e){this.graphics.render();const t=1/this.fps;let n=new d.G(3);u.V.a?n[0]=-100:u.V.d?n[0]=100:n[0]=0,u.V.w?n[1]=100:u.V.s?n[1]=-100:n[1]=0,u.V[" "]?n[2]=1:n[2]=0,this.simulator.step(t,n),this.time+=t,this.updateNavbot();let i=this.meshes.get("wheel_left");if(null!=i){let e=this.simulator.sphere_center(4);i.position.set(e[0],e[1],e[2])}let r=this.meshes.get("wheel_right");if(null!=r){let e=this.simulator.sphere_center(8);r.position.set(e[0],e[1],e[2])}this.simulator.poses(),requestAnimationFrame((e=>this.run(e)))}}i()}catch(e){i(e)}}))},949:(e,t,n)=>{n.d(t,{v:()=>r});var i=n(643);class r extends i.n{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setPositions(n),this}setColors(e){const t=e.length-3,n=new Float32Array(2*t);for(let i=0;i<t;i+=3)n[2*i]=e[i],n[2*i+1]=e[i+1],n[2*i+2]=e[i+2],n[2*i+3]=e[i+3],n[2*i+4]=e[i+4],n[2*i+5]=e[i+5];return super.setColors(n),this}fromLine(e){const t=e.geometry;return this.setPositions(t.attributes.position.array),this}}}},a={};function s(e){var t=a[e];if(void 0!==t)return t.exports;var n=a[e]={id:e,exports:{}};return r[e](n,n.exports,s),n.exports}e="function"==typeof Symbol?Symbol("webpack queues"):"__webpack_queues__",t="function"==typeof Symbol?Symbol("webpack exports"):"__webpack_exports__",n="function"==typeof Symbol?Symbol("webpack error"):"__webpack_error__",i=e=>{e&&e.d<1&&(e.d=1,e.forEach((e=>e.r--)),e.forEach((e=>e.r--?e.r++:e())))},s.a=(r,a,s)=>{var o;s&&((o=[]).d=-1);var c,l,u,d=new Set,h=r.exports,f=new Promise(((e,t)=>{u=t,l=e}));f[t]=h,f[e]=e=>(o&&e(o),d.forEach(e),f.catch((e=>{}))),r.exports=f,a((r=>{var a;c=(r=>r.map((r=>{if(null!==r&&"object"==typeof r){if(r[e])return r;if(r.then){var a=[];a.d=0,r.then((e=>{s[t]=e,i(a)}),(e=>{s[n]=e,i(a)}));var s={};return s[e]=e=>e(a),s}}var o={};return o[e]=e=>{},o[t]=r,o})))(r);var s=()=>c.map((e=>{if(e[n])throw e[n];return e[t]})),l=new Promise((t=>{(a=()=>t(s)).r=0;var n=e=>e!==o&&!d.has(e)&&(d.add(e),e&&!e.d&&(a.r++,e.push(a)));c.map((t=>t[e](n)))}));return a.r?l:s()}),(e=>(e?u(f[n]=e):l(h),i(o)))),o&&o.d<0&&(o.d=0)},s.d=(e,t)=>{for(var n in t)s.o(t,n)&&!s.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},s.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),s.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},s.v=(e,t,n,i)=>{var r=fetch(s.p+""+n+".module.wasm"),a=()=>r.then((e=>e.arrayBuffer())).then((e=>WebAssembly.instantiate(e,i))).then((t=>Object.assign(e,t.instance.exports)));return r.then((t=>"function"==typeof WebAssembly.instantiateStreaming?WebAssembly.instantiateStreaming(t,i).then((t=>Object.assign(e,t.instance.exports)),(e=>{if("application/wasm"!==t.headers.get("Content-Type"))return console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",e),a();throw e})):a()))},(()=>{var e;s.g.importScripts&&(e=s.g.location+"");var t=s.g.document;if(!e&&t&&(t.currentScript&&"SCRIPT"===t.currentScript.tagName.toUpperCase()&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");if(n.length)for(var i=n.length-1;i>-1&&(!e||!/^http(s?):/.test(e));)e=n[i--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/^blob:/,"").replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),s.p=e})(),s(156)})();